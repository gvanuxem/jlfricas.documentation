.. index:: PolynomialRationalRoots

.. _l506f6c796e6f6d69616c526174696f6e616c526f6f7473:

PolynomialRationalRoots(F, UP)
==============================

:viewcode:`rdeefx.spad line 271 <rdeefx.spad#L271>` :editcode:`[edit on github] <rdeefx.spad#L271>`

* F: Join(\ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ , \ :ref:`LinearlyExplicitOver <l4c696e6561726c794578706c696369744f766572>`\  \ :ref:`Integer <l496e7465676572>`\ )

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  F


undocumented


.. _l506f6c796e6f6d69616c526174696f6e616c526f6f7473-6765745f726174696f6e616c5f726f6f7473:

.. index::
   pair: PolynomialRationalRoots; get_rational_roots

:spadfun:`get_rational_roots`\: UP -> \ :ref:`List <l4c697374>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``get_rational_roots(p)``\  finds rational root of \ ``p``\ .

.. _l506f6c796e6f6d69616c526174696f6e616c526f6f7473-696e7465676572426f756e64:

.. index::
   pair: PolynomialRationalRoots; integerBound

:spadfun:`integerBound`\: UP -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``integerBound(p)``\  returns a lower bound on the negative integer roots of \ ``p``\ , and 0 if \ ``p``\  has no negative integer roots.


