.. index:: StreamTranscendentalFunctionsNonCommutative

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665:

StreamTranscendentalFunctionsNonCommutative Coef
================================================

:viewcode:`sttf.spad line 447 <sttf.spad#L447>` :editcode:`[edit on github] <sttf.spad#L447>`

* Coef: \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 


StreamTranscendentalFunctionsNonCommutative implements transcendental functions on Taylor series over a non-commutative ring, where a Taylor series is represented by a stream of its coefficients.


.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-5e:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; ^

:spadfun:`^`\: (\ :ref:`Stream <l53747265616d>`\  Coef, \ :ref:`Stream <l53747265616d>`\  Coef) -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``st1 ^ st2``\  computes the power of a power series \ ``st1``\  by another power series \ ``st2``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-61636f73:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; acos

:spadfun:`acos`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``acos(st)``\  computes arccosine of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-61636f7368:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; acosh

:spadfun:`acosh`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``acosh(st)``\  computes the inverse hyperbolic cosine of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-61636f74:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; acot

:spadfun:`acot`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``acot(st)``\  computes arccotangent of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-61636f7468:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; acoth

:spadfun:`acoth`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``acoth(st)``\  computes the inverse hyperbolic cotangent of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-61637363:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; acsc

:spadfun:`acsc`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``acsc(st)``\  computes arccosecant of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-6163736368:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; acsch

:spadfun:`acsch`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``acsch(st)``\  computes the inverse hyperbolic cosecant of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-61736563:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; asec

:spadfun:`asec`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``asec(st)``\  computes arcsecant of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-6173656368:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; asech

:spadfun:`asech`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``asech(st)``\  computes the inverse hyperbolic secant of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-6173696e:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; asin

:spadfun:`asin`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``asin(st)``\  computes arcsine of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-6173696e68:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; asinh

:spadfun:`asinh`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``asinh(st)``\  computes the inverse hyperbolic sine of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-6174616e:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; atan

:spadfun:`atan`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``atan(st)``\  computes arctangent of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-6174616e68:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; atanh

:spadfun:`atanh`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``atanh(st)``\  computes the inverse hyperbolic tangent of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-636f73:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; cos

:spadfun:`cos`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``cos(st)``\  computes cosine of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-636f7368:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; cosh

:spadfun:`cosh`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``cosh(st)``\  computes the hyperbolic cosine of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-636f74:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; cot

:spadfun:`cot`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``cot(st)``\  computes cotangent of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-636f7468:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; coth

:spadfun:`coth`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``coth(st)``\  computes the hyperbolic cotangent of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-637363:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; csc

:spadfun:`csc`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``csc(st)``\  computes cosecant of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-63736368:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; csch

:spadfun:`csch`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``csch(st)``\  computes the hyperbolic cosecant of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-657870:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; exp

:spadfun:`exp`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``exp(st)``\  computes the exponential of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-6c6f67:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; log

:spadfun:`log`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``log(st)``\  computes the log of a power series.

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-736563:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; sec

:spadfun:`sec`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``sec(st)``\  computes secant of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-73656368:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; sech

:spadfun:`sech`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``sech(st)``\  computes the hyperbolic secant of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-73696e:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; sin

:spadfun:`sin`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``sin(st)``\  computes sine of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-73696e68:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; sinh

:spadfun:`sinh`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``sinh(st)``\  computes the hyperbolic sine of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-74616e:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; tan

:spadfun:`tan`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``tan(st)``\  computes tangent of a power series \ ``st``\ .

.. _l53747265616d5472616e7363656e64656e74616c46756e6374696f6e734e6f6e436f6d6d75746174697665-74616e68:

.. index::
   pair: StreamTranscendentalFunctionsNonCommutative; tanh

:spadfun:`tanh`\: \ :ref:`Stream <l53747265616d>`\  Coef -> \ :ref:`Stream <l53747265616d>`\  Coef 
  \ ``tanh(st)``\  computes the hyperbolic tangent of a power series \ ``st``\ .


