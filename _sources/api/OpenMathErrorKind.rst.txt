.. index:: OpenMathErrorKind

.. _l4f70656e4d6174684572726f724b696e64:

OpenMathErrorKind
=================

:viewcode:`omerror.spad line 1 <omerror.spad#L1>` :editcode:`[edit on github] <omerror.spad#L1>`


\ :ref:`OpenMathErrorKind <l4f70656e4d6174684572726f724b696e64>`\  represents different kinds of OpenMath errors: specifically parse errors, unknown \ ``CD``\  or symbol errors, and read errors.


.. _l4f70656e4d6174684572726f724b696e64-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4f70656e4d6174684572726f724b696e64-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4f70656e4d6174684572726f724b696e64-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


.. index::
   pair: OpenMathErrorKind; coerce

:spadfun:`coerce`\: \ :ref:`Symbol <l53796d626f6c>`\  -> % 
  \ ``coerce(u)``\  creates an OpenMath error object of an appropriate type if \ ``u``\  is one of \ ``OMParseError``\ , \ ``OMReadError``\ , \ ``OMUnknownCD``\  or \ ``OMUnknownSymbol``\ , otherwise it raises a runtime error.

.. _l4f70656e4d6174684572726f724b696e64-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4f70656e4d6174684572726f724b696e64-4f4d50617273654572726f723f:

.. index::
   pair: OpenMathErrorKind; OMParseError?

:spadfun:`OMParseError?`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``OMParseError?(u)``\  tests whether \ ``u``\  is an OpenMath parsing error.

.. _l4f70656e4d6174684572726f724b696e64-4f4d526561644572726f723f:

.. index::
   pair: OpenMathErrorKind; OMReadError?

:spadfun:`OMReadError?`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``OMReadError?(u)``\  tests whether \ ``u``\  is an OpenMath read error.

.. _l4f70656e4d6174684572726f724b696e64-4f4d556e6b6e6f776e43443f:

.. index::
   pair: OpenMathErrorKind; OMUnknownCD?

:spadfun:`OMUnknownCD?`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``OMUnknownCD?(u)``\  tests whether \ ``u``\  is an OpenMath unknown \ ``CD``\  error.

.. _l4f70656e4d6174684572726f724b696e64-4f4d556e6b6e6f776e53796d626f6c3f:

.. index::
   pair: OpenMathErrorKind; OMUnknownSymbol?

:spadfun:`OMUnknownSymbol?`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``OMUnknownSymbol?(u)``\  tests whether \ ``u``\  is an OpenMath unknown symbol error.


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

