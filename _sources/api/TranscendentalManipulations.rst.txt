.. index:: TranscendentalManipulations

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73:

TranscendentalManipulations(R, F)
=================================

:viewcode:`manip.spad line 507 <manip.spad#L507>` :editcode:`[edit on github] <manip.spad#L507>`

* R: Join(\ :ref:`Comparable <l436f6d70617261626c65>`\ , \ :ref:`GcdDomain <l476364446f6d61696e>`\ )

* F: Join(\ :ref:`FunctionSpace <l46756e6374696f6e5370616365>`\  R, \ :ref:`TranscendentalFunctionCategory <l5472616e7363656e64656e74616c46756e6374696f6e43617465676f7279>`\ )


TranscendentalManipulations provides functions to simplify and expand expressions involving transcendental operators.


.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-636f7332736563:

.. index::
   pair: TranscendentalManipulations; cos2sec

:spadfun:`cos2sec`\: F -> F 
  \ ``cos2sec(f)``\  converts every \ ``cos(u)``\  appearing in \ ``f``\  into \ ``1/sec(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-636f73683273656368:

.. index::
   pair: TranscendentalManipulations; cosh2sech

:spadfun:`cosh2sech`\: F -> F 
  \ ``cosh2sech(f)``\  converts every \ ``cosh(u)``\  appearing in \ ``f``\  into \ ``1/sech(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-636f743274616e:

.. index::
   pair: TranscendentalManipulations; cot2tan

:spadfun:`cot2tan`\: F -> F 
  \ ``cot2tan(f)``\  converts every \ ``cot(u)``\  appearing in \ ``f``\  into \ ``1/tan(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-636f743274726967:

.. index::
   pair: TranscendentalManipulations; cot2trig

:spadfun:`cot2trig`\: F -> F 
  \ ``cot2trig(f)``\  converts every \ ``cot(u)``\  appearing in \ ``f``\  into \ ``cos(u)/sin(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-636f74683274616e68:

.. index::
   pair: TranscendentalManipulations; coth2tanh

:spadfun:`coth2tanh`\: F -> F 
  \ ``coth2tanh(f)``\  converts every \ ``coth(u)``\  appearing in \ ``f``\  into \ ``1/tanh(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-636f7468327472696768:

.. index::
   pair: TranscendentalManipulations; coth2trigh

:spadfun:`coth2trigh`\: F -> F 
  \ ``coth2trigh(f)``\  converts every \ ``coth(u)``\  appearing in \ ``f``\  into \ ``cosh(u)/sinh(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-6373633273696e:

.. index::
   pair: TranscendentalManipulations; csc2sin

:spadfun:`csc2sin`\: F -> F 
  \ ``csc2sin(f)``\  converts every \ ``csc(u)``\  appearing in \ ``f``\  into \ ``1/sin(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-637363683273696e68:

.. index::
   pair: TranscendentalManipulations; csch2sinh

:spadfun:`csch2sinh`\: F -> F 
  \ ``csch2sinh(f)``\  converts every \ ``csch(u)``\  appearing in \ ``f``\  into \ ``1/sinh(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-657870616e64:

.. index::
   pair: TranscendentalManipulations; expand

:spadfun:`expand`\: F -> F 
  \ ``expand(f)``\  performs the following expansions on \ ``f:``\  \begin{items} \item 1. logs of products are expanded into sums of logs. \item 2. trigonometric and hyperbolic trigonometric functions of sums are expanded into sums of products of trigonometric and hyperbolic trigonometric functions. \item 3. formal powers of the form \ ``(a/b)^c``\  are expanded into \ ``a^c * b^(-c)``\ . \end{items}

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-657870616e644c6f67:

.. index::
   pair: TranscendentalManipulations; expandLog

:spadfun:`expandLog`\: F -> F 
  \ ``expandLog(f)``\  converts every \ ``log(a/b)``\  appearing in \ ``f``\  into \ ``log(a) - log(b)``\ , and every \ ``log(a*b)``\  into \ ``log(a) + log(b)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-657870616e64506f776572:

.. index::
   pair: TranscendentalManipulations; expandPower

:spadfun:`expandPower`\: F -> F 
  \ ``expandPower(f)``\  converts every power \ ``(a/b)^c``\  appearing in \ ``f``\  into \ ``a^c * b^(-c)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-657870616e645472696750726f6475637473:

.. index::
   pair: TranscendentalManipulations; expandTrigProducts

:spadfun:`expandTrigProducts`\: F -> F if R has \ :ref:`PatternMatchable <l5061747465726e4d6174636861626c65>`\  R and F has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`Pattern <l5061747465726e>`\  R and R has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`Pattern <l5061747465726e>`\  R and F has \ :ref:`PatternMatchable <l5061747465726e4d6174636861626c65>`\  R
  \ ``expandTrigProducts(e)``\  replaces \ ``sin(x)*sin(y)``\  by \ ``(cos(x-y)-cos(x+y))/2``\ , \ ``cos(x)*cos(y)``\  by \ ``(cos(x-y)+cos(x+y))/2``\ , and \ ``sin(x)*cos(y)``\  by \ ``(sin(x-y)+sin(x+y))/2``\ . Note: this operation uses pattern matcher, so it is relatively expensive. To avoid getting into an infinite loop the transformations are applied at most ten times.

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-687472696773:

.. index::
   pair: TranscendentalManipulations; htrigs

:spadfun:`htrigs`\: F -> F 
  \ ``htrigs(f)``\  converts all the exponentials in \ ``f``\  into hyperbolic sines and cosines.

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-72656d6f7665436f73685371:

.. index::
   pair: TranscendentalManipulations; removeCoshSq

:spadfun:`removeCoshSq`\: F -> F 
  \ ``removeCoshSq(f)``\  converts every \ ``cosh(u)^2``\  appearing in \ ``f``\  into \ ``1 - sinh(u)^2``\ , and also reduces higher powers of \ ``cosh(u)``\  with that formula.

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-72656d6f7665436f735371:

.. index::
   pair: TranscendentalManipulations; removeCosSq

:spadfun:`removeCosSq`\: F -> F 
  \ ``removeCosSq(f)``\  converts every \ ``cos(u)^2``\  appearing in \ ``f``\  into \ ``1 - sin(u)^2``\ , and also reduces higher powers of \ ``cos(u)``\  with that formula.

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-72656d6f766553696e685371:

.. index::
   pair: TranscendentalManipulations; removeSinhSq

:spadfun:`removeSinhSq`\: F -> F 
  \ ``removeSinhSq(f)``\  converts every \ ``sinh(u)^2``\  appearing in \ ``f``\  into \ ``1 - cosh(u)^2``\ , and also reduces higher powers of \ ``sinh(u)``\  with that formula.

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-72656d6f766553696e5371:

.. index::
   pair: TranscendentalManipulations; removeSinSq

:spadfun:`removeSinSq`\: F -> F 
  \ ``removeSinSq(f)``\  converts every \ ``sin(u)^2``\  appearing in \ ``f``\  into \ ``1 - cos(u)^2``\ , and also reduces higher powers of \ ``sin(u)``\  with that formula.

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-73656332636f73:

.. index::
   pair: TranscendentalManipulations; sec2cos

:spadfun:`sec2cos`\: F -> F 
  \ ``sec2cos(f)``\  converts every \ ``sec(u)``\  appearing in \ ``f``\  into \ ``1/cos(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-7365636832636f7368:

.. index::
   pair: TranscendentalManipulations; sech2cosh

:spadfun:`sech2cosh`\: F -> F 
  \ ``sech2cosh(f)``\  converts every \ ``sech(u)``\  appearing in \ ``f``\  into \ ``1/cosh(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-73696d706c696679:

.. index::
   pair: TranscendentalManipulations; simplify

:spadfun:`simplify`\: F -> F 
  \ ``simplify(f)``\  performs the following simplifications on \ ``f:``\  \begin{items} \item 1. rewrites trigs and hyperbolic trigs in terms of \ ``sin``\  , \ ``cos``\ , \ ``sinh``\ , \ ``cosh``\ . \item 2. rewrites \ ``sin^2``\  and \ ``sinh^2``\  in terms of \ ``cos``\  and \ ``cosh``\ , \item 3. rewrites \ ``exp(a)*exp(b)``\  as \ ``exp(a+b)``\ . \item 4. rewrites \ ``(a^(1/n))^m * (a^(1/s))^t``\  as a single power of a single radical of \ ``a``\ . \end{items}

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-73696d706c696679457870:

.. index::
   pair: TranscendentalManipulations; simplifyExp

:spadfun:`simplifyExp`\: F -> F 
  \ ``simplifyExp(f)``\  performs the following simplifications on \ ``f:``\  \begin{items} \item 1. rewrites \ ``exp(a)*exp(b)``\  as \ ``exp(a+b)``\ . \item 2. rewrites \ ``a^b*a^c``\  as \ ``a^(b+c)``\ . \item 3. rewrites \ ``exp(a)/exp(b)``\  as \ ``exp(a-b)``\ . \item 4. rewrites \ ``a^b/a^c``\  as \ ``a^(b-c)``\ . \end{items}

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-73696d706c6966794c6f67:

.. index::
   pair: TranscendentalManipulations; simplifyLog

:spadfun:`simplifyLog`\: F -> F 
  \ ``simplifyLog(f)``\  converts every \ ``log(a) - log(b)``\  appearing in \ ``f``\  into \ ``log(a/b)``\ , every \ ``log(a) + log(b)``\  into \ ``log(a*b)``\  and every \ ``n*log(a)``\  into \ ``log(a^n)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-73696e32637363:

.. index::
   pair: TranscendentalManipulations; sin2csc

:spadfun:`sin2csc`\: F -> F 
  \ ``sin2csc(f)``\  converts every \ ``sin(u)``\  appearing in \ ``f``\  into \ ``1/csc(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-73696e683263736368:

.. index::
   pair: TranscendentalManipulations; sinh2csch

:spadfun:`sinh2csch`\: F -> F 
  \ ``sinh2csch(f)``\  converts every \ ``sinh(u)``\  appearing in \ ``f``\  into \ ``1/csch(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-74616e32636f74:

.. index::
   pair: TranscendentalManipulations; tan2cot

:spadfun:`tan2cot`\: F -> F 
  \ ``tan2cot(f)``\  converts every \ ``tan(u)``\  appearing in \ ``f``\  into \ ``1/cot(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-74616e3274726967:

.. index::
   pair: TranscendentalManipulations; tan2trig

:spadfun:`tan2trig`\: F -> F 
  \ ``tan2trig(f)``\  converts every \ ``tan(u)``\  appearing in \ ``f``\  into \ ``sin(u)/cos(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-74616e6832636f7468:

.. index::
   pair: TranscendentalManipulations; tanh2coth

:spadfun:`tanh2coth`\: F -> F 
  \ ``tanh2coth(f)``\  converts every \ ``tanh(u)``\  appearing in \ ``f``\  into \ ``1/coth(u)``\ .

.. _l5472616e7363656e64656e74616c4d616e6970756c6174696f6e73-74616e68327472696768:

.. index::
   pair: TranscendentalManipulations; tanh2trigh

:spadfun:`tanh2trigh`\: F -> F 
  \ ``tanh2trigh(f)``\  converts every \ ``tanh(u)``\  appearing in \ ``f``\  into \ ``sinh(u)/cosh(u)``\ .


