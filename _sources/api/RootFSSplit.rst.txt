.. index:: RootFSSplit

.. _l526f6f74465353706c6974:

RootFSSplit(R, F)
=================

:viewcode:`intpar.spad line 376 <intpar.spad#L376>` :editcode:`[edit on github] <intpar.spad#L376>`

* R: Join(\ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Comparable <l436f6d70617261626c65>`\ )

* F: \ :ref:`FunctionSpace <l46756e6374696f6e5370616365>`\  R


This package implements \ ``alg_split_roots``\  allowing its reuse.


.. _l526f6f74465353706c6974-616c675f73706c69745f726f6f7430:

.. index::
   pair: RootFSSplit; alg_split_root0

:spadfun:`alg_split_root0`\: (F, \ :ref:`Kernel <l4b65726e656c>`\  F, \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  F 
  \ ``alg_split_root0(f, r, n)``\  returns \ ``[a1, ..., an]``\  such that \ ``f = a1 + a2*r + ... an*r^(n - 1)``\ . \ ``r``\  must be a root and \ ``n``\  must be its degree.

.. _l526f6f74465353706c6974-616c675f73706c69745f726f6f7473:

.. index::
   pair: RootFSSplit; alg_split_roots

:spadfun:`alg_split_roots`\: (\ :ref:`List <l4c697374>`\  F, \ :ref:`Kernel <l4b65726e656c>`\  F, \ :ref:`Kernel <l4b65726e656c>`\  F) -> \ :ref:`List <l4c697374>`\  Record(funs: \ :ref:`List <l4c697374>`\  F, nroot: F, npow1: \ :ref:`Integer <l496e7465676572>`\ , npow2: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``alg_split_roots(lf, r1, r2)``\  splits each \ ``f``\  in \ ``lf``\  into linear combination of product of powers of \ ``r1``\  and \ ``r2``\  which must be independent roots.


