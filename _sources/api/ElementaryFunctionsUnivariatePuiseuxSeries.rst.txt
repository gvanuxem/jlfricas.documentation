.. index:: ElementaryFunctionsUnivariatePuiseuxSeries

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573:

ElementaryFunctionsUnivariatePuiseuxSeries(Coef, ULS, UPXS, EFULS)
==================================================================

:viewcode:`efupxs.spad line 1 <efupxs.spad#L1>` :editcode:`[edit on github] <efupxs.spad#L1>`

* Coef: \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 

* ULS: \ :ref:`UnivariateLaurentSeriesCategory <l556e69766172696174654c617572656e7453657269657343617465676f7279>`\  Coef

* UPXS: \ :ref:`UnivariatePuiseuxSeriesConstructorCategory <l556e697661726961746550756973657578536572696573436f6e7374727563746f7243617465676f7279>`\ (Coef, ULS)

* EFULS: \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  ULS


This package provides elementary functions on any Laurent series domain over a field which was constructed from a Taylor series domain. These functions are implemented by calling the corresponding functions on the Taylor series domain. We also provide 'partial functions' which compute transcendental functions of Laurent series when possible and return "failed" when this is not possible.


.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-5e:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; ^

:spadfun:`^`\: (UPXS, \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> UPXS if Coef has \ :ref:`Field <l4669656c64>`\ 
  \ ``z ^ r``\  raises a Puiseaux series \ ``z``\  to a rational power \ ``r``\ 

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61636f73:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; acos

:spadfun:`acos`\: UPXS -> UPXS 
  \ ``acos(z)``\  returns the arc-cosine of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61636f7368:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; acosh

:spadfun:`acosh`\: UPXS -> UPXS 
  \ ``acosh(z)``\  returns the inverse hyperbolic cosine of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61636f7368496643616e:

\ :ref:`acoshIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-61636f7368496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61636f73496643616e:

\ :ref:`acosIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-61636f73496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61636f74:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; acot

:spadfun:`acot`\: UPXS -> UPXS 
  \ ``acot(z)``\  returns the arc-cotangent of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61636f7468:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; acoth

:spadfun:`acoth`\: UPXS -> UPXS 
  \ ``acoth(z)``\  returns the inverse hyperbolic cotangent of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61636f7468496643616e:

\ :ref:`acothIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-61636f7468496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61636f74496643616e:

\ :ref:`acotIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-61636f74496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61637363:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; acsc

:spadfun:`acsc`\: UPXS -> UPXS 
  \ ``acsc(z)``\  returns the arc-cosecant of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6163736368:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; acsch

:spadfun:`acsch`\: UPXS -> UPXS 
  \ ``acsch(z)``\  returns the inverse hyperbolic cosecant of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6163736368496643616e:

\ :ref:`acschIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-6163736368496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61637363496643616e:

\ :ref:`acscIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-61637363496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61736563:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; asec

:spadfun:`asec`\: UPXS -> UPXS 
  \ ``asec(z)``\  returns the arc-secant of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6173656368:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; asech

:spadfun:`asech`\: UPXS -> UPXS 
  \ ``asech(z)``\  returns the inverse hyperbolic secant of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6173656368496643616e:

\ :ref:`asechIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-6173656368496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-61736563496643616e:

\ :ref:`asecIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-61736563496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6173696e:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; asin

:spadfun:`asin`\: UPXS -> UPXS 
  \ ``asin(z)``\  returns the arc-sine of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6173696e68:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; asinh

:spadfun:`asinh`\: UPXS -> UPXS 
  \ ``asinh(z)``\  returns the inverse hyperbolic sine of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6173696e68496643616e:

\ :ref:`asinhIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-6173696e68496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6173696e496643616e:

\ :ref:`asinIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-6173696e496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6174616e:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; atan

:spadfun:`atan`\: UPXS -> UPXS 
  \ ``atan(z)``\  returns the arc-tangent of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6174616e68:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; atanh

:spadfun:`atanh`\: UPXS -> UPXS 
  \ ``atanh(z)``\  returns the inverse hyperbolic tangent of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6174616e68496643616e:

\ :ref:`atanhIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-6174616e68496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6174616e496643616e:

\ :ref:`atanIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-6174616e496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-636f73:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; cos

:spadfun:`cos`\: UPXS -> UPXS 
  \ ``cos(z)``\  returns the cosine of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-636f7368:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; cosh

:spadfun:`cosh`\: UPXS -> UPXS 
  \ ``cosh(z)``\  returns the hyperbolic cosine of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-636f7368496643616e:

\ :ref:`coshIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-636f7368496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-636f73496643616e:

\ :ref:`cosIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-636f73496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-636f74:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; cot

:spadfun:`cot`\: UPXS -> UPXS 
  \ ``cot(z)``\  returns the cotangent of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-636f7468:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; coth

:spadfun:`coth`\: UPXS -> UPXS 
  \ ``coth(z)``\  returns the hyperbolic cotangent of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-636f7468496643616e:

\ :ref:`cothIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-636f7468496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-636f74496643616e:

\ :ref:`cotIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-636f74496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-637363:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; csc

:spadfun:`csc`\: UPXS -> UPXS 
  \ ``csc(z)``\  returns the cosecant of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-63736368:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; csch

:spadfun:`csch`\: UPXS -> UPXS 
  \ ``csch(z)``\  returns the hyperbolic cosecant of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-63736368496643616e:

\ :ref:`cschIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-63736368496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-637363496643616e:

\ :ref:`cscIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-637363496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-657870:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; exp

:spadfun:`exp`\: UPXS -> UPXS 
  \ ``exp(z)``\  returns the exponential of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-657870496643616e:

\ :ref:`expIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-657870496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6c6f67:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; log

:spadfun:`log`\: UPXS -> UPXS 
  \ ``log(z)``\  returns the logarithm of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6c6f67496643616e:

\ :ref:`logIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-6c6f67496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-6e7468526f6f74496643616e:

\ :ref:`nthRootIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-6e7468526f6f74496643616e>`\ \: (UPXS, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-736563:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; sec

:spadfun:`sec`\: UPXS -> UPXS 
  \ ``sec(z)``\  returns the secant of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-73656368:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; sech

:spadfun:`sech`\: UPXS -> UPXS 
  \ ``sech(z)``\  returns the hyperbolic secant of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-73656368496643616e:

\ :ref:`sechIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-73656368496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-736563496643616e:

\ :ref:`secIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-736563496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-73696e:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; sin

:spadfun:`sin`\: UPXS -> UPXS 
  \ ``sin(z)``\  returns the sine of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-73696e68:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; sinh

:spadfun:`sinh`\: UPXS -> UPXS 
  \ ``sinh(z)``\  returns the hyperbolic sine of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-73696e68496643616e:

\ :ref:`sinhIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-73696e68496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-73696e496643616e:

\ :ref:`sinIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-73696e496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-74616e:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; tan

:spadfun:`tan`\: UPXS -> UPXS 
  \ ``tan(z)``\  returns the tangent of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-74616e68:

.. index::
   pair: ElementaryFunctionsUnivariatePuiseuxSeries; tanh

:spadfun:`tanh`\: UPXS -> UPXS 
  \ ``tanh(z)``\  returns the hyperbolic tangent of a Puiseux series \ ``z``\ .

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-74616e68496643616e:

\ :ref:`tanhIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-74616e68496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS

.. _l456c656d656e7461727946756e6374696f6e73556e697661726961746550756973657578536572696573-74616e496643616e:

\ :ref:`tanIfCan <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73-74616e496643616e>`\ \: UPXS -> Union(UPXS, failed) 
  from \ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS


\ :ref:`PartialTranscendentalFunctions <l5061727469616c5472616e7363656e64656e74616c46756e6374696f6e73>`\  UPXS 

