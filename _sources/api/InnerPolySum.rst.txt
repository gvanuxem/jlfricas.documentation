.. index:: InnerPolySum

.. _l496e6e6572506f6c7953756d:

InnerPolySum(E, V, R, P)
========================

:viewcode:`sum.spad line 1 <sum.spad#L1>` :editcode:`[edit on github] <sum.spad#L1>`

* E: \ :ref:`OrderedAbelianMonoidSup <l4f7264657265644162656c69616e4d6f6e6f6964537570>`\ 

* V: \ :ref:`OrderedSet <l4f726465726564536574>`\ 

* R: \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 

* P: \ :ref:`PolynomialCategory <l506f6c796e6f6d69616c43617465676f7279>`\ (R, E, V)


tools for the summation packages.


.. _l496e6e6572506f6c7953756d-73756d:

.. index::
   pair: InnerPolySum; sum

:spadfun:`sum`\: (P, V) -> Record(num: P, den: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``sum(p(n), n)``\  returns \ ``P(n)``\ , the indefinite sum of \ ``p(n)``\  with respect to upward difference on \ ``n``\ , i.e. \ ``P(n+1) - P(n) = p(n)``\ .


.. index::
   pair: InnerPolySum; sum

:spadfun:`sum`\: (P, V, \ :ref:`Segment <l5365676d656e74>`\  P) -> Record(num: P, den: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``sum(p(n), n = a..b)``\  returns \ ``p(a) + p(a+1) + ... + p(b)``\ .


