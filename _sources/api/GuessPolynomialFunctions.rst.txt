.. index:: GuessPolynomialFunctions

.. _l4775657373506f6c796e6f6d69616c46756e6374696f6e73:

GuessPolynomialFunctions R
==========================

:viewcode:`mantepse.spad line 3810 <mantepse.spad#L3810>` :editcode:`[edit on github] <mantepse.spad#L3810>`

* R: \ :ref:`Ring <l52696e67>`\ 


This package exports coercion and retraction from EXPR INT to polynomials


.. _l4775657373506f6c796e6f6d69616c46756e6374696f6e73-45585052523246:

.. index::
   pair: GuessPolynomialFunctions; EXPRR2F

:spadfun:`EXPRR2F`\: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R 
  

.. _l4775657373506f6c796e6f6d69616c46756e6374696f6e73-46324558505252:

.. index::
   pair: GuessPolynomialFunctions; F2EXPRR

:spadfun:`F2EXPRR`\: \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R -> \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  

.. _l4775657373506f6c796e6f6d69616c46756e6374696f6e73-69696d32:

.. index::
   pair: GuessPolynomialFunctions; iim2

:spadfun:`iim2`\: R -> \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  should be local but conditional

.. _l4775657373506f6c796e6f6d69616c46756e6374696f6e73-696972657472616374566172:

.. index::
   pair: GuessPolynomialFunctions; iiretractVar

:spadfun:`iiretractVar`\: \ :ref:`Kernel <l4b65726e656c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R 
  should be local but conditional


