.. index:: Ruleset

.. _l52756c65736574:

Ruleset(Base, R, F)
===================

:viewcode:`rule.spad line 238 <rule.spad#L238>` :editcode:`[edit on github] <rule.spad#L238>`

* Base: \ :ref:`SetCategory <l53657443617465676f7279>`\ 

* R: Join(\ :ref:`Ring <l52696e67>`\ , \ :ref:`PatternMatchable <l5061747465726e4d6174636861626c65>`\  Base, \ :ref:`Comparable <l436f6d70617261626c65>`\ , \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`Pattern <l5061747465726e>`\  Base)

* F: Join(\ :ref:`FunctionSpace <l46756e6374696f6e5370616365>`\  R, \ :ref:`PatternMatchable <l5061747465726e4d6174636861626c65>`\  Base, \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`Pattern <l5061747465726e>`\  Base)


A ruleset is a set of pattern matching rules grouped together.


.. _l52756c65736574-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l52756c65736574-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l52756c65736574-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l52756c65736574-656c74:

\ :ref:`elt <l456c7461626c65-656c74>`\ \: (%, F) -> F 
  from \ :ref:`Eltable <l456c7461626c65>`\ (F, F)


.. index::
   pair: Ruleset; elt

:spadfun:`elt`\: (%, F, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> F 
  \ ``elt(r, f, n)``\  or \ ``r``\ (\ ``f``\ , \ ``n``\ ) applies all the rules of \ ``r``\  to \ ``f``\  at most \ ``n``\  times.

.. _l52756c65736574-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l52756c65736574-72756c6573:

.. index::
   pair: Ruleset; rules

:spadfun:`rules`\: % -> \ :ref:`List <l4c697374>`\  \ :ref:`RewriteRule <l5265777269746552756c65>`\ (Base, R, F) 
  \ ``rules(r)``\  returns the rules contained in \ ``r``\ .

.. _l52756c65736574-72756c65736574:

.. index::
   pair: Ruleset; ruleset

:spadfun:`ruleset`\: \ :ref:`List <l4c697374>`\  \ :ref:`RewriteRule <l5265777269746552756c65>`\ (Base, R, F) -> % 
  \ ``ruleset([r1, ..., rn])``\  creates the rule set \ ``{r1, ..., rn}``\ .


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`Eltable <l456c7461626c65>`\ (F, F) 

\ :ref:`SetCategory <l53657443617465676f7279>`\  

