.. index:: SegmentBinding

.. _l5365676d656e7442696e64696e67:

SegmentBinding S
================

:viewcode:`seg.spad line 221 <seg.spad#L221>` :editcode:`[edit on github] <seg.spad#L221>`

* S: \ :ref:`Type <l54797065>`\ 


This domain is used to provide the function argument syntax \ ``v=a..b``\ . This is used, for example, by the top-level \ :spadfun:`draw`\  functions.


.. _l5365676d656e7442696e64696e67-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l5365676d656e7442696e64696e67-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l5365676d656e7442696e64696e67-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l5365676d656e7442696e64696e67-636f6e76657274:

\ :ref:`convert <l436f6e7665727469626c65546f-636f6e76657274>`\ \: % -> \ :ref:`InputForm <l496e707574466f726d>`\  if S has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 
  from \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 

.. _l5365676d656e7442696e64696e67-6571756174696f6e:

.. index::
   pair: SegmentBinding; equation

:spadfun:`equation`\: (\ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Segment <l5365676d656e74>`\  S) -> % 
  \ ``equation(v, a..b)``\  creates a segment binding value with variable \ ``v``\  and segment \ ``a..b``\ . Note that the interpreter parses \ ``v=a..b``\  to this form.

.. _l5365676d656e7442696e64696e67-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l5365676d656e7442696e64696e67-7365676d656e74:

.. index::
   pair: SegmentBinding; segment

:spadfun:`segment`\: % -> \ :ref:`Segment <l5365676d656e74>`\  S 
  \ ``segment(segb)``\  returns the segment from the right hand side of the \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\ . For example, if \ ``segb``\  is \ ``v=a..b``\ , then \ ``segment(segb)``\  returns \ ``a..b``\ .

.. _l5365676d656e7442696e64696e67-7661726961626c65:

.. index::
   pair: SegmentBinding; variable

:spadfun:`variable`\: % -> \ :ref:`Symbol <l53796d626f6c>`\  
  \ ``variable(segb)``\  returns the variable from the left hand side of the \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\ . For example, if \ ``segb``\  is \ ``v=a..b``\ , then \ ``variable(segb)``\  returns \ ``v``\ .


\ :ref:`BasicType <l426173696354797065>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\  if S has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 

\ :ref:`SetCategory <l53657443617465676f7279>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

