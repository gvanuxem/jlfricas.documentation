.. index:: PointsOfFiniteOrderRational

.. _l506f696e74734f6646696e6974654f72646572526174696f6e616c:

PointsOfFiniteOrderRational(UP, UPUP, R)
========================================

:viewcode:`pfo.spad line 119 <pfo.spad#L119>` :editcode:`[edit on github] <pfo.spad#L119>`

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 

* UPUP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP

* R: \ :ref:`FunctionFieldCategory <l46756e6374696f6e4669656c6443617465676f7279>`\ (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , UP, UPUP)


This package provides function for testing whether a divisor on a curve is a torsion divisor.


.. _l506f696e74734f6646696e6974654f72646572526174696f6e616c-6f72646572:

.. index::
   pair: PointsOfFiniteOrderRational; order

:spadfun:`order`\: \ :ref:`FiniteDivisor <l46696e69746544697669736f72>`\ (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , UP, UPUP, R) -> Union(\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , failed) 
  \ ``order(f)``\  \undocumented

.. _l506f696e74734f6646696e6974654f72646572526174696f6e616c-746f7273696f6e3f:

.. index::
   pair: PointsOfFiniteOrderRational; torsion?

:spadfun:`torsion?`\: \ :ref:`FiniteDivisor <l46696e69746544697669736f72>`\ (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , UP, UPUP, R) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``torsion?(f)``\  \undocumented

.. _l506f696e74734f6646696e6974654f72646572526174696f6e616c-746f7273696f6e496643616e:

.. index::
   pair: PointsOfFiniteOrderRational; torsionIfCan

:spadfun:`torsionIfCan`\: \ :ref:`FiniteDivisor <l46696e69746544697669736f72>`\ (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , UP, UPUP, R) -> Union(Record(order: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , function: R), failed) 
  \ ``torsionIfCan(f)``\  \undocumented


