.. index:: ExpressionLinearSolve

.. _l45787072657373696f6e4c696e656172536f6c7665:

ExpressionLinearSolve(R, F)
===========================

:viewcode:`expr.spad line 1167 <expr.spad#L1167>` :editcode:`[edit on github] <expr.spad#L1167>`

* R: Join(\ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ , \ :ref:`Comparable <l436f6d70617261626c65>`\ )

* F: \ :ref:`FunctionSpace <l46756e6374696f6e5370616365>`\  R


Solver for linear systems represented as list of expressions. More efficient than using solve because it does not check that system really is linear.


.. _l45787072657373696f6e4c696e656172536f6c7665-6c696e5f736f6c:

.. index::
   pair: ExpressionLinearSolve; lin_sol

:spadfun:`lin_sol`\: (\ :ref:`List <l4c697374>`\  F, \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ ) -> Union(\ :ref:`List <l4c697374>`\  F, failed) 
  \ ``lin_sol(eql, vl)``\  solves system of equations \ ``eql``\  for variables in \ ``vl``\ . Equations must be linear in variables from \ ``vl``\ .


