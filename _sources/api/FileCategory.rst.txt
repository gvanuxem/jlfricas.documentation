.. index:: FileCategory

.. _l46696c6543617465676f7279:

FileCategory(Name, S)
=====================

:viewcode:`files.spad line 1 <files.spad#L1>` :editcode:`[edit on github] <files.spad#L1>`

* Name: \ :ref:`SetCategory <l53657443617465676f7279>`\ 

* S: \ :ref:`SetCategory <l53657443617465676f7279>`\ 


This category provides an interface to operate on files in the computer\ ``'s``\  file system. The precise method of naming files is determined by the Name parameter. The type of the contents of the file is determined by \ ``S``\ .


.. _l46696c6543617465676f7279-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l46696c6543617465676f7279-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l46696c6543617465676f7279-636c6f736521:

.. index::
   pair: FileCategory; close!

:spadfun:`close!`\: % -> % 
  \ ``close!(f)``\  returns the file \ ``f``\  closed to input and output.

.. _l46696c6543617465676f7279-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l46696c6543617465676f7279-666c757368:

.. index::
   pair: FileCategory; flush

:spadfun:`flush`\: % -> \ :ref:`Void <l566f6964>`\  
  \ ``flush(f)``\  make sure that buffered data in written out to the operating system.

.. _l46696c6543617465676f7279-696f6d6f6465:

.. index::
   pair: FileCategory; iomode

:spadfun:`iomode`\: % -> \ :ref:`String <l537472696e67>`\  
  \ ``iomode(f)``\  returns the status of the file \ ``f``\ . The input/output status of \ ``f``\  may be "input", "output" or "closed" mode.

.. _l46696c6543617465676f7279-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l46696c6543617465676f7279-6e616d65:

.. index::
   pair: FileCategory; name

:spadfun:`name`\: % -> Name 
  \ ``name(f)``\  returns the external name of the file \ ``f``\ .

.. _l46696c6543617465676f7279-6f70656e:

.. index::
   pair: FileCategory; open

:spadfun:`open`\: (Name, \ :ref:`String <l537472696e67>`\ ) -> % 
  \ ``open(s, mode)``\  returns a file \ ``s``\  open for operation in the indicated mode: "input" or "output".


.. index::
   pair: FileCategory; open

:spadfun:`open`\: Name -> % 
  \ ``open(s)``\  returns the file \ ``s``\  open for input.

.. _l46696c6543617465676f7279-7265616421:

.. index::
   pair: FileCategory; read!

:spadfun:`read!`\: % -> S 
  \ ``read!(f)``\  extracts a value from file \ ``f``\ . The state of \ ``f``\  is modified so a subsequent call to \ :spadfun:`read!`\  will return the next element.

.. _l46696c6543617465676f7279-72656f70656e21:

.. index::
   pair: FileCategory; reopen!

:spadfun:`reopen!`\: (%, \ :ref:`String <l537472696e67>`\ ) -> % 
  \ ``reopen!(f, mode)``\  returns a file \ ``f``\  reopened for operation in the indicated mode: "input" or "output". \ ``reopen!(f,"input")``\  will reopen the file \ ``f``\  for input.

.. _l46696c6543617465676f7279-777269746521:

.. index::
   pair: FileCategory; write!

:spadfun:`write!`\: (%, S) -> S 
  \ ``write!(f, s)``\  puts the value \ ``s``\  into the file \ ``f``\ . The state of \ ``f``\  is modified so subsequents call to \ ``write!``\  will append one after another.


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

