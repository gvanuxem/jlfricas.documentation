.. index:: InnerModularHermitePade

.. _l496e6e65724d6f64756c61724865726d69746550616465:

InnerModularHermitePade
=======================

:viewcode:`modhpsol.spad line 359 <modhpsol.spad#L359>` :editcode:`[edit on github] <modhpsol.spad#L359>`


This package solves Hermite-Pade interpolation problem over ring of integer polynomials. We use reduction modulo primes and modular reconstruction to reduce problem to polynomials modulo \$\ ``Z_p``\ \$. Then we use evaluation and Lagrange interpolation to reduce problem to solving over \$\ ``Z_p``\ \$.


.. _l496e6e65724d6f64756c61724865726d69746550616465-646f5f6d6f64756c61725f736f6c7665:

.. index::
   pair: InnerModularHermitePade; do_modular_solve

:spadfun:`do_modular_solve`\: (\ :ref:`Vector <l566563746f72>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ ) -> Union(Record(basis: \ :ref:`TwoDimensionalArray <l54776f44696d656e73696f6e616c4172726179>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , defects: \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , cinds: \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ ), no_solution) 
  

.. _l496e6e65724d6f64756c61724865726d69746550616465-646f5f706f6c795f696e7465676572:

.. index::
   pair: InnerModularHermitePade; do_poly_integer

:spadfun:`do_poly_integer`\: (\ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`PrimitiveArray <l5072696d69746976654172726179>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , (\ :ref:`List <l4c697374>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`U32Vector <l553332566563746f72>`\ ) -> Union(Record(defects: \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , cinds: \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , rowlen: \ :ref:`Integer <l496e7465676572>`\ , offsetdata: \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , expdata: \ :ref:`SortedExponentVector <l536f727465644578706f6e656e74566563746f72>`\ , coeffdata: \ :ref:`PrimitiveArray <l5072696d69746976654172726179>`\  \ :ref:`Integer <l496e7465676572>`\ ), no_solution) 
  

.. _l496e6e65724d6f64756c61724865726d69746550616465-6d6572676532:

.. index::
   pair: InnerModularHermitePade; merge2

:spadfun:`merge2`\: (\ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SortedExponentVector <l536f727465644578706f6e656e74566563746f72>`\ , \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SortedExponentVector <l536f727465644578706f6e656e74566563746f72>`\ ) -> Record(offsetdata: \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , expdata: \ :ref:`SortedExponentVector <l536f727465644578706f6e656e74566563746f72>`\ ) 
  

.. _l496e6e65724d6f64756c61724865726d69746550616465-6d657267655f6578706f6e656e7473:

.. index::
   pair: InnerModularHermitePade; merge_exponents

:spadfun:`merge_exponents`\: (\ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SortedExponentVector <l536f727465644578706f6e656e74566563746f72>`\ , \ :ref:`Vector <l566563746f72>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SortedExponentVector <l536f727465644578706f6e656e74566563746f72>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\  
  


