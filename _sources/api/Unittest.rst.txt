.. index:: Unittest

.. _l556e697474657374:

Unittest
========

:viewcode:`unittest.spad line 617 <unittest.spad#L617>` :editcode:`[edit on github] <unittest.spad#L617>`


Unittest is a package that provides functions for regression testing. Note that it calls the interpreter, thus, all functions require that their arguments be passed as strings.


.. _l556e697474657374-74657374436f6d706c6578457175616c73:

.. index::
   pair: Unittest; testComplexEquals

:spadfun:`testComplexEquals`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``testComplexEquals(ex1, ex2)``\  states that \ ``ex1``\  and \ ``ex2``\  should be approximately equal as complex numbers, taking into account \ :spadfun:`testAbsolutePrecision`\  and \ :spadfun:`testRelativePrecision`\ .

.. _l556e697474657374-74657374457175616c73:

.. index::
   pair: Unittest; testEquals

:spadfun:`testEquals`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``testEquals(ex1, ex2)``\  states that \ ``ex1``\  and \ ``ex2``\  should be equal. To sidestep the possibility that the equality function of the domain \ ``R``\  performs some simplifications, we convert \ ``ex1``\  and \ ``ex2``\  to \ ``InputForm``\ , if possible.

.. _l556e697474657374-746573744c6962726172794572726f72:

.. index::
   pair: Unittest; testLibraryError

:spadfun:`testLibraryError`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``testLibraryError ex``\  states that ex should throw an error. Such a test will never count as a fatal error.

.. _l556e697474657374-746573744e6f74457175616c73:

.. index::
   pair: Unittest; testNotEquals

:spadfun:`testNotEquals`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``testNotEquals(ex1, ex2)``\  states that \ ``ex1``\  and \ ``ex2``\  should be different.

.. _l556e697474657374-746573745265616c457175616c73:

.. index::
   pair: Unittest; testRealEquals

:spadfun:`testRealEquals`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``testRealEquals(ex1, ex2)``\  states that \ ``ex1``\  and \ ``ex2``\  should be approximately equal as real numbers, taking into account \ :spadfun:`testAbsolutePrecision`\  and \ :spadfun:`testRelativePrecision`\ .

.. _l556e697474657374-7465737454727565:

.. index::
   pair: Unittest; testTrue

:spadfun:`testTrue`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``testTrue(ex)``\  states that \ ``ex``\  should be \ ``true``\ .

.. _l556e697474657374-786674657374436f6d706c6578457175616c73:

.. index::
   pair: Unittest; xftestComplexEquals

:spadfun:`xftestComplexEquals`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  xftestComplexEquals is like testComplexEquals, but expects failure.

.. _l556e697474657374-786674657374457175616c73:

.. index::
   pair: Unittest; xftestEquals

:spadfun:`xftestEquals`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  xftestEquals is like testEquals, but expects failure.

.. _l556e697474657374-7866746573744c6962726172794572726f72:

.. index::
   pair: Unittest; xftestLibraryError

:spadfun:`xftestLibraryError`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  xftestLibraryError is like testLibraryError, but expects failure.

.. _l556e697474657374-7866746573744e6f74457175616c73:

.. index::
   pair: Unittest; xftestNotEquals

:spadfun:`xftestNotEquals`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  xftestNotEquals is like testNotEquals, but expects failure.

.. _l556e697474657374-7866746573745265616c457175616c73:

.. index::
   pair: Unittest; xftestRealEquals

:spadfun:`xftestRealEquals`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  xftestRealEquals is like testRealEquals, but expects failure.

.. _l556e697474657374-78667465737454727565:

.. index::
   pair: Unittest; xftestTrue

:spadfun:`xftestTrue`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  xftestTrue is like testTrue, but expects failure.


