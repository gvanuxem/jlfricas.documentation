.. index:: LinearOrdinaryDifferentialOperatorFactorizer

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a6572:

LinearOrdinaryDifferentialOperatorFactorizer(F, UP)
===================================================

:viewcode:`lodof.spad line 344 <lodof.spad#L344>` :editcode:`[edit on github] <lodof.spad#L344>`

* F: Join(\ :ref:`Field <l4669656c64>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  F


\ :ref:`LinearOrdinaryDifferentialOperatorFactorizer <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a6572>`\  provides a factorizer for linear ordinary differential operators whose coefficients are rational functions.


.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a6572-666163746f7231:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer; factor1

:spadfun:`factor1`\: \ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP -> \ :ref:`List <l4c697374>`\  \ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP if F has \ :ref:`AlgebraicallyClosedField <l416c67656272616963616c6c79436c6f7365644669656c64>`\ 
  \ ``factor1(a)``\  returns the factorisation of a, assuming that a has no first-order right factor.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a6572-666163746f72:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer; factor

:spadfun:`factor`\: (\ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP, UP -> \ :ref:`List <l4c697374>`\  F) -> \ :ref:`List <l4c697374>`\  \ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP 
  \ ``factor(a, zeros)``\  returns the factorisation of a. \ ``zeros``\  is a zero finder in \ ``UP``\ .


.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer; factor

:spadfun:`factor`\: \ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP -> \ :ref:`List <l4c697374>`\  \ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP if F has \ :ref:`AlgebraicallyClosedField <l416c67656272616963616c6c79436c6f7365644669656c64>`\ 
  \ ``factor(a)``\  returns the factorisation of a.


