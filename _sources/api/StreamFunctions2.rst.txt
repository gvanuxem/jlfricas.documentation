.. index:: StreamFunctions2

.. _l53747265616d46756e6374696f6e7332:

StreamFunctions2(A, B)
======================

:viewcode:`stream.spad line 1194 <stream.spad#L1194>` :editcode:`[edit on github] <stream.spad#L1194>`

* A: \ :ref:`Type <l54797065>`\ 

* B: \ :ref:`Type <l54797065>`\ 


Functions defined on streams with entries in two sets.


.. _l53747265616d46756e6374696f6e7332-6d6170:

.. index::
   pair: StreamFunctions2; map

:spadfun:`map`\: (A -> B, \ :ref:`Stream <l53747265616d>`\  A) -> \ :ref:`Stream <l53747265616d>`\  B 
  \ ``map(f, s)``\  returns a stream whose elements are the function \ ``f``\  applied to the corresponding elements of \ ``s``\ . Note: \ ``map(f, [x0, x1, x2, ...]) = [f(x0), f(x1), f(x2), ..]``\ .

.. _l53747265616d46756e6374696f6e7332-726564756365:

.. index::
   pair: StreamFunctions2; reduce

:spadfun:`reduce`\: (B, (A, B) -> B, \ :ref:`Stream <l53747265616d>`\  A) -> B 
  \ ``reduce(b, f, u)``\ , where \ ``u``\  is a finite stream \ ``[x0, x1, ..., xn]``\ , returns the value \ ``r(n)``\  computed as follows: \ ``r0 = f(x0, b), r1 = f(x1, r0), ..., r(n) = f(xn, r(n-1))``\ .

.. _l53747265616d46756e6374696f6e7332-7363616e:

.. index::
   pair: StreamFunctions2; scan

:spadfun:`scan`\: (B, (A, B) -> B, \ :ref:`Stream <l53747265616d>`\  A) -> \ :ref:`Stream <l53747265616d>`\  B 
  \ ``scan(b, h, [x0, x1, x2, ...])``\  returns \ ``[y0, y1, y2, ...]``\ , where \ ``y0 = h(x0, b)``\ , \ ``y1 = h(x1, y0)``\ , \ ``...``\  \ ``yn = h(xn, y(n-1))``\ .


