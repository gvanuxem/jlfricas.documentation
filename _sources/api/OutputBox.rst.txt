.. index:: OutputBox

.. _l4f7574707574426f78:

OutputBox
=========

:viewcode:`fmt.spad line 180 <fmt.spad#L180>` :editcode:`[edit on github] <fmt.spad#L180>`


The domain \ ``OutputBox``\  represents the two-dimensional form of an expression by a number of strings (lines). Such a box has a baseline (at which such boxes will be horizontally aligned, a height (size above and including the baseline), a depth (size below the baseline), and a width (horizontal size).


.. _l4f7574707574426f78-626f78:

.. index::
   pair: OutputBox; box

:spadfun:`box`\: \ :ref:`String <l537472696e67>`\  -> % 
  \ ``box(s)``\  creates a box that contains the string \ ``s``\ .

.. _l4f7574707574426f78-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l4f7574707574426f78-6465707468:

.. index::
   pair: OutputBox; depth

:spadfun:`depth`\: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``depth(box)``\  returns the height of the \ ``box``\  below the baseline.

.. _l4f7574707574426f78-656d7074793f:

.. index::
   pair: OutputBox; empty?

:spadfun:`empty?`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``empty?(b)``\  returns \ ``true``\  of the box has height and depth equal to 0.

.. _l4f7574707574426f78-656d707479:

.. index::
   pair: OutputBox; empty

:spadfun:`empty`\: () -> % 
  Create an empty box of size 0.

.. _l4f7574707574426f78-6863656e746572:

.. index::
   pair: OutputBox; hcenter

:spadfun:`hcenter`\: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> % -> % 
  \ ``hcenter(w)(box)``\  centers the box horizontally inside a box of width \ ``w``\ .

.. _l4f7574707574426f78-68636f6e636174:

.. index::
   pair: OutputBox; hconcat

:spadfun:`hconcat`\: \ :ref:`List <l4c697374>`\  % -> % 
  \ ``hconcat(lbox)``\  aligns the boxes at their baseline and concats those boxes horizontally from left to right.

.. _l4f7574707574426f78-686569676874:

.. index::
   pair: OutputBox; height

:spadfun:`height`\: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``height(box)``\  returns the height of the \ ``box``\  (above the baseline) including the baseline.

.. _l4f7574707574426f78-6c696e6573:

.. index::
   pair: OutputBox; lines

:spadfun:`lines`\: % -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``lines(box)``\  returns the contents of the \ ``box``\  as strings (all of the same length (width(\ ``box``\ )).

.. _l4f7574707574426f78-706164:

.. index::
   pair: OutputBox; pad

:spadfun:`pad`\: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % -> % 
  \ ``pad(t, b, l, r)(box)``\  returns a new box that is padded by \ ``t``\  empty lines at the top, \ ``b``\  empty lines at the bottom, \ ``l``\  space characters at the left, \ ``r``\  space characters at the right. If \ ``w``\ , \ ``h``\ , \ ``d``\  are the width, height and depth of box then the resulting box will have width l+w+r and height \ ``t+h``\  and depth \ ``d+b``\ .

.. _l4f7574707574426f78-76636f6e636174:

.. index::
   pair: OutputBox; vconcat

:spadfun:`vconcat`\: (\ :ref:`List <l4c697374>`\  %, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  \ ``vconcat(lbox, h)``\  returns \ ``vconcat(lbox,h, 0)``\ ,


.. index::
   pair: OutputBox; vconcat

:spadfun:`vconcat`\: (\ :ref:`List <l4c697374>`\  %, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  \ ``vconcat(lbox, h, adjust)``\  computes the maximal width of the boxes in the list \ ``lbox``\ ; then if \ ``adjust<0``\ , left adjusts, if \ ``adjust>0``\ , right adjusts, and otherwise centers each smaller box in a new box of this maximal width and returns a box by putting all the boxes vertically on top of each other. The height of the new box is given by \ ``h``\ , the depth results from the difference of the number of lines and \ ``h``\ .

.. _l4f7574707574426f78-7769647468:

.. index::
   pair: OutputBox; width

:spadfun:`width`\: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``width(box)``\  returns the width of the \ ``box``\ .


\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

