.. index:: GuessAlgebraicNumber

.. _l4775657373416c676562726169634e756d626572:

GuessAlgebraicNumber
====================

:viewcode:`mantepse.spad line 3897 <mantepse.spad#L3897>` :editcode:`[edit on github] <mantepse.spad#L3897>`


This package exports guessing of sequences of rational functions


.. _l4775657373416c676562726169634e756d626572-616c674465704850:

.. index::
   pair: GuessAlgebraicNumber; algDepHP

:spadfun:`algDepHP`\: (\ :ref:`List <l4c697374>`\  \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> Record(degreeStream: \ :ref:`Stream <l53747265616d>`\  \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , guessStream: \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , guessModGen: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , testGen: \ :ref:`List <l4c697374>`\  \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), exprStream: (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , kind: \ :ref:`Symbol <l53796d626f6c>`\ , qvar: \ :ref:`Symbol <l53796d626f6c>`\ , A: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) -> \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , AF: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ )) -> \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), AX: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , C: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) 
  

.. _l4775657373416c676562726169634e756d626572-646966664850:

.. index::
   pair: GuessAlgebraicNumber; diffHP

:spadfun:`diffHP`\: \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\  -> Record(degreeStream: \ :ref:`Stream <l53747265616d>`\  \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , guessStream: \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , guessModGen: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , testGen: \ :ref:`List <l4c697374>`\  \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), exprStream: (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , kind: \ :ref:`Symbol <l53796d626f6c>`\ , qvar: \ :ref:`Symbol <l53796d626f6c>`\ , A: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) -> \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , AF: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ )) -> \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), AX: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , C: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) 
  


.. index::
   pair: GuessAlgebraicNumber; diffHP

:spadfun:`diffHP`\: \ :ref:`Symbol <l53796d626f6c>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\  -> Record(degreeStream: \ :ref:`Stream <l53747265616d>`\  \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , guessStream: \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , guessModGen: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , testGen: \ :ref:`List <l4c697374>`\  \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), exprStream: (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , kind: \ :ref:`Symbol <l53796d626f6c>`\ , qvar: \ :ref:`Symbol <l53796d626f6c>`\ , A: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) -> \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , AF: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ )) -> \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), AX: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , C: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) if \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  has \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Symbol <l53796d626f6c>`\ 
  

.. _l4775657373416c676562726169634e756d626572-6775657373:

.. index::
   pair: GuessAlgebraicNumber; guess

:spadfun:`guess`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guess

:spadfun:`guess`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\ ((\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guess

:spadfun:`guess`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\ ((\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guess

:spadfun:`guess`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  

.. _l4775657373416c676562726169634e756d626572-6775657373414445:

.. index::
   pair: GuessAlgebraicNumber; guessADE

:spadfun:`guessADE`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessADE

:spadfun:`guessADE`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessADE

:spadfun:`guessADE`\: \ :ref:`Symbol <l53796d626f6c>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  has \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Symbol <l53796d626f6c>`\ 
  

.. _l4775657373416c676562726169634e756d626572-6775657373416c67:

.. index::
   pair: GuessAlgebraicNumber; guessAlg

:spadfun:`guessAlg`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessAlg

:spadfun:`guessAlg`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  

.. _l4775657373416c676562726169634e756d626572-6775657373416c67446570:

.. index::
   pair: GuessAlgebraicNumber; guessAlgDep

:spadfun:`guessAlgDep`\: (\ :ref:`List <l4c697374>`\  \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessAlgDep

:spadfun:`guessAlgDep`\: \ :ref:`List <l4c697374>`\  \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  

.. _l4775657373416c676562726169634e756d626572-677565737342696e526174:

.. index::
   pair: GuessAlgebraicNumber; guessBinRat

:spadfun:`guessBinRat`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessBinRat

:spadfun:`guessBinRat`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessBinRat

:spadfun:`guessBinRat`\: \ :ref:`Symbol <l53796d626f6c>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  has \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Symbol <l53796d626f6c>`\ 
  

.. _l4775657373416c676562726169634e756d626572-6775657373457870526174:

.. index::
   pair: GuessAlgebraicNumber; guessExpRat

:spadfun:`guessExpRat`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessExpRat

:spadfun:`guessExpRat`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessExpRat

:spadfun:`guessExpRat`\: \ :ref:`Symbol <l53796d626f6c>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  has \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Symbol <l53796d626f6c>`\ 
  

.. _l4775657373416c676562726169634e756d626572-67756573734645:

.. index::
   pair: GuessAlgebraicNumber; guessFE

:spadfun:`guessFE`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessFE

:spadfun:`guessFE`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  

.. _l4775657373416c676562726169634e756d626572-6775657373486f6c6f:

.. index::
   pair: GuessAlgebraicNumber; guessHolo

:spadfun:`guessHolo`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessHolo

:spadfun:`guessHolo`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessHolo

:spadfun:`guessHolo`\: \ :ref:`Symbol <l53796d626f6c>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  has \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Symbol <l53796d626f6c>`\ 
  

.. _l4775657373416c676562726169634e756d626572-677565737350616465:

.. index::
   pair: GuessAlgebraicNumber; guessPade

:spadfun:`guessPade`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessPade

:spadfun:`guessPade`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  

.. _l4775657373416c676562726169634e756d626572-677565737350526563:

.. index::
   pair: GuessAlgebraicNumber; guessPRec

:spadfun:`guessPRec`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessPRec

:spadfun:`guessPRec`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessPRec

:spadfun:`guessPRec`\: \ :ref:`Symbol <l53796d626f6c>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  has \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Symbol <l53796d626f6c>`\ 
  

.. _l4775657373416c676562726169634e756d626572-6775657373526174:

.. index::
   pair: GuessAlgebraicNumber; guessRat

:spadfun:`guessRat`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessRat

:spadfun:`guessRat`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessRat

:spadfun:`guessRat`\: \ :ref:`Symbol <l53796d626f6c>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  has \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Symbol <l53796d626f6c>`\ 
  

.. _l4775657373416c676562726169634e756d626572-6775657373526563:

.. index::
   pair: GuessAlgebraicNumber; guessRec

:spadfun:`guessRec`\: (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessRec

:spadfun:`guessRec`\: \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  


.. index::
   pair: GuessAlgebraicNumber; guessRec

:spadfun:`guessRec`\: \ :ref:`Symbol <l53796d626f6c>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  has \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Symbol <l53796d626f6c>`\ 
  

.. _l4775657373416c676562726169634e756d626572-73686966744850:

.. index::
   pair: GuessAlgebraicNumber; shiftHP

:spadfun:`shiftHP`\: \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\  -> Record(degreeStream: \ :ref:`Stream <l53747265616d>`\  \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , guessStream: \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , guessModGen: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , testGen: \ :ref:`List <l4c697374>`\  \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), exprStream: (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , kind: \ :ref:`Symbol <l53796d626f6c>`\ , qvar: \ :ref:`Symbol <l53796d626f6c>`\ , A: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) -> \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , AF: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ )) -> \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), AX: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , C: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) 
  


.. index::
   pair: GuessAlgebraicNumber; shiftHP

:spadfun:`shiftHP`\: \ :ref:`Symbol <l53796d626f6c>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\  -> Record(degreeStream: \ :ref:`Stream <l53747265616d>`\  \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , guessStream: \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , guessModGen: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , testGen: \ :ref:`List <l4c697374>`\  \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), exprStream: (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , kind: \ :ref:`Symbol <l53796d626f6c>`\ , qvar: \ :ref:`Symbol <l53796d626f6c>`\ , A: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) -> \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , AF: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ )) -> \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), AX: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , C: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) if \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  has \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Symbol <l53796d626f6c>`\ 
  

.. _l4775657373416c676562726169634e756d626572-73756273744850:

.. index::
   pair: GuessAlgebraicNumber; substHP

:spadfun:`substHP`\: \ :ref:`List <l4c697374>`\  \ :ref:`GuessOption <l47756573734f7074696f6e>`\  -> Record(degreeStream: \ :ref:`Stream <l53747265616d>`\  \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , guessStream: \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\  -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , guessModGen: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> (\ :ref:`List <l4c697374>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`U32Vector <l553332566563746f72>`\ , testGen: \ :ref:`List <l4c697374>`\  \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), exprStream: (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`Stream <l53747265616d>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , kind: \ :ref:`Symbol <l53796d626f6c>`\ , qvar: \ :ref:`Symbol <l53796d626f6c>`\ , A: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) -> \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , AF: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`UnivariateFormalPowerSeries <l556e6976617269617465466f726d616c506f776572536572696573>`\  \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ )) -> \ :ref:`SparseMultivariatePolynomial <l5370617273654d756c746976617269617465506f6c796e6f6d69616c>`\ (\ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), AX: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , C: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) 
  


