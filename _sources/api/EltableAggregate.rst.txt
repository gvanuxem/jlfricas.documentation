.. index:: EltableAggregate

.. _l456c7461626c65416767726567617465:

EltableAggregate(Dom, Im)
=========================

:viewcode:`aggcat.spad line 782 <aggcat.spad#L782>` :editcode:`[edit on github] <aggcat.spad#L782>`

* Dom: \ :ref:`Type <l54797065>`\ 

* Im: \ :ref:`Type <l54797065>`\ 


An eltable aggregate is one which can be viewed as a function. For example, the list \ ``[1, 7, 4]``\  can be applied to 1, 2, and 3 respectively and will return the integers 1, 7, and 4; thus this list may be viewed as mapping 1 to 1, 2 to 7 and 3 to 4. In general, an aggregate can map members of a domain \ *Dom*\  to an image domain \ *Im*\ .


.. _l456c7461626c65416767726567617465-656c74:

\ :ref:`elt <l456c7461626c65-656c74>`\ \: (%, Dom) -> Im 
  from \ :ref:`Eltable <l456c7461626c65>`\ (Dom, Im)


.. index::
   pair: EltableAggregate; elt

:spadfun:`elt`\: (%, Dom, Im) -> Im 
  \ ``elt(u, x, y)``\  applies \ ``u``\  to \ ``x``\  if \ ``x``\  is in the domain of \ ``u``\ , and returns \ ``y``\  otherwise.

.. _l456c7461626c65416767726567617465-71656c74:

.. index::
   pair: EltableAggregate; qelt

:spadfun:`qelt`\: (%, Dom) -> Im 
  \ ``qelt(u, x)``\  applies \ ``u``\  to \ ``x``\  without checking whether \ ``x``\  is in the domain of \ ``u``\ . If \ ``x``\  is not in the domain of \ ``u``\  a memory-access violation may occur. If a check on whether \ ``x``\  is in the domain of \ ``u``\  is required, use the function \ ``elt``\ .

.. _l456c7461626c65416767726567617465-71736574656c7421:

.. index::
   pair: EltableAggregate; qsetelt!

:spadfun:`qsetelt!`\: (%, Dom, Im) -> Im if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  \ ``qsetelt!(u, x, y)``\  sets the image of \ ``x``\  to be \ ``y``\  under \ ``u``\ , without checking that \ ``x``\  is in the domain of \ ``u``\ . If such a check is required use the function \ ``setelt!``\ .

.. _l456c7461626c65416767726567617465-736574656c7421:

.. index::
   pair: EltableAggregate; setelt!

:spadfun:`setelt!`\: (%, Dom, Im) -> Im if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  \ ``setelt!(u, x, y)``\  sets the image of \ ``x``\  to be \ ``y``\  under \ ``u``\ , if \ ``x``\  is in the domain of \ ``u``\ . Error: if \ ``x``\  is not in the domain of \ ``u``\ .


\ :ref:`Eltable <l456c7461626c65>`\ (Dom, Im) 

