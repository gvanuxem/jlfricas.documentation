.. index:: JuliaVector

.. _l4a756c6961566563746f72:

JuliaVector R
=============

:viewcode:`jobject.spad line 1138 <jobject.spad#L1138>` :editcode:`[edit on github] <jobject.spad#L1138>`

* R: \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 


This domain provides a JuliaVector type for JuliaObjectType. Minimum index is 1.


.. _l4a756c6961566563746f72-23:

\ :ref:`# <l416767726567617465-23>`\ \: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4a756c6961566563746f72-2a:

\ :ref:`\* <l566563746f7243617465676f7279-2a>`\ \: (%, R) -> % if R has \ :ref:`SemiGroup <l53656d6947726f7570>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R


\ :ref:`\* <l566563746f7243617465676f7279-2a>`\ \: (\ :ref:`Integer <l496e7465676572>`\ , %) -> % if R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R


\ :ref:`\* <l566563746f7243617465676f7279-2a>`\ \: (R, %) -> % if R has \ :ref:`SemiGroup <l53656d6947726f7570>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R

.. _l4a756c6961566563746f72-2b:

\ :ref:`+ <l566563746f7243617465676f7279-2b>`\ \: (%, %) -> % if R has \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R

.. _l4a756c6961566563746f72-2d:

\ :ref:`- <l566563746f7243617465676f7279-2d>`\ \: % -> % if R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R


\ :ref:`- <l566563746f7243617465676f7279-2d>`\ \: (%, %) -> % if R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R

.. _l4a756c6961566563746f72-3c3d:

\ :ref:`<= <l5061727469616c4f72646572-3c3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l4a756c6961566563746f72-3c:

\ :ref:`< <l5061727469616c4f72646572-3c>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l4a756c6961566563746f72-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4a756c6961566563746f72-3e3d:

\ :ref:`>= <l5061727469616c4f72646572-3e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l4a756c6961566563746f72-3e:

\ :ref:`> <l5061727469616c4f72646572-3e>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l4a756c6961566563746f72-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4a756c6961566563746f72-616e793f:

\ :ref:`any? <l486f6d6f67656e656f7573416767726567617465-616e793f>`\ \: (R -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R

.. _l4a756c6961566563746f72-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


.. index::
   pair: JuliaVector; coerce

:spadfun:`coerce`\: \ :ref:`JuliaComplexF64Vector <l4a756c6961436f6d706c6578463634566563746f72>`\  -> \ :ref:`JuliaVector <l4a756c6961566563746f72>`\  \ :ref:`JuliaObjComplexF64 <l4a756c69614f626a436f6d706c6578463634>`\  
  \ ``coerce(x)``\ : convenience function.


.. index::
   pair: JuliaVector; coerce

:spadfun:`coerce`\: \ :ref:`JuliaFloat64Vector <l4a756c6961466c6f61743634566563746f72>`\  -> \ :ref:`JuliaVector <l4a756c6961566563746f72>`\  \ :ref:`JuliaObjFloat64 <l4a756c69614f626a466c6f61743634>`\  
  \ ``coerce(x)``\ : convenience function.

.. _l4a756c6961566563746f72-636f6e636174:

\ :ref:`concat <l4c696e656172416767726567617465-636f6e636174>`\ \: (%, %) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`concat <l4c696e656172416767726567617465-636f6e636174>`\ \: (%, R) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`concat <l4c696e656172416767726567617465-636f6e636174>`\ \: (R, %) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`concat <l4c696e656172416767726567617465-636f6e636174>`\ \: \ :ref:`List <l4c697374>`\  % -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-636f6e737472756374:

\ :ref:`construct <l436f6c6c656374696f6e-636f6e737472756374>`\ \: \ :ref:`List <l4c697374>`\  R -> % 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  R

.. _l4a756c6961566563746f72-636f6e76657274:

\ :ref:`convert <l436f6e7665727469626c65546f-636f6e76657274>`\ \: % -> \ :ref:`InputForm <l496e707574466f726d>`\  if R has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 
  from \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 


\ :ref:`convert <l436f6e7665727469626c65546f-636f6e76657274>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`String <l537472696e67>`\ 

.. _l4a756c6961566563746f72-636f7079:

\ :ref:`copy <l416767726567617465-636f7079>`\ \: % -> % 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4a756c6961566563746f72-636f7079496e746f21:

\ :ref:`copyInto! <l4c696e656172416767726567617465-636f7079496e746f21>`\ \: (%, %, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-636f756e74:

\ :ref:`count <l486f6d6f67656e656f7573416767726567617465-636f756e74>`\ \: (R -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R


\ :ref:`count <l486f6d6f67656e656f7573416767726567617465-636f756e74>`\ \: (R, %) -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R

.. _l4a756c6961566563746f72-63726f7373:

\ :ref:`cross <l566563746f7243617465676f7279-63726f7373>`\ \: (%, %) -> % if R has \ :ref:`Ring <l52696e67>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R

.. _l4a756c6961566563746f72-64656c657465:

\ :ref:`delete <l4c696e656172416767726567617465-64656c657465>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`delete <l4c696e656172416767726567617465-64656c657465>`\ \: (%, \ :ref:`UniversalSegment <l556e6976657273616c5365676d656e74>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-646f74:

\ :ref:`dot <l566563746f7243617465676f7279-646f74>`\ \: (%, %) -> R if R has \ :ref:`SemiRng <l53656d69526e67>`\  and R has \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R

.. _l4a756c6961566563746f72-656c74:

\ :ref:`elt <l4a756c69614f626a656374416767726567617465-656c74>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`JuliaObjectAggregate <l4a756c69614f626a656374416767726567617465>`\ 


\ :ref:`elt <l456c7461626c65-656c74>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> R 
  from \ :ref:`Eltable <l456c7461626c65>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)


\ :ref:`elt <l456c7461626c65416767726567617465-656c74>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ , R) -> R 
  from \ :ref:`EltableAggregate <l456c7461626c65416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)


\ :ref:`elt <l4a756c69614f626a656374416767726567617465-656c74>`\ \: (%, \ :ref:`JuliaSymbol <l4a756c696153796d626f6c>`\ ) -> % 
  from \ :ref:`JuliaObjectAggregate <l4a756c69614f626a656374416767726567617465>`\ 


\ :ref:`elt <l456c7461626c65-656c74>`\ \: (%, \ :ref:`UniversalSegment <l556e6976657273616c5365676d656e74>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`Eltable <l456c7461626c65>`\ (\ :ref:`UniversalSegment <l556e6976657273616c5365676d656e74>`\  \ :ref:`Integer <l496e7465676572>`\ , %)

.. _l4a756c6961566563746f72-656d7074793f:

\ :ref:`empty? <l416767726567617465-656d7074793f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4a756c6961566563746f72-656d707479:

\ :ref:`empty <l416767726567617465-656d707479>`\ \: () -> % 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4a756c6961566563746f72-656e7472696573:

\ :ref:`entries <l496e6465786564416767726567617465-656e7472696573>`\ \: % -> \ :ref:`List <l4c697374>`\  R 
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)

.. _l4a756c6961566563746f72-656e7472793f:

\ :ref:`entry? <l496e6465786564416767726567617465-656e7472793f>`\ \: (R, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)

.. _l4a756c6961566563746f72-65713f:

\ :ref:`eq? <l416767726567617465-65713f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4a756c6961566563746f72-6576616c:

\ :ref:`eval <l4576616c61626c65-6576616c>`\ \: (%, \ :ref:`Equation <l4571756174696f6e>`\  R) -> % if R has \ :ref:`Evalable <l4576616c61626c65>`\  R
  from \ :ref:`Evalable <l4576616c61626c65>`\  R


\ :ref:`eval <l4576616c61626c65-6576616c>`\ \: (%, \ :ref:`List <l4c697374>`\  \ :ref:`Equation <l4571756174696f6e>`\  R) -> % if R has \ :ref:`Evalable <l4576616c61626c65>`\  R
  from \ :ref:`Evalable <l4576616c61626c65>`\  R


\ :ref:`eval <l496e6e65724576616c61626c65-6576616c>`\ \: (%, \ :ref:`List <l4c697374>`\  R, \ :ref:`List <l4c697374>`\  R) -> % if R has \ :ref:`Evalable <l4576616c61626c65>`\  R
  from \ :ref:`InnerEvalable <l496e6e65724576616c61626c65>`\ (R, R)


\ :ref:`eval <l496e6e65724576616c61626c65-6576616c>`\ \: (%, R, R) -> % if R has \ :ref:`Evalable <l4576616c61626c65>`\  R
  from \ :ref:`InnerEvalable <l496e6e65724576616c61626c65>`\ (R, R)

.. _l4a756c6961566563746f72-65766572793f:

\ :ref:`every? <l486f6d6f67656e656f7573416767726567617465-65766572793f>`\ \: (R -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R

.. _l4a756c6961566563746f72-66696c6c21:

\ :ref:`fill! <l496e6465786564416767726567617465-66696c6c21>`\ \: (%, R) -> % 
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)

.. _l4a756c6961566563746f72-66696e64:

\ :ref:`find <l436f6c6c656374696f6e-66696e64>`\ \: (R -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> Union(R, failed) 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  R

.. _l4a756c6961566563746f72-6669727374:

\ :ref:`first <l496e6465786564416767726567617465-6669727374>`\ \: % -> R 
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)


\ :ref:`first <l4c696e656172416767726567617465-6669727374>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-68617368:

\ :ref:`hash <l4861736861626c65-68617368>`\ \: % -> \ :ref:`SingleInteger <l53696e676c65496e7465676572>`\  if R has \ :ref:`Hashable <l4861736861626c65>`\ 
  from \ :ref:`Hashable <l4861736861626c65>`\ 

.. _l4a756c6961566563746f72-6861736855706461746521:

\ :ref:`hashUpdate! <l4861736861626c65-6861736855706461746521>`\ \: (\ :ref:`HashState <l486173685374617465>`\ , %) -> \ :ref:`HashState <l486173685374617465>`\  if R has \ :ref:`Hashable <l4861736861626c65>`\ 
  from \ :ref:`Hashable <l4861736861626c65>`\ 

.. _l4a756c6961566563746f72-696e6465783f:

\ :ref:`index? <l496e6465786564416767726567617465-696e6465783f>`\ \: (\ :ref:`Integer <l496e7465676572>`\ , %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)

.. _l4a756c6961566563746f72-696e6469636573:

\ :ref:`indices <l496e6465786564416767726567617465-696e6469636573>`\ \: % -> \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)

.. _l4a756c6961566563746f72-696e73657274:

\ :ref:`insert <l4c696e656172416767726567617465-696e73657274>`\ \: (%, %, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`insert <l4c696e656172416767726567617465-696e73657274>`\ \: (R, %, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-6a6c41626f7574:

\ :ref:`jlAbout <l4a756c69614f626a65637454797065-6a6c41626f7574>`\ \: % -> \ :ref:`Void <l566f6964>`\  
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 

.. _l4a756c6961566563746f72-6a6c4170706c79:

\ :ref:`jlApply <l4a756c69614f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %) -> % 
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 


\ :ref:`jlApply <l4a756c69614f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %, %) -> % 
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 


\ :ref:`jlApply <l4a756c69614f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %, %, %) -> % 
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 


\ :ref:`jlApply <l4a756c69614f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %, %, %, %) -> % 
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 


\ :ref:`jlApply <l4a756c69614f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %, %, %, %, %) -> % 
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 


\ :ref:`jlApply <l4a756c69614f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %, %, %, %, %, %) -> % 
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 

.. _l4a756c6961566563746f72-6a6c446973706c6179:

.. index::
   pair: JuliaVector; jlDisplay

:spadfun:`jlDisplay`\: % -> \ :ref:`Void <l566f6964>`\  
  \ ``jlDisplay(v)``\  pretty prints \ ``v``\  (\ ``à``\  la Julia).

.. _l4a756c6961566563746f72-6a6c4964:

\ :ref:`jlId <l4a756c69614f626a65637454797065-6a6c4964>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 

.. _l4a756c6961566563746f72-6a6c526566:

\ :ref:`jlRef <l4a756c69614f626a65637454797065-6a6c526566>`\ \: % -> \ :ref:`SExpression <l5345787072657373696f6e>`\  
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 

.. _l4a756c6961566563746f72-6a6c726566:

\ :ref:`jlref <l4a756c69614f626a65637454797065-6a6c726566>`\ \: \ :ref:`String <l537472696e67>`\  -> % 
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 

.. _l4a756c6961566563746f72-6a6c54797065:

\ :ref:`jlType <l4a756c69614f626a65637454797065-6a6c54797065>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 

.. _l4a756c6961566563746f72-6a766563746f72:

.. index::
   pair: JuliaVector; jvector

:spadfun:`jvector`\: \ :ref:`String <l537472696e67>`\  -> % 
  \ ``jvector(str)``\  evaluates the string \ ``str``\  and returns the generated vector. No checks are done at the FriCAS level.

.. _l4a756c6961566563746f72-6b726f6e65636b657250726f64756374:

.. index::
   pair: JuliaVector; kroneckerProduct

:spadfun:`kroneckerProduct`\: (%, %) -> % if R hasn't \ :ref:`NemoType <l4e656d6f54797065>`\ 
  \ ``kroneckerProduct(v1,v2)``\  returns the kronecker product of \ ``v1``\  and \ ``v2``\ .

.. _l4a756c6961566563746f72-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4a756c6961566563746f72-6c6566745472696d:

\ :ref:`leftTrim <l4c696e656172416767726567617465-6c6566745472696d>`\ \: (%, R) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-6c656e677468:

\ :ref:`length <l566563746f7243617465676f7279-6c656e677468>`\ \: % -> R if R has \ :ref:`Ring <l52696e67>`\  and R has \ :ref:`RadicalCategory <l5261646963616c43617465676f7279>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R

.. _l4a756c6961566563746f72-6c6573733f:

\ :ref:`less? <l416767726567617465-6c6573733f>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4a756c6961566563746f72-6d617021:

\ :ref:`map! <l486f6d6f67656e656f7573416767726567617465-6d617021>`\ \: (R -> R, %) -> % 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R

.. _l4a756c6961566563746f72-6d6170:

\ :ref:`map <l4c696e656172416767726567617465-6d6170>`\ \: ((R, R) -> R, %, %) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`map <l486f6d6f67656e656f7573416767726567617465-6d6170>`\ \: (R -> R, %) -> % 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R

.. _l4a756c6961566563746f72-6d6178:

\ :ref:`max <l486f6d6f67656e656f7573416767726567617465-6d6178>`\ \: % -> R if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R


\ :ref:`max <l4f726465726564536574-6d6178>`\ \: (%, %) -> % if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`OrderedSet <l4f726465726564536574>`\ 


\ :ref:`max <l486f6d6f67656e656f7573416767726567617465-6d6178>`\ \: ((R, R) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> R 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R

.. _l4a756c6961566563746f72-6d6178496e646578:

\ :ref:`maxIndex <l496e6465786564416767726567617465-6d6178496e646578>`\ \: % -> \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)

.. _l4a756c6961566563746f72-6d656d6265723f:

\ :ref:`member? <l486f6d6f67656e656f7573416767726567617465-6d656d6265723f>`\ \: (R, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R

.. _l4a756c6961566563746f72-6d656d62657273:

\ :ref:`members <l486f6d6f67656e656f7573416767726567617465-6d656d62657273>`\ \: % -> \ :ref:`List <l4c697374>`\  R 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R

.. _l4a756c6961566563746f72-6d65726765:

\ :ref:`merge <l4c696e656172416767726567617465-6d65726765>`\ \: (%, %) -> % if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`merge <l4c696e656172416767726567617465-6d65726765>`\ \: ((R, R) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %, %) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-6d696e:

\ :ref:`min <l486f6d6f67656e656f7573416767726567617465-6d696e>`\ \: % -> R if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R


\ :ref:`min <l4f726465726564536574-6d696e>`\ \: (%, %) -> % if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`OrderedSet <l4f726465726564536574>`\ 

.. _l4a756c6961566563746f72-6d696e496e646578:

\ :ref:`minIndex <l496e6465786564416767726567617465-6d696e496e646578>`\ \: % -> \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)

.. _l4a756c6961566563746f72-6d6f72653f:

\ :ref:`more? <l416767726567617465-6d6f72653f>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4a756c6961566563746f72-6d757461626c653f:

\ :ref:`mutable? <l4a756c69614f626a65637454797065-6d757461626c653f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 

.. _l4a756c6961566563746f72-6e6577:

\ :ref:`new <l4c696e656172416767726567617465-6e6577>`\ \: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , R) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-6e6f7468696e673f:

\ :ref:`nothing? <l4a756c69614f626a65637454797065-6e6f7468696e673f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 

.. _l4a756c6961566563746f72-6e72616e64:

.. index::
   pair: JuliaVector; nrand

:spadfun:`nrand`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`JuliaVector <l4a756c6961566563746f72>`\  \ :ref:`JuliaComplexFloat <l4a756c6961436f6d706c6578466c6f6174>`\  if R has \ :ref:`JuliaObjectRing <l4a756c69614f626a65637452696e67>`\  and R has \ :ref:`ComplexCategory <l436f6d706c657843617465676f7279>`\  \ :ref:`JuliaFloat <l4a756c6961466c6f6174>`\  and R hasn't \ :ref:`NemoType <l4e656d6f54797065>`\ 
  rand(\ ``n``\ ) returns a JuliaVector of size \ ``n``\  with normally distributed random numbers.


.. index::
   pair: JuliaVector; nrand

:spadfun:`nrand`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`JuliaVector <l4a756c6961566563746f72>`\  \ :ref:`JuliaFloat <l4a756c6961466c6f6174>`\  if R has \ :ref:`FloatingPointSystem <l466c6f6174696e67506f696e7453797374656d>`\  and R has \ :ref:`JuliaObjectRing <l4a756c69614f626a65637452696e67>`\  and R hasn't \ :ref:`NemoType <l4e656d6f54797065>`\  and R has \ :ref:`arbitraryPrecision <l617262697472617279507265636973696f6e>`\ 
  rand(\ ``n``\ ) returns a JuliaVector of size \ ``n``\  with normally distributed random numbers.

.. _l4a756c6961566563746f72-6f7574657250726f64756374:

\ :ref:`outerProduct <l566563746f7243617465676f7279-6f7574657250726f64756374>`\ \: (%, %) -> \ :ref:`Matrix <l4d6174726978>`\  R if R has \ :ref:`Ring <l52696e67>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R

.. _l4a756c6961566563746f72-7061727473:

\ :ref:`parts <l486f6d6f67656e656f7573416767726567617465-7061727473>`\ \: % -> \ :ref:`List <l4c697374>`\  R 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R

.. _l4a756c6961566563746f72-706f736974696f6e:

\ :ref:`position <l4c696e656172416767726567617465-706f736974696f6e>`\ \: (R -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`position <l4c696e656172416767726567617465-706f736974696f6e>`\ \: (R, %) -> \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`position <l4c696e656172416767726567617465-706f736974696f6e>`\ \: (R, %, \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-71656c74:

\ :ref:`qelt <l4a756c69614f626a656374416767726567617465-71656c74>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`JuliaObjectAggregate <l4a756c69614f626a656374416767726567617465>`\ 


\ :ref:`qelt <l456c7461626c65416767726567617465-71656c74>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> R 
  from \ :ref:`EltableAggregate <l456c7461626c65416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)


\ :ref:`qelt <l4a756c69614f626a656374416767726567617465-71656c74>`\ \: (%, \ :ref:`JuliaSymbol <l4a756c696153796d626f6c>`\ ) -> % 
  from \ :ref:`JuliaObjectAggregate <l4a756c69614f626a656374416767726567617465>`\ 

.. _l4a756c6961566563746f72-71736574656c7421:

\ :ref:`qsetelt! <l456c7461626c65416767726567617465-71736574656c7421>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ , R) -> R 
  from \ :ref:`EltableAggregate <l456c7461626c65416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)

.. _l4a756c6961566563746f72-726564756365:

\ :ref:`reduce <l436f6c6c656374696f6e-726564756365>`\ \: ((R, R) -> R, %) -> R 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  R


\ :ref:`reduce <l436f6c6c656374696f6e-726564756365>`\ \: ((R, R) -> R, %, R) -> R 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  R


\ :ref:`reduce <l436f6c6c656374696f6e-726564756365>`\ \: ((R, R) -> R, %, R, R) -> R 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  R

.. _l4a756c6961566563746f72-72656d6f7665:

\ :ref:`remove <l436f6c6c656374696f6e-72656d6f7665>`\ \: (R -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  R


\ :ref:`remove <l436f6c6c656374696f6e-72656d6f7665>`\ \: (R, %) -> % 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  R

.. _l4a756c6961566563746f72-72656d6f76654475706c696361746573:

\ :ref:`removeDuplicates <l436f6c6c656374696f6e-72656d6f76654475706c696361746573>`\ \: % -> % 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  R

.. _l4a756c6961566563746f72-7265766572736521:

\ :ref:`reverse! <l4c696e656172416767726567617465-7265766572736521>`\ \: % -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-72657665727365:

\ :ref:`reverse <l4c696e656172416767726567617465-72657665727365>`\ \: % -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-72696768745472696d:

\ :ref:`rightTrim <l4c696e656172416767726567617465-72696768745472696d>`\ \: (%, R) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-73616d706c65:

\ :ref:`sample <l416767726567617465-73616d706c65>`\ \: % 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4a756c6961566563746f72-73656c656374:

\ :ref:`select <l436f6c6c656374696f6e-73656c656374>`\ \: (R -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  R

.. _l4a756c6961566563746f72-736574656c7421:

\ :ref:`setelt! <l456c7461626c65416767726567617465-736574656c7421>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ , R) -> R 
  from \ :ref:`EltableAggregate <l456c7461626c65416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)


\ :ref:`setelt! <l4c696e656172416767726567617465-736574656c7421>`\ \: (%, \ :ref:`UniversalSegment <l556e6976657273616c5365676d656e74>`\  \ :ref:`Integer <l496e7465676572>`\ , R) -> R 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-73697a653f:

\ :ref:`size? <l416767726567617465-73697a653f>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4a756c6961566563746f72-736d616c6c65723f:

\ :ref:`smaller? <l436f6d70617261626c65-736d616c6c65723f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`Comparable <l436f6d70617261626c65>`\ 
  from \ :ref:`Comparable <l436f6d70617261626c65>`\ 

.. _l4a756c6961566563746f72-736f727421:

\ :ref:`sort! <l4c696e656172416767726567617465-736f727421>`\ \: % -> % if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`sort! <l4c696e656172416767726567617465-736f727421>`\ \: ((R, R) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-736f7274:

\ :ref:`sort <l4c696e656172416767726567617465-736f7274>`\ \: % -> % if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`sort <l4c696e656172416767726567617465-736f7274>`\ \: ((R, R) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-736f727465643f:

\ :ref:`sorted? <l4c696e656172416767726567617465-736f727465643f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R


\ :ref:`sorted? <l4c696e656172416767726567617465-736f727465643f>`\ \: ((R, R) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-737472696e67:

\ :ref:`string <l4a756c69614f626a65637454797065-737472696e67>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\ 

.. _l4a756c6961566563746f72-7377617021:

\ :ref:`swap! <l496e6465786564416767726567617465-7377617021>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Void <l566f6964>`\  
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R)

.. _l4a756c6961566563746f72-7472696d:

\ :ref:`trim <l4c696e656172416767726567617465-7472696d>`\ \: (%, R) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R

.. _l4a756c6961566563746f72-7572616e643031:

.. index::
   pair: JuliaVector; urand01

:spadfun:`urand01`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`JuliaVector <l4a756c6961566563746f72>`\  \ :ref:`JuliaComplexFloat <l4a756c6961436f6d706c6578466c6f6174>`\  if R has \ :ref:`JuliaObjectRing <l4a756c69614f626a65637452696e67>`\  and R has \ :ref:`ComplexCategory <l436f6d706c657843617465676f7279>`\  \ :ref:`JuliaFloat <l4a756c6961466c6f6174>`\  and R hasn't \ :ref:`NemoType <l4e656d6f54797065>`\ 
  \ ``urand01(n)``\  returns a JuliaVector of size \ ``n``\  with uniformly distributed random numbers contained in [0,1] in.


.. index::
   pair: JuliaVector; urand01

:spadfun:`urand01`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`JuliaVector <l4a756c6961566563746f72>`\  \ :ref:`JuliaFloat <l4a756c6961466c6f6174>`\  if R has \ :ref:`FloatingPointSystem <l466c6f6174696e67506f696e7453797374656d>`\  and R has \ :ref:`JuliaObjectRing <l4a756c69614f626a65637452696e67>`\  and R hasn't \ :ref:`NemoType <l4e656d6f54797065>`\  and R has \ :ref:`arbitraryPrecision <l617262697472617279507265636973696f6e>`\ 
  \ ``urand01(n)``\  returns a JuliaVector of size \ ``n``\  with uniformly distributed random numbers contained in [0,1] in.

.. _l4a756c6961566563746f72-766563746f72:

.. index::
   pair: JuliaVector; vector

:spadfun:`vector`\: \ :ref:`List <l4c697374>`\  R -> % 
  \ ``vector(l)``\  converts the list \ ``l``\  to a vector.

.. _l4a756c6961566563746f72-7a65726f3f:

\ :ref:`zero? <l566563746f7243617465676f7279-7a65726f3f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R

.. _l4a756c6961566563746f72-7a65726f:

\ :ref:`zero <l566563746f7243617465676f7279-7a65726f>`\ \: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> % if R has \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 
  from \ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R


\ :ref:`Aggregate <l416767726567617465>`\  

\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`Collection <l436f6c6c656374696f6e>`\  R 

\ :ref:`Comparable <l436f6d70617261626c65>`\  if R has \ :ref:`Comparable <l436f6d70617261626c65>`\ 

\ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\  if R has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 

\ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`String <l537472696e67>`\  

\ :ref:`Eltable <l456c7461626c65>`\ (\ :ref:`Integer <l496e7465676572>`\ , R) 

\ :ref:`Eltable <l456c7461626c65>`\ (\ :ref:`UniversalSegment <l556e6976657273616c5365676d656e74>`\  \ :ref:`Integer <l496e7465676572>`\ , %) 

\ :ref:`EltableAggregate <l456c7461626c65416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R) 

\ :ref:`Evalable <l4576616c61626c65>`\  R if R has \ :ref:`Evalable <l4576616c61626c65>`\  R

\ :ref:`finiteAggregate <l66696e697465416767726567617465>`\  

\ :ref:`FiniteLinearAggregate <l46696e6974654c696e656172416767726567617465>`\  R 

\ :ref:`Hashable <l4861736861626c65>`\  if R has \ :ref:`Hashable <l4861736861626c65>`\ 

\ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  R 

\ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , R) 

\ :ref:`InnerEvalable <l496e6e65724576616c61626c65>`\ (R, R) if R has \ :ref:`Evalable <l4576616c61626c65>`\  R

\ :ref:`JuliaObjectAggregate <l4a756c69614f626a656374416767726567617465>`\  

\ :ref:`JuliaObjectType <l4a756c69614f626a65637454797065>`\  

\ :ref:`JuliaType <l4a756c696154797065>`\  

\ :ref:`JuliaVectorCategory <l4a756c6961566563746f7243617465676f7279>`\  R 

\ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  R 

\ :ref:`OneDimensionalArrayAggregate <l4f6e6544696d656e73696f6e616c4172726179416767726567617465>`\  R 

\ :ref:`OrderedSet <l4f726465726564536574>`\  if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 

\ :ref:`PartialOrder <l5061727469616c4f72646572>`\  if R has \ :ref:`OrderedSet <l4f726465726564536574>`\ 

\ :ref:`SetCategory <l53657443617465676f7279>`\  

\ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\  

\ :ref:`VectorCategory <l566563746f7243617465676f7279>`\  R 

