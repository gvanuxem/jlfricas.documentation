.. index:: RealPolynomialUtilitiesPackage

.. _l5265616c506f6c796e6f6d69616c5574696c69746965735061636b616765:

RealPolynomialUtilitiesPackage(TheField, ThePols)
=================================================

:viewcode:`reclos.spad line 60 <reclos.spad#L60>` :editcode:`[edit on github] <reclos.spad#L60>`

* TheField: \ :ref:`Field <l4669656c64>`\ 

* ThePols: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  TheField


\ :ref:`RealPolynomialUtilitiesPackage <l5265616c506f6c796e6f6d69616c5574696c69746965735061636b616765>`\  provides common functions used by interval coding.


.. _l5265616c506f6c796e6f6d69616c5574696c69746965735061636b616765-626f756e644f66436175636879:

.. index::
   pair: RealPolynomialUtilitiesPackage; boundOfCauchy

:spadfun:`boundOfCauchy`\: ThePols -> TheField if TheField has \ :ref:`OrderedRing <l4f72646572656452696e67>`\ 
  \ ``boundOfCauchy(p)``\  bounds the roots of \ ``p``\ 

.. _l5265616c506f6c796e6f6d69616c5574696c69746965735061636b616765-6c617a79566172696174696f6e73:

.. index::
   pair: RealPolynomialUtilitiesPackage; lazyVariations

:spadfun:`lazyVariations`\: (\ :ref:`List <l4c697374>`\  TheField, \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if TheField has \ :ref:`OrderedRing <l4f72646572656452696e67>`\ 
  \ ``lazyVariations(l, s1, sn)``\  is the number of sign variations in the list of non null numbers [s1::l]\ ``@sn``\ ,

.. _l5265616c506f6c796e6f6d69616c5574696c69746965735061636b616765-737475726d53657175656e6365:

.. index::
   pair: RealPolynomialUtilitiesPackage; sturmSequence

:spadfun:`sturmSequence`\: ThePols -> \ :ref:`List <l4c697374>`\  ThePols 
  \ ``sturmSequence(p) = sylvesterSequence(p, p')``\ 

.. _l5265616c506f6c796e6f6d69616c5574696c69746965735061636b616765-737475726d566172696174696f6e734f66:

.. index::
   pair: RealPolynomialUtilitiesPackage; sturmVariationsOf

:spadfun:`sturmVariationsOf`\: \ :ref:`List <l4c697374>`\  TheField -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if TheField has \ :ref:`OrderedRing <l4f72646572656452696e67>`\ 
  \ ``sturmVariationsOf(l)``\  is the number of sign variations in the list of numbers \ ``l``\ , note that the first term counts as a sign

.. _l5265616c506f6c796e6f6d69616c5574696c69746965735061636b616765-73796c76657374657253657175656e6365:

.. index::
   pair: RealPolynomialUtilitiesPackage; sylvesterSequence

:spadfun:`sylvesterSequence`\: (ThePols, ThePols) -> \ :ref:`List <l4c697374>`\  ThePols 
  \ ``sylvesterSequence(p, q)``\  is the negated remainder sequence of \ ``p``\  and \ ``q``\  divided by the last computed term


