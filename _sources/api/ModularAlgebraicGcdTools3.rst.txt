.. index:: ModularAlgebraicGcdTools3

.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333:

ModularAlgebraicGcdTools3
=========================

:viewcode:`amodgcd.spad line 688 <amodgcd.spad#L688>` :editcode:`[edit on github] <amodgcd.spad#L688>`


undocumented


.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333-63616e6f6e6963616c496643616e:

\ :ref:`canonicalIfCan <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73-63616e6f6e6963616c496643616e>`\ \: (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ )) -> Union(\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , failed) 
  from \ :ref:`ModularAlgebraicGcdOperations <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73>`\ (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ ))

.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333-646567726565:

\ :ref:`degree <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73-646567726565>`\ \: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`ModularAlgebraicGcdOperations <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73>`\ (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ ))

.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333-6d5f696e7665727365:

.. index::
   pair: ModularAlgebraicGcdTools3; m_inverse

:spadfun:`m_inverse`\: (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> Union(\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , failed) 
  \ ``m_inverse(x, lm, lv, p)``\  computes inverse of \ ``x``\  in algebraic extension defined by \ ``lm``\ .

.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333-4d50746f4d5054:

\ :ref:`MPtoMPT <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73-4d50746f4d5054>`\ \: (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ )) -> Union(\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , failed) 
  from \ :ref:`ModularAlgebraicGcdOperations <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73>`\ (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ ))

.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333-7061636b5f6578707330:

.. index::
   pair: ModularAlgebraicGcdTools3; pack_exps0

:spadfun:`pack_exps0`\: (\ :ref:`SortedExponentVector <l536f727465644578706f6e656e74566563746f72>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``pack_exps0(exps, sizes, ns, start)``\  is used by pack_exps.

.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333-7061636b5f65787073:

\ :ref:`pack_exps <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73-7061636b5f65787073>`\ \: (\ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ )) -> \ :ref:`SortedExponentVector <l536f727465644578706f6e656e74566563746f72>`\  
  from \ :ref:`ModularAlgebraicGcdOperations <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73>`\ (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ ))

.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333-7061636b5f6d6f64756c7573:

\ :ref:`pack_modulus <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73-7061636b5f6d6f64756c7573>`\ \: (\ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> Union(Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ ), failed) 
  from \ :ref:`ModularAlgebraicGcdOperations <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73>`\ (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ ))

.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333-70736575646f52656d:

\ :ref:`pseudoRem <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73-70736575646f52656d>`\ \: (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ )) -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`ModularAlgebraicGcdOperations <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73>`\ (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ ))

.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333-72657061636b31:

\ :ref:`repack1 <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73-72657061636b31>`\ \: (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`U32Vector <l553332566563746f72>`\ , \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ )) -> \ :ref:`Void <l566f6964>`\  
  from \ :ref:`ModularAlgebraicGcdOperations <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73>`\ (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ ))

.. _l4d6f64756c6172416c67656272616963476364546f6f6c7333-7a65726f3f:

\ :ref:`zero? <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73-7a65726f3f>`\ \: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`ModularAlgebraicGcdOperations <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73>`\ (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ ))


\ :ref:`ModularAlgebraicGcdOperations <l4d6f64756c6172416c676562726169634763644f7065726174696f6e73>`\ (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , Record(svz: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , sm: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , msizes: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ , sp: \ :ref:`Integer <l496e7465676572>`\ )) 

