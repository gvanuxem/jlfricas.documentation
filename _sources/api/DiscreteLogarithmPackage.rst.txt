.. index:: DiscreteLogarithmPackage

.. _l44697363726574654c6f6761726974686d5061636b616765:

DiscreteLogarithmPackage M
==========================

:viewcode:`ffcat.spad line 348 <ffcat.spad#L348>` :editcode:`[edit on github] <ffcat.spad#L348>`

* M: Join(\ :ref:`Monoid <l4d6f6e6f6964>`\ , \ :ref:`Finite <l46696e697465>`\ ) with

    ^\: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> %


DiscreteLogarithmPackage implements help functions for discrete logarithms in monoids using small cyclic groups.


.. _l44697363726574654c6f6761726974686d5061636b616765-7368616e6b73446973634c6f67416c676f726974686d:

.. index::
   pair: DiscreteLogarithmPackage; shanksDiscLogAlgorithm

:spadfun:`shanksDiscLogAlgorithm`\: (M, M, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> Union(\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , failed) 
  \ ``shanksDiscLogAlgorithm(b, a, p)``\  computes \ ``s``\  with \ ``b^s = a``\  for assuming that \ ``a``\  and \ ``b``\  are elements in a 'small' cyclic group of order \ ``p``\  by Shank\ ``'s``\  algorithm. Note: this is a subroutine of the function \ :spadfun:`discreteLog`\ .


