.. index:: TensorPowerCategory

.. _l54656e736f72506f77657243617465676f7279:

TensorPowerCategory(n, R, M)
============================

:viewcode:`tensor.spad line 275 <tensor.spad#L275>` :editcode:`[edit on github] <tensor.spad#L275>`

* n: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ 

* R: \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 

* M: \ :ref:`Module <l4d6f64756c65>`\  R


Category of tensor powers of modules over commutative rings.


.. _l54656e736f72506f77657243617465676f7279-30:

\ :ref:`0 <l4162656c69616e4d6f6e6f6964-30>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l54656e736f72506f77657243617465676f7279-31:

\ :ref:`1 <l4d61676d6157697468556e6974-31>`\ \: % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l54656e736f72506f77657243617465676f7279-2a:

\ :ref:`\* <l4d61676d61-2a>`\ \: (%, %) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`Magma <l4d61676d61>`\ 


\ :ref:`\* <l52696768744d6f64756c65-2a>`\ \: (%, R) -> % 
  from \ :ref:`RightModule <l52696768744d6f64756c65>`\  R


\ :ref:`\* <l4162656c69616e47726f7570-2a>`\ \: (\ :ref:`Integer <l496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`\* <l4162656c69616e4d6f6e6f6964-2a>`\ \: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`\* <l4162656c69616e53656d6947726f7570-2a>`\ \: (\ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 


\ :ref:`\* <l4c6566744d6f64756c65-2a>`\ \: (R, %) -> % 
  from \ :ref:`LeftModule <l4c6566744d6f64756c65>`\  R

.. _l54656e736f72506f77657243617465676f7279-2b:

\ :ref:`+ <l4162656c69616e53656d6947726f7570-2b>`\ \: (%, %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l54656e736f72506f77657243617465676f7279-2d:

\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: % -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: (%, %) -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 

.. _l54656e736f72506f77657243617465676f7279-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l54656e736f72506f77657243617465676f7279-5e:

\ :ref:`^ <l4d61676d6157697468556e6974-5e>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`^ <l4d61676d61-5e>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l54656e736f72506f77657243617465676f7279-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l54656e736f72506f77657243617465676f7279-616e6e6968696c6174653f:

\ :ref:`annihilate? <l526e67-616e6e6968696c6174653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`Rng <l526e67>`\ 

.. _l54656e736f72506f77657243617465676f7279-616e7469436f6d6d757461746f72:

\ :ref:`antiCommutator <l4e6f6e4173736f6369617469766553656d69526e67-616e7469436f6d6d757461746f72>`\ \: (%, %) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`NonAssociativeSemiRng <l4e6f6e4173736f6369617469766553656d69526e67>`\ 

.. _l54656e736f72506f77657243617465676f7279-6173736f636961746f72:

\ :ref:`associator <l4e6f6e4173736f63696174697665526e67-6173736f636961746f72>`\ \: (%, %, %) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\ 

.. _l54656e736f72506f77657243617465676f7279-6368617261637465726973746963:

\ :ref:`characteristic <l4e6f6e4173736f6369617469766552696e67-6368617261637465726973746963>`\ \: () -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`NonAssociativeRing <l4e6f6e4173736f6369617469766552696e67>`\ 

.. _l54656e736f72506f77657243617465676f7279-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


\ :ref:`coerce <l4e6f6e4173736f6369617469766552696e67-636f65726365>`\ \: \ :ref:`Integer <l496e7465676572>`\  -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`NonAssociativeRing <l4e6f6e4173736f6369617469766552696e67>`\ 


\ :ref:`coerce <l416c6765627261-636f65726365>`\ \: R -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`Algebra <l416c6765627261>`\  R

.. _l54656e736f72506f77657243617465676f7279-636f6d6d757461746f72:

\ :ref:`commutator <l4e6f6e4173736f63696174697665526e67-636f6d6d757461746f72>`\ \: (%, %) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\ 

.. _l54656e736f72506f77657243617465676f7279-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l54656e736f72506f77657243617465676f7279-6c656674506f776572:

\ :ref:`leftPower <l4d61676d6157697468556e6974-6c656674506f776572>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`leftPower <l4d61676d61-6c656674506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l54656e736f72506f77657243617465676f7279-6c6566745265636970:

\ :ref:`leftRecip <l4d61676d6157697468556e6974-6c6566745265636970>`\ \: % -> Union(%, failed) if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l54656e736f72506f77657243617465676f7279-6f6e653f:

\ :ref:`one? <l4d61676d6157697468556e6974-6f6e653f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l54656e736f72506f77657243617465676f7279-6f70706f736974653f:

\ :ref:`opposite? <l4162656c69616e4d6f6e6f6964-6f70706f736974653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l54656e736f72506f77657243617465676f7279-706c656e617279506f776572:

\ :ref:`plenaryPower <l4e6f6e4173736f63696174697665416c6765627261-706c656e617279506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l54656e736f72506f77657243617465676f7279-7265636970:

\ :ref:`recip <l4d61676d6157697468556e6974-7265636970>`\ \: % -> Union(%, failed) if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l54656e736f72506f77657243617465676f7279-7269676874506f776572:

\ :ref:`rightPower <l4d61676d6157697468556e6974-7269676874506f776572>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`rightPower <l4d61676d61-7269676874506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l54656e736f72506f77657243617465676f7279-72696768745265636970:

\ :ref:`rightRecip <l4d61676d6157697468556e6974-72696768745265636970>`\ \: % -> Union(%, failed) if M has \ :ref:`Algebra <l416c6765627261>`\  R
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l54656e736f72506f77657243617465676f7279-73616d706c65:

\ :ref:`sample <l4162656c69616e4d6f6e6f6964-73616d706c65>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l54656e736f72506f77657243617465676f7279-7375627472616374496643616e:

\ :ref:`subtractIfCan <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-7375627472616374496643616e>`\ \: (%, %) -> Union(%, failed) 
  from \ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\ 

.. _l54656e736f72506f77657243617465676f7279-74656e736f72:

\ :ref:`tensor <l54656e736f7250726f6475637443617465676f7279-74656e736f72>`\ \: (M, M) -> % 
  from \ :ref:`TensorProductCategory <l54656e736f7250726f6475637443617465676f7279>`\ (R, M, M)


.. index::
   pair: TensorPowerCategory; tensor

:spadfun:`tensor`\: \ :ref:`List <l4c697374>`\  M -> % 
  \ ``tensor([x1, x2, ..., xn])``\  constructs the tensor product of \ ``x1, x2, ..., xn``\ .

.. _l54656e736f72506f77657243617465676f7279-7a65726f3f:

\ :ref:`zero? <l4162656c69616e4d6f6e6f6964-7a65726f3f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\  

\ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\  

\ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\  

\ :ref:`Algebra <l416c6765627261>`\  R if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`BiModule <l42694d6f64756c65>`\ (%, %) if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`BiModule <l42694d6f64756c65>`\ (R, R) 

\ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`LeftModule <l4c6566744d6f64756c65>`\  % if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`LeftModule <l4c6566744d6f64756c65>`\  R 

\ :ref:`Magma <l4d61676d61>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`Module <l4d6f64756c65>`\  R 

\ :ref:`Monoid <l4d6f6e6f6964>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  R if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`NonAssociativeRing <l4e6f6e4173736f6369617469766552696e67>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`NonAssociativeSemiRing <l4e6f6e4173736f6369617469766553656d6952696e67>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`NonAssociativeSemiRng <l4e6f6e4173736f6369617469766553656d69526e67>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`RightModule <l52696768744d6f64756c65>`\  % if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`RightModule <l52696768744d6f64756c65>`\  R 

\ :ref:`Ring <l52696e67>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`Rng <l526e67>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`SemiGroup <l53656d6947726f7570>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`SemiRing <l53656d6952696e67>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`SemiRng <l53656d69526e67>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

\ :ref:`SetCategory <l53657443617465676f7279>`\  

\ :ref:`TensorProductCategory <l54656e736f7250726f6475637443617465676f7279>`\ (R, M, M) 

\ :ref:`unitsKnown <l756e6974734b6e6f776e>`\  if M has \ :ref:`Algebra <l416c6765627261>`\  R

