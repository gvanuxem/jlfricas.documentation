.. index:: RepresentationPackage1

.. _l526570726573656e746174696f6e5061636b61676531:

RepresentationPackage1 R
========================

:viewcode:`rep1.spad line 1 <rep1.spad#L1>` :editcode:`[edit on github] <rep1.spad#L1>`

* R: \ :ref:`Ring <l52696e67>`\ 


\ ``RepresentationPackage1``\  provides functions for representation theory for finite groups and algebras. The package creates permutation representations and uses tensor products and its symmetric and antisymmetric components to create new representations of larger degree from given ones. Note: instead of having parameters from \ :ref:`Permutation <l5065726d75746174696f6e>`\  this package allows list notation of permutations as well: e.g. \ ``[1, 4, 3, 2]``\  denotes permutes 2 and 4 and fixes 1 and 3.


.. _l526570726573656e746174696f6e5061636b61676531-616e746973796d6d657472696354656e736f7273:

.. index::
   pair: RepresentationPackage1; antisymmetricTensors

:spadfun:`antisymmetricTensors`\: (\ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R if R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 
  \ ``antisymmetricTensors(la, n)``\  applies to each \ ``m``\ -by-\ ``m``\  square matrix in the list \ *la*\  the irreducible, polynomial representation of the general linear group \ *GLm*\  which corresponds to the partition \ *(1, 1, ..., 1, 0, 0, ..., 0)*\  of \ ``n``\ . Error: if \ ``n``\  is greater than \ ``m``\ . Note: this corresponds to the symmetrization of the representation with the sign representation of the symmetric group \ *Sn*\ . The carrier spaces of the representation are the antisymmetric tensors of the \ ``n``\ -fold tensor product.


.. index::
   pair: RepresentationPackage1; antisymmetricTensors

:spadfun:`antisymmetricTensors`\: (\ :ref:`Matrix <l4d6174726978>`\  R, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> \ :ref:`Matrix <l4d6174726978>`\  R if R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 
  \ ``antisymmetricTensors(a, n)``\  applies to the square matrix \ *a*\  the irreducible, polynomial representation of the general linear group \ *GLm*\ , where \ ``m``\  is the number of rows of \ *a*\ , which corresponds to the partition \ *(1, 1, ..., 1, 0, 0, ..., 0)*\  of \ ``n``\ . Error: if \ ``n``\  is greater than \ ``m``\ . Note: this corresponds to the symmetrization of the representation with the sign representation of the symmetric group \ *Sn*\ . The carrier spaces of the representation are the antisymmetric tensors of the \ ``n``\ -fold tensor product.

.. _l526570726573656e746174696f6e5061636b61676531-63726561746547656e657269634d6174726978:

.. index::
   pair: RepresentationPackage1; createGenericMatrix

:spadfun:`createGenericMatrix`\: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R 
  \ ``createGenericMatrix(m)``\  creates a square matrix of dimension \ ``k``\  whose entry at the \ ``i``\ -th row and \ ``j``\ -th column is the indeterminate \ *x[i, j]*\  (double subscripted).

.. _l526570726573656e746174696f6e5061636b61676531-7065726d75746174696f6e526570726573656e746174696f6e:

.. index::
   pair: RepresentationPackage1; permutationRepresentation

:spadfun:`permutationRepresentation`\: (\ :ref:`List <l4c697374>`\  \ :ref:`Permutation <l5065726d75746174696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``permutationRepresentation([pi1, ..., pik], n)``\  returns the list of matrices \ *[(deltai, pi1(i)), ..., (deltai, pik(i))]*\  (Kronecker delta) for the permutations \ *pi1, ..., pik*\  of \ *{1, 2, ..., n}*\ .


.. index::
   pair: RepresentationPackage1; permutationRepresentation

:spadfun:`permutationRepresentation`\: (\ :ref:`Permutation <l5065726d75746174696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``permutationRepresentation(pi, n)``\  returns the matrix \ *(deltai, \ ``pi``\ (i))*\  (Kronecker delta) for a permutation \ *\ ``pi``\ *\  of \ *{1, 2, ..., n}*\ .


.. index::
   pair: RepresentationPackage1; permutationRepresentation

:spadfun:`permutationRepresentation`\: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``permutationRepresentation(pi, n)``\  returns the matrix \ *(deltai, \ ``pi``\ (i))*\  (Kronecker delta) if the permutation \ *\ ``pi``\ *\  is in list notation and permutes \ *{1, 2, ..., n}*\ .


.. index::
   pair: RepresentationPackage1; permutationRepresentation

:spadfun:`permutationRepresentation`\: \ :ref:`List <l4c697374>`\  \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``permutationRepresentation([pi1, ..., pik], n)``\  returns the list of matrices \ *[(deltai, pi1(i)), ..., (deltai, pik(i))]*\  if the permutations \ *pi1*\ , ..., \ *pik*\  are in list notation and are permuting \ *{1, 2, ..., n}*\ .

.. _l526570726573656e746174696f6e5061636b61676531-73796d6d657472696354656e736f7273:

.. index::
   pair: RepresentationPackage1; symmetricTensors

:spadfun:`symmetricTensors`\: (\ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``symmetricTensors(la, n)``\  applies to each \ ``m``\ -by-\ ``m``\  square matrix in the list \ *la*\  the irreducible, polynomial representation of the general linear group \ *GLm*\  which corresponds to the partition \ *(n, 0, ..., 0)*\  of \ ``n``\ . Error: if the matrices in \ *la*\  are not square matrices. Note: this corresponds to the symmetrization of the representation with the trivial representation of the symmetric group \ *Sn*\ . The carrier spaces of the representation are the symmetric tensors of the \ ``n``\ -fold tensor product.


.. index::
   pair: RepresentationPackage1; symmetricTensors

:spadfun:`symmetricTensors`\: (\ :ref:`Matrix <l4d6174726978>`\  R, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``symmetricTensors(a, n)``\  applies to the \ ``m``\ -by-\ ``m``\  square matrix \ *a*\  the irreducible, polynomial representation of the general linear group \ *GLm*\  which corresponds to the partition \ *(n, 0, ..., 0)*\  of \ ``n``\ . Error: if \ *a*\  is not a square matrix. Note: this corresponds to the symmetrization of the representation with the trivial representation of the symmetric group \ *Sn*\ . The carrier spaces of the representation are the symmetric tensors of the \ ``n``\ -fold tensor product.

.. _l526570726573656e746174696f6e5061636b61676531-74656e736f7250726f64756374:

.. index::
   pair: RepresentationPackage1; tensorProduct

:spadfun:`tensorProduct`\: (\ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R, \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R) -> \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``tensorProduct([a1, ..., ak], [b1, ..., bk])``\  calculates the list of Kronecker products of the matrices \ *\ ``ai``\ *\  and \ *\ ``bi``\ *\  for {1 \ ``<=``\  \ ``i``\  \ ``<=``\  \ ``k``\ }. Note: If each list of matrices corresponds to a group representation (repr. of generators) of one group, then these matrices correspond to the tensor product of the two representations.


.. index::
   pair: RepresentationPackage1; tensorProduct

:spadfun:`tensorProduct`\: (\ :ref:`Matrix <l4d6174726978>`\  R, \ :ref:`Matrix <l4d6174726978>`\  R) -> \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``tensorProduct(a, b)``\  calculates the Kronecker product of the matrices \ *a*\  and \ ``b``\ . Note: if each matrix corresponds to a group representation (repr. of generators) of one group, then these matrices correspond to the tensor product of the two representations.


.. index::
   pair: RepresentationPackage1; tensorProduct

:spadfun:`tensorProduct`\: \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R -> \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``tensorProduct([a1, ...ak])``\  calculates the list of Kronecker products of each matrix \ *\ ``ai``\ *\  with itself for {1 \ ``<=``\  \ ``i``\  \ ``<=``\  \ ``k``\ }. Note: If the list of matrices corresponds to a group representation (repr. of generators) of one group, then these matrices correspond to the tensor product of the representation with itself.


.. index::
   pair: RepresentationPackage1; tensorProduct

:spadfun:`tensorProduct`\: \ :ref:`Matrix <l4d6174726978>`\  R -> \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``tensorProduct(a)``\  calculates the Kronecker product of the matrix \ *a*\  with itself.


