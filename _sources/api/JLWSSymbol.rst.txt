.. index:: JLWSSymbol

.. _l4a4c575353796d626f6c:

JLWSSymbol
==========

:viewcode:`jws.spad line 91 <jws.spad#L91>` :editcode:`[edit on github] <jws.spad#L91>`


Julia Wolfram Symbolic symbols using the MathLink Julia package.


.. _l4a4c575353796d626f6c-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4a4c575353796d626f6c-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4a4c575353796d626f6c-636f65726365:

.. index::
   pair: JLWSSymbol; coerce

:spadfun:`coerce`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``coerce(sym)``\  coerces \ ``sym``\  to a FriCAS boolean. \ ``Sym``\  must be a Julia \ ``WS``\  boolean


\ :ref:`coerce <l4a4c4f626a65637454797065-636f65726365>`\ \: % -> \ :ref:`JLObject <l4a4c4f626a656374>`\  
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 


.. index::
   pair: JLWSSymbol; coerce

:spadfun:`coerce`\: % -> \ :ref:`JLWSExpression <l4a4c575345787072657373696f6e>`\  
  \ ``coerce(sym)``\  coerces \ ``sym``\  to a JLWSExpression.


\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


.. index::
   pair: JLWSSymbol; coerce

:spadfun:`coerce`\: % -> \ :ref:`Symbol <l53796d626f6c>`\  
  \ ``coerce(sym)``\  is a convenience function to coerce \ ``sym``\  to a FriCAS Symbol.


.. index::
   pair: JLWSSymbol; coerce

:spadfun:`coerce`\: \ :ref:`Boolean <l426f6f6c65616e>`\  -> % 
  \ ``coerce(bool)``\  coerces \ ``bool``\  to a Julia \ ``WS``\  boolean.


.. index::
   pair: JLWSSymbol; coerce

:spadfun:`coerce`\: \ :ref:`String <l537472696e67>`\  -> % 
  \ ``coerce(str)``\  is a convenience function to coerce a String.


.. index::
   pair: JLWSSymbol; coerce

:spadfun:`coerce`\: \ :ref:`Symbol <l53796d626f6c>`\  -> % 
  \ ``coerce(sym)``\  is a convenience function to coerce a Symbol.

.. _l4a4c575353796d626f6c-636f6e76657274:

\ :ref:`convert <l436f6e7665727469626c65546f-636f6e76657274>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`String <l537472696e67>`\ 

.. _l4a4c575353796d626f6c-6a6c41626f7574:

\ :ref:`jlAbout <l4a4c4f626a65637454797065-6a6c41626f7574>`\ \: % -> \ :ref:`Void <l566f6964>`\  
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-6a6c4170706c79:

\ :ref:`jlApply <l4a4c4f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %) -> % 
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 


\ :ref:`jlApply <l4a4c4f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %, %) -> % 
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 


\ :ref:`jlApply <l4a4c4f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %, %, %) -> % 
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 


\ :ref:`jlApply <l4a4c4f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %, %, %, %) -> % 
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 


\ :ref:`jlApply <l4a4c4f626a65637454797065-6a6c4170706c79>`\ \: (\ :ref:`String <l537472696e67>`\ , %, %, %, %, %) -> % 
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-6a6c446973706c6179:

\ :ref:`jlDisplay <l4a4c4f626a65637454797065-6a6c446973706c6179>`\ \: % -> \ :ref:`Void <l566f6964>`\  
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-6a6c44756d70:

\ :ref:`jlDump <l4a4c4f626a65637454797065-6a6c44756d70>`\ \: \ :ref:`JLObject <l4a4c4f626a656374>`\  -> \ :ref:`Void <l566f6964>`\  
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-6a6c4576616c:

\ :ref:`jlEval <l4a4c57534f626a656374-6a6c4576616c>`\ \: % -> % 
  from \ :ref:`JLWSObject <l4a4c57534f626a656374>`\ 

.. _l4a4c575353796d626f6c-6a6c48656164:

\ :ref:`jlHead <l4a4c57534f626a656374-6a6c48656164>`\ \: % -> \ :ref:`JLWSSymbol <l4a4c575353796d626f6c>`\  
  from \ :ref:`JLWSObject <l4a4c57534f626a656374>`\ 

.. _l4a4c575353796d626f6c-6a6c4964:

\ :ref:`jlId <l4a4c4f626a65637454797065-6a6c4964>`\ \: % -> \ :ref:`JLInt64 <l4a4c496e743634>`\  
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-6a6c4e756d65726963:

\ :ref:`jlNumeric <l4a4c57534f626a656374-6a6c4e756d65726963>`\ \: % -> % 
  from \ :ref:`JLWSObject <l4a4c57534f626a656374>`\ 


\ :ref:`jlNumeric <l4a4c57534f626a656374-6a6c4e756d65726963>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`JLWSObject <l4a4c57534f626a656374>`\ 

.. _l4a4c575353796d626f6c-6a6c4f626a656374:

\ :ref:`jlObject <l4a4c4f626a65637454797065-6a6c4f626a656374>`\ \: () -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-6a6c526566:

\ :ref:`jlRef <l4a4c4f626a65637454797065-6a6c526566>`\ \: % -> \ :ref:`SExpression <l5345787072657373696f6e>`\  
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-6a6c726566:

\ :ref:`jlref <l4a4c4f626a65637454797065-6a6c726566>`\ \: \ :ref:`String <l537472696e67>`\  -> % 
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-6a6c53796d626f6c6963:

\ :ref:`jlSymbolic <l4a4c57534f626a656374-6a6c53796d626f6c6963>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`JLWSObject <l4a4c57534f626a656374>`\ 

.. _l4a4c575353796d626f6c-6a6c54797065:

\ :ref:`jlType <l4a4c4f626a65637454797065-6a6c54797065>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-6a5753496e74657270726574:

\ :ref:`jWSInterpret <l4a4c57534f626a656374-6a5753496e74657270726574>`\ \: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> % 
  from \ :ref:`JLWSObject <l4a4c57534f626a656374>`\ 

.. _l4a4c575353796d626f6c-6a575353796d:

.. index::
   pair: JLWSSymbol; jWSSym

:spadfun:`jWSSym`\: \ :ref:`String <l537472696e67>`\  -> % 
  \ ``jWSSym(str)``\  constructs \ ``str``\  as a JLWSSymbol.


.. index::
   pair: JLWSSymbol; jWSSym

:spadfun:`jWSSym`\: \ :ref:`Symbol <l53796d626f6c>`\  -> % 
  \ ``jWSSym(sym)``\  constructs \ ``sym``\  as a JLWSSymbol.

.. _l4a4c575353796d626f6c-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4a4c575353796d626f6c-6d757461626c653f:

\ :ref:`mutable? <l4a4c4f626a65637454797065-6d757461626c653f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-6e6f7468696e673f:

\ :ref:`nothing? <l4a4c4f626a65637454797065-6e6f7468696e673f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\ 

.. _l4a4c575353796d626f6c-737472696e67:

\ :ref:`string <l4a4c54797065-737472696e67>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`JLType <l4a4c54797065>`\ 

.. _l4a4c575353796d626f6c-746f537472696e67:

\ :ref:`toString <l4a4c57534f626a656374-746f537472696e67>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`JLWSObject <l4a4c57534f626a656374>`\ 

.. _l4a4c575353796d626f6c-57436f6d706c6578:

.. index::
   pair: JLWSSymbol; WComplex

:spadfun:`WComplex`\: () -> % 
  \ ``WComplex()``\  returns the \ ``WS``\  Complex symbol.

.. _l4a4c575353796d626f6c-574661696c757265:

.. index::
   pair: JLWSSymbol; WFailure

:spadfun:`WFailure`\: () -> % 
  \ ``WFailure()``\  returns the \ ``WS``\  Failure symbol.

.. _l4a4c575353796d626f6c-5746616c7365:

.. index::
   pair: JLWSSymbol; WFalse

:spadfun:`WFalse`\: () -> % 
  \ ``WFalse()``\  returns the \ ``WS``\  False symbol.

.. _l4a4c575353796d626f6c-57496e7465676572:

.. index::
   pair: JLWSSymbol; WInteger

:spadfun:`WInteger`\: () -> % 
  \ ``WInteger()``\  returns the \ ``WS``\  Integer symbol.

.. _l4a4c575353796d626f6c-574c697374:

.. index::
   pair: JLWSSymbol; WList

:spadfun:`WList`\: () -> % 
  \ ``WList()``\  returns the \ ``WS``\  List symbol.

.. _l4a4c575353796d626f6c-574d697373696e67:

.. index::
   pair: JLWSSymbol; WMissing

:spadfun:`WMissing`\: () -> % 
  \ ``WMissing()``\  returns the \ ``WS``\  Missing symbol.

.. _l4a4c575353796d626f6c-57526174696f6e616c:

.. index::
   pair: JLWSSymbol; WRational

:spadfun:`WRational`\: () -> % 
  \ ``WRational()``\  returns the \ ``WS``\  Rational symbol.

.. _l4a4c575353796d626f6c-575265616c:

.. index::
   pair: JLWSSymbol; WReal

:spadfun:`WReal`\: () -> % 
  \ ``WReal()``\  returns the \ ``WS``\  Real symbol.

.. _l4a4c575353796d626f6c-5752756c65:

.. index::
   pair: JLWSSymbol; WRule

:spadfun:`WRule`\: () -> % 
  \ ``WRule()``\  returns the \ ``WS``\  Rule symbol.

.. _l4a4c575353796d626f6c-57537472696e67:

.. index::
   pair: JLWSSymbol; WString

:spadfun:`WString`\: () -> % 
  \ ``WString()``\  returns the \ ``WS``\  String symbol.

.. _l4a4c575353796d626f6c-5753796d626f6c:

.. index::
   pair: JLWSSymbol; WSymbol

:spadfun:`WSymbol`\: () -> % 
  \ ``WSymbol()``\  returns the \ ``WS``\  Symbol symbol.

.. _l4a4c575353796d626f6c-5754727565:

.. index::
   pair: JLWSSymbol; WTrue

:spadfun:`WTrue`\: () -> % 
  \ ``WTrue()``\  returns the \ ``WS``\  True symbol.


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`String <l537472696e67>`\  

\ :ref:`JLObjectType <l4a4c4f626a65637454797065>`\  

\ :ref:`JLType <l4a4c54797065>`\  

\ :ref:`JLWSObject <l4a4c57534f626a656374>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

