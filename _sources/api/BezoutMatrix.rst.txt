.. index:: BezoutMatrix

.. _l42657a6f75744d6174726978:

BezoutMatrix(R, UP, M, Row, Col)
================================

:viewcode:`bezout.spad line 1 <bezout.spad#L1>` :editcode:`[edit on github] <bezout.spad#L1>`

* R: \ :ref:`Ring <l52696e67>`\ 

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  R

* M: \ :ref:`MatrixCategory <l4d617472697843617465676f7279>`\ (R, Row, Col)

* Row: \ :ref:`FiniteLinearAggregate <l46696e6974654c696e656172416767726567617465>`\  R

* Col: \ :ref:`FiniteLinearAggregate <l46696e6974654c696e656172416767726567617465>`\  R


\ :ref:`BezoutMatrix <l42657a6f75744d6174726978>`\  contains functions for computing resultants and discriminants using Bezout matrices, and functions related with Sylvester matrix and subresultant.


.. _l42657a6f75744d6174726978-62657a6f75744469736372696d696e616e74:

.. index::
   pair: BezoutMatrix; bezoutDiscriminant

:spadfun:`bezoutDiscriminant`\: UP -> R if R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 
  \ ``bezoutDiscriminant(p)``\  computes the discriminant of a polynomial \ ``p``\  by computing the determinant of a Bezout matrix.

.. _l42657a6f75744d6174726978-62657a6f75744d6174726978:

.. index::
   pair: BezoutMatrix; bezoutMatrix

:spadfun:`bezoutMatrix`\: (UP, UP) -> M 
  \ ``bezoutMatrix(p, q)``\  returns the Bezout matrix for the two polynomials \ ``p``\  and \ ``q``\ .

.. _l42657a6f75744d6174726978-62657a6f7574526573756c74616e74:

.. index::
   pair: BezoutMatrix; bezoutResultant

:spadfun:`bezoutResultant`\: (UP, UP) -> R if R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 
  \ ``bezoutResultant(p, q)``\  computes the resultant of the two polynomials \ ``p``\  and \ ``q``\  by computing the determinant of a Bezout matrix.

.. _l42657a6f75744d6174726978-737562726573756c74616e7473:

.. index::
   pair: BezoutMatrix; subresultants

:spadfun:`subresultants`\: (UP, UP) -> \ :ref:`IndexedVector <l496e6465786564566563746f72>`\ (UP, Zero) if R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 
  \ ``subresultants(p, q)``\  returns a vector of subresultants of \ ``p``\  and \ ``q``\ , in ascending order, starting with index 0.

.. _l42657a6f75744d6174726978-73756253796c7665737465724d6174726978:

.. index::
   pair: BezoutMatrix; subSylvesterMatrix

:spadfun:`subSylvesterMatrix`\: (M, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> M 
  \ ``subSylvesterMatrix(S, j)``\  returns the \ ``j``\ th sub-Sylvester matrix \ ``jS``\ .


.. index::
   pair: BezoutMatrix; subSylvesterMatrix

:spadfun:`subSylvesterMatrix`\: (M, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> M 
  \ ``subSylvesterMatrix(S, j, i)``\  returns sub-Sylvester matrix jSi.

.. _l42657a6f75744d6174726978-73796c7665737465724d6174726978:

.. index::
   pair: BezoutMatrix; sylvesterMatrix

:spadfun:`sylvesterMatrix`\: (UP, UP) -> M 
  \ ``sylvesterMatrix(p, q)``\  returns the Sylvester matrix for the two nonzero polynomials \ ``p``\  and \ ``q``\ .


