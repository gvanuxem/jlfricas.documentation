.. index:: PolynomialNumberTheoryFunctions

.. _l506f6c796e6f6d69616c4e756d6265725468656f727946756e6374696f6e73:

PolynomialNumberTheoryFunctions
===============================

:viewcode:`numtheor.spad line 451 <numtheor.spad#L451>` :editcode:`[edit on github] <numtheor.spad#L451>`


This package provides various polynomial number theoretic functions over the integers.


.. _l506f6c796e6f6d69616c4e756d6265725468656f727946756e6374696f6e73-6265726e6f756c6c69:

.. index::
   pair: PolynomialNumberTheoryFunctions; bernoulli

:spadfun:`bernoulli`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``bernoulli(n)``\  returns the \ ``n``\ th Bernoulli polynomial \ ``B[n](x)``\ . Note: Bernoulli polynomials denoted \ ``B(n, x)``\  computed by solving the differential equation \ ``differentiate(B(n, x), x) = n B(n-1, x)``\  where \ ``B(0, x) = 1``\  and initial condition comes from \ ``B(n) = B(n, 0)``\ .

.. _l506f6c796e6f6d69616c4e756d6265725468656f727946756e6374696f6e73-63686562797368657654:

.. index::
   pair: PolynomialNumberTheoryFunctions; chebyshevT

:spadfun:`chebyshevT`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``chebyshevT(n)``\  returns the \ ``n``\ th Chebyshev polynomial \ ``T[n](x)``\ . Note: Chebyshev polynomials of the first kind, denoted \ ``T[n](x)``\ , computed from the two term recurrence. The generating function \ ``(1-t*x)/(1-2*t*x+t^2) = sum(T[n](x)*t^n, n=0..infinity)``\ .

.. _l506f6c796e6f6d69616c4e756d6265725468656f727946756e6374696f6e73-63686562797368657655:

.. index::
   pair: PolynomialNumberTheoryFunctions; chebyshevU

:spadfun:`chebyshevU`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``chebyshevU(n)``\  returns the \ ``n``\ th Chebyshev polynomial \ ``U[n](x)``\ . Note: Chebyshev polynomials of the second kind, denoted \ ``U[n](x)``\ , computed from the two term recurrence. The generating function \ ``1/(1-2*t*x+t^2) = sum(T[n](x)*t^n, n=0..infinity)``\ .

.. _l506f6c796e6f6d69616c4e756d6265725468656f727946756e6374696f6e73-6379636c6f746f6d6963:

.. index::
   pair: PolynomialNumberTheoryFunctions; cyclotomic

:spadfun:`cyclotomic`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``cyclotomic(n)``\  returns the \ ``n``\ th cyclotomic polynomial \ ``phi[n](x)``\ . Note: \ ``phi[n](x)``\  is the factor of \ ``x^n - 1``\  whose roots are the primitive \ ``n``\ th roots of unity.

.. _l506f6c796e6f6d69616c4e756d6265725468656f727946756e6374696f6e73-65756c6572:

.. index::
   pair: PolynomialNumberTheoryFunctions; euler

:spadfun:`euler`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``euler(n)``\  returns the \ ``n``\ th Euler polynomial \ ``E[n](x)``\ . Note: Euler polynomials denoted \ ``E(n, x)``\  are computed by solving the differential equation \ ``differentiate(E(n, x), x) = n E(n-1, x)``\  where \ ``E(0, x) = 1``\  and initial condition comes from \ ``E(n) = 2^n E(n, 1/2)``\ .

.. _l506f6c796e6f6d69616c4e756d6265725468656f727946756e6374696f6e73-666978656444697669736f72:

.. index::
   pair: PolynomialNumberTheoryFunctions; fixedDivisor

:spadfun:`fixedDivisor`\: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``fixedDivisor(a)``\  for \ ``a(x)``\  in \ ``Z[x]``\  is the largest integer \ ``f``\  such that \ ``f``\  divides \ ``a(x=k)``\  for all integers \ ``k``\ . Note: fixed divisor of \ ``a``\  is \ ``reduce(gcd, [a(x=k) for k in 0..degree(a)])``\ .

.. _l506f6c796e6f6d69616c4e756d6265725468656f727946756e6374696f6e73-6865726d697465:

.. index::
   pair: PolynomialNumberTheoryFunctions; hermite

:spadfun:`hermite`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``hermite(n)``\  returns the \ ``n``\ th Hermite polynomial \ ``H[n](x)``\ . Note: Hermite polynomials, denoted \ ``H[n](x)``\ , are computed from the two term recurrence. The generating function is: \ ``exp(2*t*x-t^2) = sum(H[n](x)*t^n/n!, n=0..infinity)``\ .

.. _l506f6c796e6f6d69616c4e756d6265725468656f727946756e6374696f6e73-6c61677565727265:

.. index::
   pair: PolynomialNumberTheoryFunctions; laguerre

:spadfun:`laguerre`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``laguerre(n)``\  returns the \ ``n``\ th Laguerre polynomial \ ``L[n](x)``\ . Note: Laguerre polynomials, denoted \ ``L[n](x)``\ , are computed from the two term recurrence. The generating function is: \ ``exp(x*t/(t-1))/(1-t) = sum(L[n](x)*t^n/n!, n=0..infinity)``\ .

.. _l506f6c796e6f6d69616c4e756d6265725468656f727946756e6374696f6e73-6c6567656e647265:

.. index::
   pair: PolynomialNumberTheoryFunctions; legendre

:spadfun:`legendre`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``legendre(n)``\  returns the \ ``n``\ th Legendre polynomial \ ``P[n](x)``\ . Note: Legendre polynomials, denoted \ ``P[n](x)``\ , are computed from the two term recurrence. The generating function is: \ ``1/sqrt(1-2*t*x+t^2) = sum(P[n](x)*t^n, n=0..infinity)``\ .


