.. index:: OrdinaryDifferentialRing

.. _l4f7264696e617279446966666572656e7469616c52696e67:

OrdinaryDifferentialRing(Kernels, R, var)
=========================================

:viewcode:`lodo.spad line 284 <lodo.spad#L284>` :editcode:`[edit on github] <lodo.spad#L284>`

* Kernels: \ :ref:`SetCategory <l53657443617465676f7279>`\ 

* R: \ :ref:`PartialDifferentialRing <l5061727469616c446966666572656e7469616c52696e67>`\  Kernels

* var: Kernels


This constructor produces an ordinary differential ring from a partial differential ring by specifying a variable.


.. _l4f7264696e617279446966666572656e7469616c52696e67-30:

\ :ref:`0 <l4162656c69616e4d6f6e6f6964-30>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-31:

\ :ref:`1 <l4d61676d6157697468556e6974-31>`\ \: % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-2a:

\ :ref:`\* <l4d61676d61-2a>`\ \: (%, %) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 


\ :ref:`\* <l52696768744d6f64756c65-2a>`\ \: (%, \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`RightModule <l52696768744d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 


\ :ref:`\* <l4c6566744d6f64756c65-2a>`\ \: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , %) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`LeftModule <l4c6566744d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 


\ :ref:`\* <l4162656c69616e47726f7570-2a>`\ \: (\ :ref:`Integer <l496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`\* <l4162656c69616e4d6f6e6f6964-2a>`\ \: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`\* <l4162656c69616e53656d6947726f7570-2a>`\ \: (\ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-2b:

\ :ref:`+ <l4162656c69616e53656d6947726f7570-2b>`\ \: (%, %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-2d:

\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: % -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: (%, %) -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-2f:

\ :ref:`/ <l4669656c64-2f>`\ \: (%, %) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`Field <l4669656c64>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-5e:

\ :ref:`^ <l4469766973696f6e52696e67-5e>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`DivisionRing <l4469766973696f6e52696e67>`\ 


\ :ref:`^ <l4d61676d6157697468556e6974-5e>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`^ <l4d61676d61-5e>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-616e6e6968696c6174653f:

\ :ref:`annihilate? <l526e67-616e6e6968696c6174653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Rng <l526e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-616e7469436f6d6d757461746f72:

\ :ref:`antiCommutator <l4e6f6e4173736f6369617469766553656d69526e67-616e7469436f6d6d757461746f72>`\ \: (%, %) -> % 
  from \ :ref:`NonAssociativeSemiRng <l4e6f6e4173736f6369617469766553656d69526e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6173736f6369617465733f:

\ :ref:`associates? <l456e7469726552696e67-6173736f6369617465733f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EntireRing <l456e7469726552696e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6173736f636961746f72:

\ :ref:`associator <l4e6f6e4173736f63696174697665526e67-6173736f636961746f72>`\ \: (%, %, %) -> % 
  from \ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6368617261637465726973746963:

\ :ref:`characteristic <l4e6f6e4173736f6369617469766552696e67-6368617261637465726973746963>`\ \: () -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  from \ :ref:`NonAssociativeRing <l4e6f6e4173736f6369617469766552696e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-636f65726365:

\ :ref:`coerce <l416c6765627261-636f65726365>`\ \: % -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`Algebra <l416c6765627261>`\  %


\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


.. index::
   pair: OrdinaryDifferentialRing; coerce

:spadfun:`coerce`\: % -> R 
  \ ``coerce(p)``\  views \ ``p``\  as a valie in the partial differential ring.


\ :ref:`coerce <l416c6765627261-636f65726365>`\ \: \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 


\ :ref:`coerce <l4e6f6e4173736f6369617469766552696e67-636f65726365>`\ \: \ :ref:`Integer <l496e7465676572>`\  -> % 
  from \ :ref:`NonAssociativeRing <l4e6f6e4173736f6369617469766552696e67>`\ 


.. index::
   pair: OrdinaryDifferentialRing; coerce

:spadfun:`coerce`\: R -> % 
  \ ``coerce(r)``\  views \ ``r``\  as a value in the ordinary differential ring.

.. _l4f7264696e617279446966666572656e7469616c52696e67-636f6d6d757461746f72:

\ :ref:`commutator <l4e6f6e4173736f63696174697665526e67-636f6d6d757461746f72>`\ \: (%, %) -> % 
  from \ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-44:

\ :ref:`D <l446966666572656e7469616c52696e67-44>`\ \: % -> % 
  from \ :ref:`DifferentialRing <l446966666572656e7469616c52696e67>`\ 


\ :ref:`D <l446966666572656e7469616c52696e67-44>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`DifferentialRing <l446966666572656e7469616c52696e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-646966666572656e7469617465:

\ :ref:`differentiate <l446966666572656e7469616c52696e67-646966666572656e7469617465>`\ \: % -> % 
  from \ :ref:`DifferentialRing <l446966666572656e7469616c52696e67>`\ 


\ :ref:`differentiate <l446966666572656e7469616c52696e67-646966666572656e7469617465>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`DifferentialRing <l446966666572656e7469616c52696e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-646976696465:

\ :ref:`divide <l4575636c696465616e446f6d61696e-646976696465>`\ \: (%, %) -> Record(quotient: %, remainder: %) if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6575636c696465616e53697a65:

\ :ref:`euclideanSize <l4575636c696465616e446f6d61696e-6575636c696465616e53697a65>`\ \: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-65787072657373496465616c4d656d626572:

\ :ref:`expressIdealMember <l5072696e636970616c496465616c446f6d61696e-65787072657373496465616c4d656d626572>`\ \: (\ :ref:`List <l4c697374>`\  %, %) -> Union(\ :ref:`List <l4c697374>`\  %, failed) if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`PrincipalIdealDomain <l5072696e636970616c496465616c446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-657871756f:

\ :ref:`exquo <l456e7469726552696e67-657871756f>`\ \: (%, %) -> Union(%, failed) if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EntireRing <l456e7469726552696e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-657874656e6465644575636c696465616e:

\ :ref:`extendedEuclidean <l4575636c696465616e446f6d61696e-657874656e6465644575636c696465616e>`\ \: (%, %) -> Record(coef1: %, coef2: %, generator: %) if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 


\ :ref:`extendedEuclidean <l4575636c696465616e446f6d61696e-657874656e6465644575636c696465616e>`\ \: (%, %, %) -> Union(Record(coef1: %, coef2: %), failed) if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-666163746f72:

\ :ref:`factor <l556e69717565466163746f72697a6174696f6e446f6d61696e-666163746f72>`\ \: % -> \ :ref:`Factored <l466163746f726564>`\  % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`UniqueFactorizationDomain <l556e69717565466163746f72697a6174696f6e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-676364:

\ :ref:`gcd <l476364446f6d61696e-676364>`\ \: (%, %) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`GcdDomain <l476364446f6d61696e>`\ 


\ :ref:`gcd <l476364446f6d61696e-676364>`\ \: \ :ref:`List <l4c697374>`\  % -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`GcdDomain <l476364446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-676364506f6c796e6f6d69616c:

\ :ref:`gcdPolynomial <l476364446f6d61696e-676364506f6c796e6f6d69616c>`\ \: (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  %, \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  %) -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`GcdDomain <l476364446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-696e76:

\ :ref:`inv <l4469766973696f6e52696e67-696e76>`\ \: % -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`DivisionRing <l4469766973696f6e52696e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6c636d:

\ :ref:`lcm <l476364446f6d61696e-6c636d>`\ \: (%, %) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`GcdDomain <l476364446f6d61696e>`\ 


\ :ref:`lcm <l476364446f6d61696e-6c636d>`\ \: \ :ref:`List <l4c697374>`\  % -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`GcdDomain <l476364446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6c636d436f6566:

\ :ref:`lcmCoef <l4c6566744f726552696e67-6c636d436f6566>`\ \: (%, %) -> Record(llcm_res: %, coeff1: %, coeff2: %) if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`LeftOreRing <l4c6566744f726552696e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6c656674506f776572:

\ :ref:`leftPower <l4d61676d6157697468556e6974-6c656674506f776572>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`leftPower <l4d61676d61-6c656674506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6c6566745265636970:

\ :ref:`leftRecip <l4d61676d6157697468556e6974-6c6566745265636970>`\ \: % -> Union(%, failed) 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6d756c74694575636c696465616e:

\ :ref:`multiEuclidean <l4575636c696465616e446f6d61696e-6d756c74694575636c696465616e>`\ \: (\ :ref:`List <l4c697374>`\  %, %) -> Union(\ :ref:`List <l4c697374>`\  %, failed) if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6f6e653f:

\ :ref:`one? <l4d61676d6157697468556e6974-6f6e653f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-6f70706f736974653f:

\ :ref:`opposite? <l4162656c69616e4d6f6e6f6964-6f70706f736974653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-706c656e617279506f776572:

\ :ref:`plenaryPower <l4e6f6e4173736f63696174697665416c6765627261-706c656e617279506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  %

.. _l4f7264696e617279446966666572656e7469616c52696e67-7072696d653f:

\ :ref:`prime? <l556e69717565466163746f72697a6174696f6e446f6d61696e-7072696d653f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`UniqueFactorizationDomain <l556e69717565466163746f72697a6174696f6e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-7072696e636970616c496465616c:

\ :ref:`principalIdeal <l5072696e636970616c496465616c446f6d61696e-7072696e636970616c496465616c>`\ \: \ :ref:`List <l4c697374>`\  % -> Record(coef: \ :ref:`List <l4c697374>`\  %, generator: %) if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`PrincipalIdealDomain <l5072696e636970616c496465616c446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-71756f:

\ :ref:`quo <l4575636c696465616e446f6d61696e-71756f>`\ \: (%, %) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-7265636970:

\ :ref:`recip <l4d61676d6157697468556e6974-7265636970>`\ \: % -> Union(%, failed) 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-72656d:

\ :ref:`rem <l4575636c696465616e446f6d61696e-72656d>`\ \: (%, %) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-7269676874506f776572:

\ :ref:`rightPower <l4d61676d6157697468556e6974-7269676874506f776572>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`rightPower <l4d61676d61-7269676874506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-72696768745265636970:

\ :ref:`rightRecip <l4d61676d6157697468556e6974-72696768745265636970>`\ \: % -> Union(%, failed) 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-73616d706c65:

\ :ref:`sample <l4d61676d6157697468556e6974-73616d706c65>`\ \: % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-73697a654c6573733f:

\ :ref:`sizeLess? <l4575636c696465616e446f6d61696e-73697a654c6573733f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-73717561726546726565:

\ :ref:`squareFree <l556e69717565466163746f72697a6174696f6e446f6d61696e-73717561726546726565>`\ \: % -> \ :ref:`Factored <l466163746f726564>`\  % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`UniqueFactorizationDomain <l556e69717565466163746f72697a6174696f6e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-7371756172654672656550617274:

\ :ref:`squareFreePart <l556e69717565466163746f72697a6174696f6e446f6d61696e-7371756172654672656550617274>`\ \: % -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`UniqueFactorizationDomain <l556e69717565466163746f72697a6174696f6e446f6d61696e>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-7375627472616374496643616e:

\ :ref:`subtractIfCan <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-7375627472616374496643616e>`\ \: (%, %) -> Union(%, failed) 
  from \ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-756e69743f:

\ :ref:`unit? <l456e7469726552696e67-756e69743f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EntireRing <l456e7469726552696e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-756e697443616e6f6e6963616c:

\ :ref:`unitCanonical <l456e7469726552696e67-756e697443616e6f6e6963616c>`\ \: % -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EntireRing <l456e7469726552696e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-756e69744e6f726d616c:

\ :ref:`unitNormal <l456e7469726552696e67-756e69744e6f726d616c>`\ \: % -> Record(unit: %, canonical: %, associate: %) if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`EntireRing <l456e7469726552696e67>`\ 

.. _l4f7264696e617279446966666572656e7469616c52696e67-7a65726f3f:

\ :ref:`zero? <l4162656c69616e4d6f6e6f6964-7a65726f3f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\  

\ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\  

\ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\  

\ :ref:`Algebra <l416c6765627261>`\  % if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`BiModule <l42694d6f64756c65>`\ (%, %) 

\ :ref:`BiModule <l42694d6f64756c65>`\ (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\  

\ :ref:`canonicalsClosed <l63616e6f6e6963616c73436c6f736564>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`canonicalUnitNormal <l63616e6f6e6963616c556e69744e6f726d616c>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`CommutativeStar <l436f6d6d7574617469766553746172>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`DifferentialRing <l446966666572656e7469616c52696e67>`\  

\ :ref:`DivisionRing <l4469766973696f6e52696e67>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`EntireRing <l456e7469726552696e67>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`Field <l4669656c64>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`GcdDomain <l476364446f6d61696e>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`LeftModule <l4c6566744d6f64756c65>`\  % 

\ :ref:`LeftModule <l4c6566744d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`LeftOreRing <l4c6566744f726552696e67>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`Magma <l4d61676d61>`\  

\ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\  

\ :ref:`Module <l4d6f64756c65>`\  % if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`Module <l4d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`Monoid <l4d6f6e6f6964>`\  

\ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  % if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`NonAssociativeRing <l4e6f6e4173736f6369617469766552696e67>`\  

\ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\  

\ :ref:`NonAssociativeSemiRing <l4e6f6e4173736f6369617469766553656d6952696e67>`\  

\ :ref:`NonAssociativeSemiRng <l4e6f6e4173736f6369617469766553656d69526e67>`\  

\ :ref:`noZeroDivisors <l6e6f5a65726f44697669736f7273>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`PrincipalIdealDomain <l5072696e636970616c496465616c446f6d61696e>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`RightModule <l52696768744d6f64756c65>`\  % 

\ :ref:`RightModule <l52696768744d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`Ring <l52696e67>`\  

\ :ref:`Rng <l526e67>`\  

\ :ref:`SemiGroup <l53656d6947726f7570>`\  

\ :ref:`SemiRing <l53656d6952696e67>`\  

\ :ref:`SemiRng <l53656d69526e67>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

\ :ref:`TwoSidedRecip <l54776f53696465645265636970>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`UniqueFactorizationDomain <l556e69717565466163746f72697a6174696f6e446f6d61696e>`\  if R has \ :ref:`Field <l4669656c64>`\ 

\ :ref:`unitsKnown <l756e6974734b6e6f776e>`\  

