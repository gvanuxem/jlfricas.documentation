.. index:: NewtonInterpolation

.. _l4e6577746f6e496e746572706f6c6174696f6e:

NewtonInterpolation F
=====================

:viewcode:`fffg.spad line 593 <fffg.spad#L593>` :editcode:`[edit on github] <fffg.spad#L593>`

* F: \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 


This package exports Newton interpolation for the special case where the result is known to be in the original integral domain


.. _l4e6577746f6e496e746572706f6c6174696f6e-6e6577746f6e:

.. index::
   pair: NewtonInterpolation; newton

:spadfun:`newton`\: \ :ref:`List <l4c697374>`\  F -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F 
  \ ``newton``\ (\ ``l``\ ) returns the interpolating polynomial for the values \ ``l``\ , where the \ ``x``\ -coordinates are assumed to be [1, 2, 3, ..., \ ``n``\ ] and the coefficients of the interpolating polynomial are known to be in the domain \ ``F``\ . \ ``I``\ .\ ``e``\ ., it is a very streamlined version for a special case of interpolation.


