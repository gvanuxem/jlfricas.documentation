.. index:: GroebnerInternalPackage

.. _l47726f65626e6572496e7465726e616c5061636b616765:

GroebnerInternalPackage(Dom, Expon, Dpol)
=========================================

:viewcode:`gbintern.spad line 1 <gbintern.spad#L1>` :editcode:`[edit on github] <gbintern.spad#L1>`

* Dom: \ :ref:`GcdDomain <l476364446f6d61696e>`\ 

* Expon: \ :ref:`OrderedAbelianMonoidSup <l4f7264657265644162656c69616e4d6f6e6f6964537570>`\ 

* Dpol: Join(\ :ref:`FiniteAbelianMonoidRing <l46696e6974654162656c69616e4d6f6e6f696452696e67>`\ (Dom, Expon), \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ )


Author: Keywords: References: \ ``R``\ . Gebauer, \ ``M``\ . Moeller, On an Installation of Buchberger\ ``'s``\  Algorithm, \ ``JSC``\  (1988) 6, 275-286. Description This package provides low level tools for Groebner basis computations


.. _l47726f65626e6572496e7465726e616c5061636b616765-63726564506f6c:

.. index::
   pair: GroebnerInternalPackage; credPol

:spadfun:`credPol`\: (Dpol, \ :ref:`List <l4c697374>`\  Dpol) -> Dpol 
  \ ``credPol ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-6372697442:

.. index::
   pair: GroebnerInternalPackage; critB

:spadfun:`critB`\: (Expon, Expon, Expon, Expon) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``critB ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-63726974426f6e44:

.. index::
   pair: GroebnerInternalPackage; critBonD

:spadfun:`critBonD`\: (Dpol, \ :ref:`List <l4c697374>`\  Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol)) -> \ :ref:`List <l4c697374>`\  Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol) 
  \ ``critBonD ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-637269744d:

.. index::
   pair: GroebnerInternalPackage; critM

:spadfun:`critM`\: (Expon, Expon) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``critM ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-637269744d6f6e4431:

.. index::
   pair: GroebnerInternalPackage; critMonD1

:spadfun:`critMonD1`\: (Expon, \ :ref:`List <l4c697374>`\  Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol)) -> \ :ref:`List <l4c697374>`\  Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol) 
  \ ``critMonD1 ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-637269744d546f6e4431:

.. index::
   pair: GroebnerInternalPackage; critMTonD1

:spadfun:`critMTonD1`\: \ :ref:`List <l4c697374>`\  Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol) -> \ :ref:`List <l4c697374>`\  Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol) 
  \ ``critMTonD1 ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-63726974704f72646572:

.. index::
   pair: GroebnerInternalPackage; critpOrder

:spadfun:`critpOrder`\: (Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol), Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol)) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``critpOrder ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-6372697454:

.. index::
   pair: GroebnerInternalPackage; critT

:spadfun:`critT`\: Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``critT ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-667072696e64494e464f:

.. index::
   pair: GroebnerInternalPackage; fprindINFO

:spadfun:`fprindINFO`\: (Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol), Dpol, Dpol, \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``fprindINFO ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-676261736973:

.. index::
   pair: GroebnerInternalPackage; gbasis

:spadfun:`gbasis`\: (\ :ref:`List <l4c697374>`\  Dpol, \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  Dpol 
  \ ``gbasis(pols, f1, f2)``\  computes a Groebner basis of \ ``pols``\ .

.. _l47726f65626e6572496e7465726e616c5061636b616765-676261736973457874656e64:

.. index::
   pair: GroebnerInternalPackage; gbasisExtend

:spadfun:`gbasisExtend`\: (\ :ref:`List <l4c697374>`\  Dpol, \ :ref:`List <l4c697374>`\  Dpol, \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  Dpol 
  \ ``gbasisExtend(pols, gb, f1, f2)``\  computes a Groebner basis of concat(\ ``pols``\ , \ ``gb``\ ) where \ ``gb``\  is assumed to be already a Groebner basis, i.e. no \ ``S``\ -polynomials among elements of \ ``gb``\  will ever be considered.

.. _l47726f65626e6572496e7465726e616c5061636b616765-684d6f6e6963:

.. index::
   pair: GroebnerInternalPackage; hMonic

:spadfun:`hMonic`\: Dpol -> Dpol 
  \ ``hMonic ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-6c65706f6c:

.. index::
   pair: GroebnerInternalPackage; lepol

:spadfun:`lepol`\: Dpol -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``lepol ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-6d616b6543726974:

.. index::
   pair: GroebnerInternalPackage; makeCrit

:spadfun:`makeCrit`\: (Record(totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , pol: Dpol), Dpol, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol) 
  \ ``makeCrit ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-6d696e476261736973:

.. index::
   pair: GroebnerInternalPackage; minGbasis

:spadfun:`minGbasis`\: \ :ref:`List <l4c697374>`\  Dpol -> \ :ref:`List <l4c697374>`\  Dpol 
  \ ``minGbasis ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-7072696e62:

.. index::
   pair: GroebnerInternalPackage; prinb

:spadfun:`prinb`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``prinb ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-7072696e64494e464f:

.. index::
   pair: GroebnerInternalPackage; prindINFO

:spadfun:`prindINFO`\: (Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol), Dpol, Dpol, \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``prindINFO ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-7072696e706f6c494e464f:

.. index::
   pair: GroebnerInternalPackage; prinpolINFO

:spadfun:`prinpolINFO`\: \ :ref:`List <l4c697374>`\  Dpol -> \ :ref:`Void <l566f6964>`\  
  \ ``prinpolINFO ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-7072696e7368494e464f:

.. index::
   pair: GroebnerInternalPackage; prinshINFO

:spadfun:`prinshINFO`\: Dpol -> \ :ref:`Void <l566f6964>`\  
  \ ``prinshINFO ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-726564506f:

.. index::
   pair: GroebnerInternalPackage; redPo

:spadfun:`redPo`\: (Dpol, \ :ref:`List <l4c697374>`\  Dpol) -> Record(poly: Dpol, mult: Dom) 
  \ ``redPo ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-726564506f6c:

.. index::
   pair: GroebnerInternalPackage; redPol

:spadfun:`redPol`\: (Dpol, \ :ref:`List <l4c697374>`\  Dpol) -> Dpol 
  \ ``redPol ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-73506f6c:

.. index::
   pair: GroebnerInternalPackage; sPol

:spadfun:`sPol`\: Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol) -> Dpol 
  \ ``sPol ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-757064617444:

.. index::
   pair: GroebnerInternalPackage; updatD

:spadfun:`updatD`\: (\ :ref:`List <l4c697374>`\  Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol), \ :ref:`List <l4c697374>`\  Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol)) -> \ :ref:`List <l4c697374>`\  Record(lcmfij: Expon, totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , poli: Dpol, polj: Dpol) 
  \ ``updatD ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-757064617446:

.. index::
   pair: GroebnerInternalPackage; updatF

:spadfun:`updatF`\: (Dpol, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`List <l4c697374>`\  Record(totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , pol: Dpol)) -> \ :ref:`List <l4c697374>`\  Record(totdeg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , pol: Dpol) 
  \ ``updatF ``\ \undocumented

.. _l47726f65626e6572496e7465726e616c5061636b616765-7669727475616c446567726565:

.. index::
   pair: GroebnerInternalPackage; virtualDegree

:spadfun:`virtualDegree`\: Dpol -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``virtualDegree ``\ \undocumented


