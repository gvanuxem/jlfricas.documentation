.. index:: MoebiusTransform

.. _l4d6f65626975735472616e73666f726d:

MoebiusTransform F
==================

:viewcode:`moebius.spad line 1 <moebius.spad#L1>` :editcode:`[edit on github] <moebius.spad#L1>`

* F: \ :ref:`Field <l4669656c64>`\ 


MoebiusTransform(\ ``F``\ ) is the domain of fractional linear (Moebius) transformations over \ ``F``\ .


.. _l4d6f65626975735472616e73666f726d-31:

\ :ref:`1 <l4d61676d6157697468556e6974-31>`\ \: % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4d6f65626975735472616e73666f726d-2a:

\ :ref:`\* <l4d61676d61-2a>`\ \: (%, %) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4d6f65626975735472616e73666f726d-2f:

\ :ref:`/ <l47726f7570-2f>`\ \: (%, %) -> % 
  from \ :ref:`Group <l47726f7570>`\ 

.. _l4d6f65626975735472616e73666f726d-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4d6f65626975735472616e73666f726d-5e:

\ :ref:`^ <l47726f7570-5e>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`Group <l47726f7570>`\ 


\ :ref:`^ <l4d61676d6157697468556e6974-5e>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`^ <l4d61676d61-5e>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4d6f65626975735472616e73666f726d-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4d6f65626975735472616e73666f726d-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l4d6f65626975735472616e73666f726d-636f6d6d757461746f72:

\ :ref:`commutator <l47726f7570-636f6d6d757461746f72>`\ \: (%, %) -> % 
  from \ :ref:`Group <l47726f7570>`\ 

.. _l4d6f65626975735472616e73666f726d-636f6e6a7567617465:

\ :ref:`conjugate <l47726f7570-636f6e6a7567617465>`\ \: (%, %) -> % 
  from \ :ref:`Group <l47726f7570>`\ 

.. _l4d6f65626975735472616e73666f726d-6576616c:

.. index::
   pair: MoebiusTransform; eval

:spadfun:`eval`\: (%, F) -> F 
  \ ``eval(m, x)``\  returns \ ``(a*x + b)/(c*x + d)``\  where \ ``m = moebius(a, b, c, d)``\  (see \ :ref:`moebius <l4d6f65626975735472616e73666f726d-6d6f6562697573>`\ ).


.. index::
   pair: MoebiusTransform; eval

:spadfun:`eval`\: (%, \ :ref:`OnePointCompletion <l4f6e65506f696e74436f6d706c6574696f6e>`\  F) -> \ :ref:`OnePointCompletion <l4f6e65506f696e74436f6d706c6574696f6e>`\  F 
  \ ``eval(m, x)``\  returns \ ``(a*x + b)/(c*x + d)``\  where \ ``m = moebius(a, b, c, d)``\  (see \ :ref:`moebius <l4d6f65626975735472616e73666f726d-6d6f6562697573>`\ ).

.. _l4d6f65626975735472616e73666f726d-696e76:

\ :ref:`inv <l47726f7570-696e76>`\ \: % -> % 
  from \ :ref:`Group <l47726f7570>`\ 

.. _l4d6f65626975735472616e73666f726d-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4d6f65626975735472616e73666f726d-6c656674506f776572:

\ :ref:`leftPower <l4d61676d6157697468556e6974-6c656674506f776572>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`leftPower <l4d61676d61-6c656674506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4d6f65626975735472616e73666f726d-6c6566745265636970:

\ :ref:`leftRecip <l4d61676d6157697468556e6974-6c6566745265636970>`\ \: % -> Union(%, failed) 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4d6f65626975735472616e73666f726d-6d6f6562697573:

.. index::
   pair: MoebiusTransform; moebius

:spadfun:`moebius`\: (F, F, F, F) -> % 
  \ ``moebius(a, b, c, d)``\  returns \ ``matrix [[a, b], [c, d]]``\ .

.. _l4d6f65626975735472616e73666f726d-6f6e653f:

\ :ref:`one? <l4d61676d6157697468556e6974-6f6e653f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4d6f65626975735472616e73666f726d-7265636970:

.. index::
   pair: MoebiusTransform; recip

:spadfun:`recip`\: % -> % 
  \ ``recip(m)``\  = recip() * \ ``m``\ 


\ :ref:`recip <l4d61676d6157697468556e6974-7265636970>`\ \: % -> Union(%, failed) 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


.. index::
   pair: MoebiusTransform; recip

:spadfun:`recip`\: () -> % 
  \ ``recip()``\  returns \ ``matrix [[0, 1], [1, 0]]``\  representing the map \ ``x -> 1 / x``\ .

.. _l4d6f65626975735472616e73666f726d-7269676874506f776572:

\ :ref:`rightPower <l4d61676d6157697468556e6974-7269676874506f776572>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`rightPower <l4d61676d61-7269676874506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4d6f65626975735472616e73666f726d-72696768745265636970:

\ :ref:`rightRecip <l4d61676d6157697468556e6974-72696768745265636970>`\ \: % -> Union(%, failed) 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4d6f65626975735472616e73666f726d-73616d706c65:

\ :ref:`sample <l4d61676d6157697468556e6974-73616d706c65>`\ \: % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4d6f65626975735472616e73666f726d-7363616c65:

.. index::
   pair: MoebiusTransform; scale

:spadfun:`scale`\: (%, F) -> % 
  \ ``scale(m, h)``\  returns \ ``scale(h) * m``\  (see \ :ref:`shift <l4d6f65626975735472616e73666f726d-7368696674>`\ ).


.. index::
   pair: MoebiusTransform; scale

:spadfun:`scale`\: F -> % 
  \ ``scale(k)``\  returns \ ``matrix [[k, 0], [0, 1]]``\  representing the map \ ``x -> k * x``\ .

.. _l4d6f65626975735472616e73666f726d-7368696674:

.. index::
   pair: MoebiusTransform; shift

:spadfun:`shift`\: (%, F) -> % 
  \ ``shift(m, h)``\  returns \ ``shift(h) * m``\  (see \ :ref:`shift <l4d6f65626975735472616e73666f726d-7368696674>`\ ).


.. index::
   pair: MoebiusTransform; shift

:spadfun:`shift`\: F -> % 
  \ ``shift(k)``\  returns \ ``matrix [[1, k], [0, 1]]``\  representing the map \ ``x -> x + k``\ .


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`Group <l47726f7570>`\  

\ :ref:`Magma <l4d61676d61>`\  

\ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\  

\ :ref:`Monoid <l4d6f6e6f6964>`\  

\ :ref:`SemiGroup <l53656d6947726f7570>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

\ :ref:`TwoSidedRecip <l54776f53696465645265636970>`\  

\ :ref:`unitsKnown <l756e6974734b6e6f776e>`\  

