.. index:: Commutator

.. _l436f6d6d757461746f72:

Commutator
==========

:viewcode:`fnla.spad line 32 <fnla.spad#L32>` :editcode:`[edit on github] <fnla.spad#L32>`


A type for basic commutators


.. _l436f6d6d757461746f72-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l436f6d6d757461746f72-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l436f6d6d757461746f72-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l436f6d6d757461746f72-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l436f6d6d757461746f72-6d6b636f6d6d:

.. index::
   pair: Commutator; mkcomm

:spadfun:`mkcomm`\: (%, %) -> % 
  \ ``mkcomm(i, j)``\  is undocumented.


.. index::
   pair: Commutator; mkcomm

:spadfun:`mkcomm`\: \ :ref:`Integer <l496e7465676572>`\  -> % 
  \ ``mkcomm(i)``\  is undocumented.


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

