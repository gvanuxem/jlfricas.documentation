.. index:: FunctionSpaceSum

.. _l46756e6374696f6e537061636553756d:

FunctionSpaceSum(R, F)
======================

:viewcode:`combfunc.spad line 2739 <combfunc.spad#L2739>` :editcode:`[edit on github] <combfunc.spad#L2739>`

* R: Join(\ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ , \ :ref:`Comparable <l436f6d70617261626c65>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`LinearlyExplicitOver <l4c696e6561726c794578706c696369744f766572>`\  \ :ref:`Integer <l496e7465676572>`\ )

* F: Join(\ :ref:`FunctionSpace <l46756e6374696f6e5370616365>`\  R, \ :ref:`CombinatorialOpsCategory <l436f6d62696e61746f7269616c4f707343617465676f7279>`\ , \ :ref:`AlgebraicallyClosedField <l416c67656272616963616c6c79436c6f7365644669656c64>`\ , \ :ref:`TranscendentalFunctionCategory <l5472616e7363656e64656e74616c46756e6374696f6e43617465676f7279>`\ )


computes sums of top-level expressions.


.. _l46756e6374696f6e537061636553756d-73756d:

.. index::
   pair: FunctionSpaceSum; sum

:spadfun:`sum`\: (F, \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\  F) -> F 
  \ ``sum(f(n), n = a..b)``\  returns \ ``f``\ (a) + \ ``f``\ (\ ``a+1``\ ) + ... + \ ``f``\ (\ ``b``\ ).


.. index::
   pair: FunctionSpaceSum; sum

:spadfun:`sum`\: (F, \ :ref:`Symbol <l53796d626f6c>`\ ) -> F 
  \ ``sum(a(n), n)``\  returns A(\ ``n``\ ) such that A(\ ``n+1``\ ) - A(\ ``n``\ ) = a(\ ``n``\ ).


