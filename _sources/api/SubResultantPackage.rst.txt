.. index:: SubResultantPackage

.. _l537562526573756c74616e745061636b616765:

SubResultantPackage(R, UP)
==========================

:viewcode:`intrf.spad line 1 <intrf.spad#L1>` :editcode:`[edit on github] <intrf.spad#L1>`

* R: \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  R


This package computes the subresultants of two polynomials which is needed for the `Lazard Rioboo' enhancement to Tragers integrations formula. For efficiency reasons this has been rewritten to call Lionel Ducos package which is currently the best one.  


.. _l537562526573756c74616e745061636b616765-7072696d697469766550617274:

.. index::
   pair: SubResultantPackage; primitivePart

:spadfun:`primitivePart`\: (UP, R) -> UP if R has \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 
  \ ``primitivePart(p, q)``\  reduces the coefficient of \ ``p``\  modulo \ ``q``\ , takes the primitive part of the result, and ensures that the leading coefficient of that result is monic.

.. _l537562526573756c74616e745061636b616765-737562726573756c74616e74566563746f72:

.. index::
   pair: SubResultantPackage; subresultantVector

:spadfun:`subresultantVector`\: (UP, UP) -> \ :ref:`PrimitiveArray <l5072696d69746976654172726179>`\  UP 
  \ ``subresultantVector(p, q)``\  returns \ ``[p0, ..., pn]``\  where \ ``pi``\  is the \ ``i``\ -th subresultant of \ ``p``\  and \ ``q``\ . In particular, \ ``p0 = resultant(p, q)``\ .


