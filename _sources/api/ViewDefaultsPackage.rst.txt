.. index:: ViewDefaultsPackage

.. _l5669657744656661756c74735061636b616765:

ViewDefaultsPackage
===================

:viewcode:`viewDef.spad line 1 <viewDef.spad#L1>` :editcode:`[edit on github] <viewDef.spad#L1>`


ViewportDefaultsPackage describes default and user definable values for graphics


.. _l5669657744656661756c74735061636b616765-61786573436f6c6f7244656661756c74:

.. index::
   pair: ViewDefaultsPackage; axesColorDefault

:spadfun:`axesColorDefault`\: () -> \ :ref:`Palette <l50616c65747465>`\  
  \ ``axesColorDefault()``\  returns the default color of the axes in a 2D viewport.


.. index::
   pair: ViewDefaultsPackage; axesColorDefault

:spadfun:`axesColorDefault`\: \ :ref:`Palette <l50616c65747465>`\  -> \ :ref:`Palette <l50616c65747465>`\  
  \ ``axesColorDefault(p)``\  sets the default color of the axes in a 2D viewport to the palette \ ``p``\ .

.. _l5669657744656661756c74735061636b616765-6c696e65436f6c6f7244656661756c74:

.. index::
   pair: ViewDefaultsPackage; lineColorDefault

:spadfun:`lineColorDefault`\: () -> \ :ref:`Palette <l50616c65747465>`\  
  \ ``lineColorDefault()``\  returns the default color of lines connecting points in a 2D viewport.


.. index::
   pair: ViewDefaultsPackage; lineColorDefault

:spadfun:`lineColorDefault`\: \ :ref:`Palette <l50616c65747465>`\  -> \ :ref:`Palette <l50616c65747465>`\  
  \ ``lineColorDefault(p)``\  sets the default color of lines connecting points in a 2D viewport to the palette \ ``p``\ .

.. _l5669657744656661756c74735061636b616765-706f696e74436f6c6f7244656661756c74:

.. index::
   pair: ViewDefaultsPackage; pointColorDefault

:spadfun:`pointColorDefault`\: () -> \ :ref:`Palette <l50616c65747465>`\  
  \ ``pointColorDefault()``\  returns the default color of points in a 2D viewport.


.. index::
   pair: ViewDefaultsPackage; pointColorDefault

:spadfun:`pointColorDefault`\: \ :ref:`Palette <l50616c65747465>`\  -> \ :ref:`Palette <l50616c65747465>`\  
  \ ``pointColorDefault(p)``\  sets the default color of points in a 2D viewport to the palette \ ``p``\ .

.. _l5669657744656661756c74735061636b616765-706f696e7453697a6544656661756c74:

.. index::
   pair: ViewDefaultsPackage; pointSizeDefault

:spadfun:`pointSizeDefault`\: () -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``pointSizeDefault()``\  returns the default size of the points in a 2D viewport.


.. index::
   pair: ViewDefaultsPackage; pointSizeDefault

:spadfun:`pointSizeDefault`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``pointSizeDefault(i)``\  sets the default size of the points in a 2D viewport to \ ``i``\ .

.. _l5669657744656661756c74735061636b616765-74756265506f696e747344656661756c74:

.. index::
   pair: ViewDefaultsPackage; tubePointsDefault

:spadfun:`tubePointsDefault`\: () -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``tubePointsDefault()``\  returns the number of points to be used when creating the circle to be used in creating a 3D tube plot.


.. index::
   pair: ViewDefaultsPackage; tubePointsDefault

:spadfun:`tubePointsDefault`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``tubePointsDefault(i)``\  sets the number of points to use when creating the circle to be used in creating a 3D tube plot to \ ``i``\ .

.. _l5669657744656661756c74735061636b616765-7475626552616469757344656661756c74:

.. index::
   pair: ViewDefaultsPackage; tubeRadiusDefault

:spadfun:`tubeRadiusDefault`\: () -> \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\  
  \ ``tubeRadiusDefault()``\  returns the radius used for a 3D tube plot.


.. index::
   pair: ViewDefaultsPackage; tubeRadiusDefault

:spadfun:`tubeRadiusDefault`\: \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\  
  \ ``tubeRadiusDefault(r)``\  sets the default radius for a 3D tube plot to \ ``r``\ .

.. _l5669657744656661756c74735061636b616765-756e697473436f6c6f7244656661756c74:

.. index::
   pair: ViewDefaultsPackage; unitsColorDefault

:spadfun:`unitsColorDefault`\: () -> \ :ref:`Palette <l50616c65747465>`\  
  \ ``unitsColorDefault()``\  returns the default color of the unit ticks in a 2D viewport.


.. index::
   pair: ViewDefaultsPackage; unitsColorDefault

:spadfun:`unitsColorDefault`\: \ :ref:`Palette <l50616c65747465>`\  -> \ :ref:`Palette <l50616c65747465>`\  
  \ ``unitsColorDefault(p)``\  sets the default color of the unit ticks in a 2D viewport to the palette \ ``p``\ .

.. _l5669657744656661756c74735061636b616765-76617231537465707344656661756c74:

.. index::
   pair: ViewDefaultsPackage; var1StepsDefault

:spadfun:`var1StepsDefault`\: () -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``var1StepsDefault()``\  is the current setting for the number of steps to take when creating a 3D mesh in the direction of the first defined free variable (a free variable is considered defined when its range is specified (e.g. \ ``x=0``\ ..10)).


.. index::
   pair: ViewDefaultsPackage; var1StepsDefault

:spadfun:`var1StepsDefault`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``var1StepsDefault(i)``\  sets the number of steps to take when creating a 3D mesh in the direction of the first defined free variable to \ ``i``\  (a free variable is considered defined when its range is specified (e.g. \ ``x=0``\ ..10)).

.. _l5669657744656661756c74735061636b616765-76617232537465707344656661756c74:

.. index::
   pair: ViewDefaultsPackage; var2StepsDefault

:spadfun:`var2StepsDefault`\: () -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``var2StepsDefault()``\  is the current setting for the number of steps to take when creating a 3D mesh in the direction of the first defined free variable (a free variable is considered defined when its range is specified (e.g. \ ``x=0``\ ..10)).


.. index::
   pair: ViewDefaultsPackage; var2StepsDefault

:spadfun:`var2StepsDefault`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``var2StepsDefault(i)``\  sets the number of steps to take when creating a 3D mesh in the direction of the first defined free variable to \ ``i``\  (a free variable is considered defined when its range is specified (e.g. \ ``x=0``\ ..10)).

.. _l5669657744656661756c74735061636b616765-7669657744656661756c7473:

.. index::
   pair: ViewDefaultsPackage; viewDefaults

:spadfun:`viewDefaults`\: () -> \ :ref:`Void <l566f6964>`\  
  \ ``viewDefaults()``\  resets all the default graphics settings.

.. _l5669657744656661756c74735061636b616765-76696577506f7344656661756c74:

.. index::
   pair: ViewDefaultsPackage; viewPosDefault

:spadfun:`viewPosDefault`\: () -> \ :ref:`List <l4c697374>`\  \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``viewPosDefault()``\  returns the default \ ``X``\  and \ ``Y``\  position of a viewport window unless overridden explicitly, newly created viewports will have this \ ``X``\  and \ ``Y``\  coordinate.


.. index::
   pair: ViewDefaultsPackage; viewPosDefault

:spadfun:`viewPosDefault`\: \ :ref:`List <l4c697374>`\  \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``viewPosDefault([x, y])``\  sets the default \ ``X``\  and \ ``Y``\  position of a viewport window unless overridden explicitly, newly created viewports will have th \ ``X``\  and \ ``Y``\  coordinates \ ``x``\ , \ ``y``\ .

.. _l5669657744656661756c74735061636b616765-7669657753697a6544656661756c74:

.. index::
   pair: ViewDefaultsPackage; viewSizeDefault

:spadfun:`viewSizeDefault`\: () -> \ :ref:`List <l4c697374>`\  \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``viewSizeDefault()``\  returns the default viewport width and height.


.. index::
   pair: ViewDefaultsPackage; viewSizeDefault

:spadfun:`viewSizeDefault`\: \ :ref:`List <l4c697374>`\  \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``viewSizeDefault([w, h])``\  sets the default viewport width to \ ``w``\  and height to \ ``h``\ .

.. _l5669657744656661756c74735061636b616765-766965775772697465417661696c61626c65:

.. index::
   pair: ViewDefaultsPackage; viewWriteAvailable

:spadfun:`viewWriteAvailable`\: () -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``viewWriteAvailable()``\  returns a list of available methods for writing, such as BITMAP, POSTSCRIPT, etc.

.. _l5669657744656661756c74735061636b616765-76696577577269746544656661756c74:

.. index::
   pair: ViewDefaultsPackage; viewWriteDefault

:spadfun:`viewWriteDefault`\: () -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``viewWriteDefault()``\  returns the list of things to write in a viewport data file; a viewAlone file is always generated.


.. index::
   pair: ViewDefaultsPackage; viewWriteDefault

:spadfun:`viewWriteDefault`\: \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``viewWriteDefault(l)``\  sets the default list of things to write in a viewport data file to the strings in \ ``l``\ ; a viewAlone file is always generated.


