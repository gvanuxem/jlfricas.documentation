.. index:: FortranProgram

.. _l466f727472616e50726f6772616d:

FortranProgram(name, returnType, arguments, symbols)
====================================================

:viewcode:`fortran.spad line 726 <fortran.spad#L726>` :editcode:`[edit on github] <fortran.spad#L726>`

* name: \ :ref:`Symbol <l53796d626f6c>`\ 

* returnType: Union(fst: \ :ref:`FortranScalarType <l466f727472616e5363616c617254797065>`\ , void: void)

* arguments: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ 

* symbols: \ :ref:`SymbolTable <l53796d626f6c5461626c65>`\ 


\ :ref:`FortranProgram <l466f727472616e50726f6772616d>`\  allows the user to build and manipulate simple models of FORTRAN subprograms. These can then be transformed into actual FORTRAN notation.


.. _l466f727472616e50726f6772616d-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  -> % 
  \ ``coerce(eq)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Float <l466c6f6174>`\  -> % 
  \ ``coerce(eq)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> % 
  \ ``coerce(eq)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`MachineComplex <l4d616368696e65436f6d706c6578>`\  -> % 
  \ ``coerce(eq)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`MachineFloat <l4d616368696e65466c6f6174>`\  -> % 
  \ ``coerce(eq)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`MachineInteger <l4d616368696e65496e7465676572>`\  -> % 
  \ ``coerce(eq)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  -> % 
  \ ``coerce(e)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Float <l466c6f6174>`\  -> % 
  \ ``coerce(e)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> % 
  \ ``coerce(e)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`MachineComplex <l4d616368696e65436f6d706c6578>`\  -> % 
  \ ``coerce(e)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`MachineFloat <l4d616368696e65466c6f6174>`\  -> % 
  \ ``coerce(e)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`MachineInteger <l4d616368696e65496e7465676572>`\  -> % 
  \ ``coerce(e)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`FortranCode <l466f727472616e436f6465>`\  -> % 
  \ ``coerce(fc)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: \ :ref:`List <l4c697374>`\  \ :ref:`FortranCode <l466f727472616e436f6465>`\  -> % 
  \ ``coerce(lfc)``\  is undocumented.


.. index::
   pair: FortranProgram; coerce

:spadfun:`coerce`\: Record(localSymbols: \ :ref:`SymbolTable <l53796d626f6c5461626c65>`\ , code: \ :ref:`List <l4c697374>`\  \ :ref:`FortranCode <l466f727472616e436f6465>`\ ) -> % 
  \ ``coerce(r)``\  is undocumented.

.. _l466f727472616e50726f6772616d-6f75747075744173466f727472616e:

\ :ref:`outputAsFortran <l466f727472616e50726f6772616d43617465676f7279-6f75747075744173466f727472616e>`\ \: % -> \ :ref:`Void <l566f6964>`\  
  from \ :ref:`FortranProgramCategory <l466f727472616e50726f6772616d43617465676f7279>`\ 


\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`FortranProgramCategory <l466f727472616e50726f6772616d43617465676f7279>`\  

