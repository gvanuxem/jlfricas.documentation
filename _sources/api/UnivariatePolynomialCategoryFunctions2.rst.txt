.. index:: UnivariatePolynomialCategoryFunctions2

.. _l556e6976617269617465506f6c796e6f6d69616c43617465676f727946756e6374696f6e7332:

UnivariatePolynomialCategoryFunctions2(R, PR, S, PS)
====================================================

:viewcode:`polycat.spad line 1210 <polycat.spad#L1210>` :editcode:`[edit on github] <polycat.spad#L1210>`

* R: Join(\ :ref:`SemiRng <l53656d69526e67>`\ , \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ )

* PR: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  R

* S: Join(\ :ref:`SemiRng <l53656d69526e67>`\ , \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ )

* PS: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  S


Mapping from polynomials over \ ``R``\  to polynomials over \ ``S``\  given a map from \ ``R``\  to \ ``S``\  assumed to send zero to zero.


.. _l556e6976617269617465506f6c796e6f6d69616c43617465676f727946756e6374696f6e7332-6d6170:

.. index::
   pair: UnivariatePolynomialCategoryFunctions2; map

:spadfun:`map`\: (R -> S, PR) -> PS 
  \ ``map(f, p)``\  takes a function \ ``f``\  from \ ``R``\  to \ ``S``\ , and applies it to each (non-zero) coefficient of a polynomial \ ``p``\  over \ ``R``\ , getting a new polynomial over \ ``S``\ . Note: since the map is not applied to zero elements, it may map zero to zero.


