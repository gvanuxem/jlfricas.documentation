.. index:: RDEaux

.. _l524445617578:

RDEaux F
========

:viewcode:`intpar.spad line 753 <intpar.spad#L753>` :editcode:`[edit on github] <intpar.spad#L753>`

* F: \ :ref:`Field <l4669656c64>`\ 


This package contains special case for RDE solver.


.. _l524445617578-6d756c74695f53504445:

.. index::
   pair: RDEaux; multi_SPDE

:spadfun:`multi_SPDE`\: (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, \ :ref:`List <l4c697374>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F) -> Union(\ :ref:`List <l4c697374>`\  Record(ans: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, remainder: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F), Record(ans: \ :ref:`List <l4c697374>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, acoeff: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, eegen: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, bpar: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, lcpar: \ :ref:`List <l4c697374>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, dpar: \ :ref:`Integer <l496e7465676572>`\ )) 
  \ ``multi_SPDE(a, b, lc, d, der)``\ 

.. _l524445617578-5350444531:

.. index::
   pair: RDEaux; SPDE1

:spadfun:`SPDE1`\: (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F) -> Record(ans: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, remainder: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F) 
  \ ``SPDE1(b, c, D)``\  solves \ ``Q'``\  + \ ``b``\  \ ``Q``\  = \ ``c``\  and returns [\ ``Q``\ , \ ``r``\ ] where \ ``r``\  = \ ``c``\  - ( \ ``Q'``\  + \ ``b``\  \ ``Q``\ ). That is when \ ``r``\  is zero then \ ``Q``\  is \ ``true``\  solution, otherwise \ ``r``\  represents unsolved part of \ ``c``\ . Moreover def(\ ``r``\ ) < deg(\ ``bQ``\ ). Note: \ ``SPDE1``\  assumes that deg(\ ``Q'``\ ) < deg(\ ``bQ``\ ) for all \ ``Q``\ .


