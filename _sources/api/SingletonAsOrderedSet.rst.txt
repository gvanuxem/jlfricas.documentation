.. index:: SingletonAsOrderedSet

.. _l53696e676c65746f6e41734f726465726564536574:

SingletonAsOrderedSet
=====================

:viewcode:`poly.spad line 1 <poly.spad#L1>` :editcode:`[edit on github] <poly.spad#L1>`


This trivial domain let us build Univariate Polynomials in an anonymous variable.


.. _l53696e676c65746f6e41734f726465726564536574-3c3d:

\ :ref:`<= <l5061727469616c4f72646572-3c3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-3c:

\ :ref:`< <l5061727469616c4f72646572-3c>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-3e3d:

\ :ref:`>= <l5061727469616c4f72646572-3e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-3e:

\ :ref:`> <l5061727469616c4f72646572-3e>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-636f6e76657274:

.. index::
   pair: SingletonAsOrderedSet; convert

:spadfun:`convert`\: % -> \ :ref:`Symbol <l53796d626f6c>`\  
  

.. _l53696e676c65746f6e41734f726465726564536574-637265617465:

.. index::
   pair: SingletonAsOrderedSet; create

:spadfun:`create`\: () -> % 
  \ ``create()``\  returns the only element of \ ``\%``\ .

.. _l53696e676c65746f6e41734f726465726564536574-68617368:

\ :ref:`hash <l4861736861626c65-68617368>`\ \: % -> \ :ref:`SingleInteger <l53696e676c65496e7465676572>`\  
  from \ :ref:`Hashable <l4861736861626c65>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-6861736855706461746521:

\ :ref:`hashUpdate! <l4861736861626c65-6861736855706461746521>`\ \: (\ :ref:`HashState <l486173685374617465>`\ , %) -> \ :ref:`HashState <l486173685374617465>`\  
  from \ :ref:`Hashable <l4861736861626c65>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-6d6178:

\ :ref:`max <l4f726465726564536574-6d6178>`\ \: (%, %) -> % 
  from \ :ref:`OrderedSet <l4f726465726564536574>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-6d696e:

\ :ref:`min <l4f726465726564536574-6d696e>`\ \: (%, %) -> % 
  from \ :ref:`OrderedSet <l4f726465726564536574>`\ 

.. _l53696e676c65746f6e41734f726465726564536574-736d616c6c65723f:

\ :ref:`smaller? <l436f6d70617261626c65-736d616c6c65723f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Comparable <l436f6d70617261626c65>`\ 


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`Canonical <l43616e6f6e6963616c>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`Comparable <l436f6d70617261626c65>`\  

\ :ref:`Hashable <l4861736861626c65>`\  

\ :ref:`OrderedSet <l4f726465726564536574>`\  

\ :ref:`PartialOrder <l5061727469616c4f72646572>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

