.. index:: ModularFactorizationGeneral

.. _l4d6f64756c6172466163746f72697a6174696f6e47656e6572616c:

ModularFactorizationGeneral(PA, MMT, MD, PMD, MO)
=================================================

:viewcode:`ffact.spad line 392 <ffact.spad#L392>` :editcode:`[edit on github] <ffact.spad#L392>`

* PA: \ :ref:`Type <l54797065>`\ 

* MMT: \ :ref:`Type <l54797065>`\ 

* MD: \ :ref:`Type <l54797065>`\ 

* PMD: \ :ref:`Type <l54797065>`\ 

* MO: \ :ref:`ModularFactorizationOperations <l4d6f64756c6172466163746f72697a6174696f6e4f7065726174696f6e73>`\ (PA, MMT, MD, PMD)


This package implements factorization of polynomials over finite fields using a variant of Kaltofen-Shoup method. Nontrivial data have abstract representation, operations are provided by matching package.


.. _l4d6f64756c6172466163746f72697a6174696f6e47656e6572616c-646466616374:

.. index::
   pair: ModularFactorizationGeneral; ddfact

:spadfun:`ddfact`\: (PA, MD) -> \ :ref:`List <l4c697374>`\  Record(poly: PA, degree: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , separate_factors: () -> \ :ref:`List <l4c697374>`\  PA) 
  \ ``ddfact(pv, md)``\  computes distinct degree factorization of \ ``pv``\ . \ ``pv``\  is assumed square-free and monic, \ ``md``\  is info representing finite field.

.. _l4d6f64756c6172466163746f72697a6174696f6e47656e6572616c-6972726564756369626c653f:

.. index::
   pair: ModularFactorizationGeneral; irreducible?

:spadfun:`irreducible?`\: (PA, MD) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``irreducible?(pv, md)``\  checks if \ ``pv``\  is irreducible. \ ``pv``\  is assumed square-free and monic, \ ``md``\  is info representing finite field.

.. _l4d6f64756c6172466163746f72697a6174696f6e47656e6572616c-6d666163746f72:

.. index::
   pair: ModularFactorizationGeneral; mfactor

:spadfun:`mfactor`\: (PA, MD) -> \ :ref:`List <l4c697374>`\  PA 
  \ ``mfactor(pv, md)``\  computes factorization of \ ``pv``\  into irreducibles over field described by \ ``md``\ . \ ``pv``\  is assumed square-free and monic, \ ``md``\  is info representing finite field.


