.. index:: DisplayPackage

.. _l446973706c61795061636b616765:

DisplayPackage
==============

:viewcode:`out.spad line 121 <out.spad#L121>` :editcode:`[edit on github] <out.spad#L121>`


DisplayPackage allows one to print strings in a nice manner, including highlighting substrings.


.. _l446973706c61795061636b616765-627269676874:

.. index::
   pair: DisplayPackage; bright

:spadfun:`bright`\: \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``bright(l)``\  sets the font property of a list of strings, \ ``l``\ , to bold-face type.


.. index::
   pair: DisplayPackage; bright

:spadfun:`bright`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``bright(s)``\  sets the font property of the string \ ``s``\  to bold-face type.

.. _l446973706c61795061636b616765-63656e746572:

.. index::
   pair: DisplayPackage; center

:spadfun:`center`\: (\ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``center(l, i, s)``\  takes a list of strings \ ``l``\ , and centers them within a list of strings which is \ ``i``\  characters long, in which the remaining spaces are filled with strings composed of as many repetitions as possible of the last string parameter \ ``s``\ .


.. index::
   pair: DisplayPackage; center

:spadfun:`center`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`String <l537472696e67>`\  
  \ ``center(s, i, s)``\  takes the first string \ ``s``\ , and centers it within a string of length \ ``i``\ , in which the other elements of the string are composed of as many replications as possible of the second indicated string, \ ``s``\  which must have a length greater than that of an empty string.

.. _l446973706c61795061636b616765-636f70696573:

.. index::
   pair: DisplayPackage; copies

:spadfun:`copies`\: (\ :ref:`Integer <l496e7465676572>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`String <l537472696e67>`\  
  \ ``copies(i, s)``\  will take a string \ ``s``\  and create a new string composed of \ ``i``\  copies of \ ``s``\ .

.. _l446973706c61795061636b616765-6e65774c696e65:

.. index::
   pair: DisplayPackage; newLine

:spadfun:`newLine`\: () -> \ :ref:`String <l537472696e67>`\  
  \ ``newLine()``\  sends a new line command to output.

.. _l446973706c61795061636b616765-736179:

.. index::
   pair: DisplayPackage; say

:spadfun:`say`\: \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``say(l)``\  sends a list of strings \ ``l``\  to output.


.. index::
   pair: DisplayPackage; say

:spadfun:`say`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``say(s)``\  sends a string \ ``s``\  to output.

.. _l446973706c61795061636b616765-7361794c656e677468:

.. index::
   pair: DisplayPackage; sayLength

:spadfun:`sayLength`\: \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``sayLength(l)``\  returns the length of a list of strings \ ``l``\  as an integer.


.. index::
   pair: DisplayPackage; sayLength

:spadfun:`sayLength`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``sayLength(s)``\  returns the length of a string \ ``s``\  as an integer.


