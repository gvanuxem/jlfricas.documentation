.. index:: FiniteFieldHomomorphisms

.. _l46696e6974654669656c64486f6d6f6d6f72706869736d73:

FiniteFieldHomomorphisms(F1, GF, F2)
====================================

:viewcode:`ffdoms.spad line 2791 <ffdoms.spad#L2791>` :editcode:`[edit on github] <ffdoms.spad#L2791>`

* F1: \ :ref:`FiniteAlgebraicExtensionField <l46696e697465416c67656272616963457874656e73696f6e4669656c64>`\  GF

* GF: \ :ref:`FiniteFieldCategory <l46696e6974654669656c6443617465676f7279>`\ 

* F2: \ :ref:`FiniteAlgebraicExtensionField <l46696e697465416c67656272616963457874656e73696f6e4669656c64>`\  GF


FiniteFieldHomomorphisms(\ ``F1``\ , \ ``GF``\ , \ ``F2``\ ) exports coercion functions of elements between the fields \ *F1*\  and \ *F2*\ , which both must be finite simple algebraic extensions of the finite ground field \ *GF*\ .


.. _l46696e6974654669656c64486f6d6f6d6f72706869736d73-636f65726365:

.. index::
   pair: FiniteFieldHomomorphisms; coerce

:spadfun:`coerce`\: F1 -> F2 
  \ ``coerce(x)``\  is the homomorphic image of \ ``x``\  from \ *F1*\  in \ *F2*\ . Thus \ *coerce*\  is a field homomorphism between the fields extensions \ *F1*\  and \ *F2*\  both over ground field \ *GF*\  (the second argument to the package). Error: if the extension degree of \ *F1*\  doesn\ ``'t``\  divide the extension degree of \ *F2*\ . Note that the other coercion function in the \ :ref:`FiniteFieldHomomorphisms <l46696e6974654669656c64486f6d6f6d6f72706869736d73>`\  is a left inverse.


.. index::
   pair: FiniteFieldHomomorphisms; coerce

:spadfun:`coerce`\: F2 -> F1 
  \ ``coerce(x)``\  is the homomorphic image of \ ``x``\  from \ *F2*\  in \ *F1*\ , where \ *coerce*\  is a field homomorphism between the fields extensions \ *F2*\  and \ *F1*\  both over ground field \ *GF*\  (the second argument to the package). Error: if the extension degree of \ *F2*\  doesn\ ``'t``\  divide the extension degree of \ *F1*\ . Note that the other coercion function in the \ :ref:`FiniteFieldHomomorphisms <l46696e6974654669656c64486f6d6f6d6f72706869736d73>`\  is a left inverse.


