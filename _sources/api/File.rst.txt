.. index:: File

.. _l46696c65:

File S
======

:viewcode:`files.spad line 59 <files.spad#L59>` :editcode:`[edit on github] <files.spad#L59>`

* S: \ :ref:`SetCategory <l53657443617465676f7279>`\ 


This domain provides a basic model of files to save arbitrary values. The operations provide sequential access to the contents.


.. _l46696c65-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l46696c65-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l46696c65-636c6f736521:

\ :ref:`close! <l46696c6543617465676f7279-636c6f736521>`\ \: % -> % 
  from \ :ref:`FileCategory <l46696c6543617465676f7279>`\ (\ :ref:`FileName <l46696c654e616d65>`\ , S)

.. _l46696c65-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l46696c65-666c757368:

\ :ref:`flush <l46696c6543617465676f7279-666c757368>`\ \: % -> \ :ref:`Void <l566f6964>`\  
  from \ :ref:`FileCategory <l46696c6543617465676f7279>`\ (\ :ref:`FileName <l46696c654e616d65>`\ , S)

.. _l46696c65-696f6d6f6465:

\ :ref:`iomode <l46696c6543617465676f7279-696f6d6f6465>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`FileCategory <l46696c6543617465676f7279>`\ (\ :ref:`FileName <l46696c654e616d65>`\ , S)

.. _l46696c65-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l46696c65-6e616d65:

\ :ref:`name <l46696c6543617465676f7279-6e616d65>`\ \: % -> \ :ref:`FileName <l46696c654e616d65>`\  
  from \ :ref:`FileCategory <l46696c6543617465676f7279>`\ (\ :ref:`FileName <l46696c654e616d65>`\ , S)

.. _l46696c65-6f70656e:

\ :ref:`open <l46696c6543617465676f7279-6f70656e>`\ \: (\ :ref:`FileName <l46696c654e616d65>`\ , \ :ref:`String <l537472696e67>`\ ) -> % 
  from \ :ref:`FileCategory <l46696c6543617465676f7279>`\ (\ :ref:`FileName <l46696c654e616d65>`\ , S)


\ :ref:`open <l46696c6543617465676f7279-6f70656e>`\ \: \ :ref:`FileName <l46696c654e616d65>`\  -> % 
  from \ :ref:`FileCategory <l46696c6543617465676f7279>`\ (\ :ref:`FileName <l46696c654e616d65>`\ , S)

.. _l46696c65-7265616421:

\ :ref:`read! <l46696c6543617465676f7279-7265616421>`\ \: % -> S 
  from \ :ref:`FileCategory <l46696c6543617465676f7279>`\ (\ :ref:`FileName <l46696c654e616d65>`\ , S)

.. _l46696c65-72656164496643616e21:

.. index::
   pair: File; readIfCan!

:spadfun:`readIfCan!`\: % -> Union(S, failed) 
  \ ``readIfCan!(f)``\  returns a value from the file \ ``f``\ , if possible. If \ ``f``\  is not open for reading, or if \ ``f``\  is at the end of file then \ ``"failed"``\  is the result.

.. _l46696c65-72656f70656e21:

\ :ref:`reopen! <l46696c6543617465676f7279-72656f70656e21>`\ \: (%, \ :ref:`String <l537472696e67>`\ ) -> % 
  from \ :ref:`FileCategory <l46696c6543617465676f7279>`\ (\ :ref:`FileName <l46696c654e616d65>`\ , S)

.. _l46696c65-777269746521:

\ :ref:`write! <l46696c6543617465676f7279-777269746521>`\ \: (%, S) -> S 
  from \ :ref:`FileCategory <l46696c6543617465676f7279>`\ (\ :ref:`FileName <l46696c654e616d65>`\ , S)


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`FileCategory <l46696c6543617465676f7279>`\ (\ :ref:`FileName <l46696c654e616d65>`\ , S) 

\ :ref:`SetCategory <l53657443617465676f7279>`\  

