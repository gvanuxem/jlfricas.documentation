.. index:: AlgebraicHermiteIntegration

.. _l416c676562726169634865726d697465496e746567726174696f6e:

AlgebraicHermiteIntegration(F, UP, UPUP, R)
===========================================

:viewcode:`intalg.spad line 50 <intalg.spad#L50>` :editcode:`[edit on github] <intalg.spad#L50>`

* F: \ :ref:`Field <l4669656c64>`\ 

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  F

* UPUP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP

* R: \ :ref:`FunctionFieldCategory <l46756e6374696f6e4669656c6443617465676f7279>`\ (F, UP, UPUP)


algebraic Hermite redution.


.. _l416c676562726169634865726d697465496e746567726174696f6e-4865726d697465496e74656772617465:

.. index::
   pair: AlgebraicHermiteIntegration; HermiteIntegrate

:spadfun:`HermiteIntegrate`\: (R, UP -> UP) -> Record(answer: R, logpart: R) 
  \ ``HermiteIntegrate(f, ')``\  returns \ ``[g, h]``\  such that \ ``f = g' + h``\  and \ ``h``\  has a only simple finite normal poles.


.. index::
   pair: AlgebraicHermiteIntegration; HermiteIntegrate

:spadfun:`HermiteIntegrate`\: (R, UP -> UP, R) -> Record(answer: R, logpart: R) 
  \ ``HermiteIntegrate(f, ', d0)``\  returns \ ``[g, h]``\  such that \ ``f = g' + d0*g + h``\  and \ ``h``\  has a only simple finite normal poles. Note: \ ``d0``\  must be integral.


