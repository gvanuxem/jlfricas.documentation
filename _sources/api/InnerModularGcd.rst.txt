.. index:: InnerModularGcd

.. _l496e6e65724d6f64756c6172476364:

InnerModularGcd(R, BP, pMod, nextMod)
=====================================

:viewcode:`modgcd.spad line 1 <modgcd.spad#L1>` :editcode:`[edit on github] <modgcd.spad#L1>`

* R: \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 

* BP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  R

* pMod: R

* nextMod: (R, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> R


This file contains the functions for modular \ ``gcd``\  algorithm for univariate polynomials with coefficients in a non-trivial euclidean domain (i.e. not a field). The package parametrised by the coefficient domain, the polynomial domain, a prime, and a function for choosing the next prime


.. _l496e6e65724d6f64756c6172476364-6d6f64756c61724763645072696d6974697665:

.. index::
   pair: InnerModularGcd; modularGcdPrimitive

:spadfun:`modularGcdPrimitive`\: \ :ref:`List <l4c697374>`\  BP -> BP 
  \ ``modularGcdPrimitive(listf)``\  computes the \ ``gcd``\  of the list of primitive polynomials \ ``listf``\  by modular methods.

.. _l496e6e65724d6f64756c6172476364-726564756374696f6e:

.. index::
   pair: InnerModularGcd; reduction

:spadfun:`reduction`\: (BP, R) -> BP 
  \ ``reduction(f, p)``\  reduces the coefficients of the polynomial \ ``f``\  modulo the prime \ ``p``\ .


