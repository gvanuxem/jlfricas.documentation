.. index:: InnerNumericEigenPackage

.. _l496e6e65724e756d65726963456967656e5061636b616765:

InnerNumericEigenPackage(K, F, Par)
===================================

:viewcode:`numeigen.spad line 1 <numeigen.spad#L1>` :editcode:`[edit on github] <numeigen.spad#L1>`

* K: \ :ref:`Field <l4669656c64>`\ 

* F: \ :ref:`Field <l4669656c64>`\ 

* Par: Join(\ :ref:`Field <l4669656c64>`\ , \ :ref:`OrderedRing <l4f72646572656452696e67>`\ )


This package is the inner package to be used by NumericRealEigenPackage and NumericComplexEigenPackage for the computation of numeric eigenvalues and eigenvectors.


.. _l496e6e65724e756d65726963456967656e5061636b616765-63686172706f6c:

.. index::
   pair: InnerNumericEigenPackage; charpol

:spadfun:`charpol`\: \ :ref:`Matrix <l4d6174726978>`\  K -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  K 
  \ ``charpol(m)``\  computes the characteristic polynomial of a matrix \ ``m``\  with entries in \ ``K``\ .

.. _l496e6e65724e756d65726963456967656e5061636b616765-696e6e6572456967656e766563746f7273:

.. index::
   pair: InnerNumericEigenPackage; innerEigenvectors

:spadfun:`innerEigenvectors`\: (\ :ref:`Matrix <l4d6174726978>`\  K, Par, \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  K -> \ :ref:`Factored <l466163746f726564>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  K) -> \ :ref:`List <l4c697374>`\  Record(outval: F, outmult: \ :ref:`Integer <l496e7465676572>`\ , outvect: \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  F) 
  \ ``innerEigenvectors(m, eps, factor)``\  computes explicitly the eigenvalues and the correspondent eigenvectors of the matrix \ ``m``\ . The parameter \ ``eps``\  determines the type of the output, factor is the univariate factorizer used to reduce the characteristic polynomial into irreducible factors.

.. _l496e6e65724e756d65726963456967656e5061636b616765-736f6c766531:

.. index::
   pair: InnerNumericEigenPackage; solve1

:spadfun:`solve1`\: (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  K, Par) -> \ :ref:`List <l4c697374>`\  F 
  \ ``solve1(pol, eps)``\  finds the roots of the univariate polynomial polynomial \ ``pol``\  to precision eps. If \ ``K``\  is \ ``Fraction Integer``\  then only the real roots are returned, if \ ``K``\  is \ ``Complex Fraction Integer``\  then all roots are found.


