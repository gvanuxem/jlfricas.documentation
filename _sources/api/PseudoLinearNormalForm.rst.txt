.. index:: PseudoLinearNormalForm

.. _l50736575646f4c696e6561724e6f726d616c466f726d:

PseudoLinearNormalForm K
========================

:viewcode:`pseudolin.spad line 1 <pseudolin.spad#L1>` :editcode:`[edit on github] <pseudolin.spad#L1>`

* K: \ :ref:`Field <l4669656c64>`\ 


PseudoLinearNormalForm provides a function for computing a block-companion form for pseudo-linear operators.


.. _l50736575646f4c696e6561724e6f726d616c466f726d-6368616e676542617365:

.. index::
   pair: PseudoLinearNormalForm; changeBase

:spadfun:`changeBase`\: (\ :ref:`Matrix <l4d6174726978>`\  K, \ :ref:`Matrix <l4d6174726978>`\  K, \ :ref:`Automorphism <l4175746f6d6f72706869736d>`\  K, K -> K) -> \ :ref:`Matrix <l4d6174726978>`\  K 
  \ ``changeBase(M, A, sig, der)``\ : computes the new matrix of a pseudo-linear transform given by the matrix \ ``M``\  under the change of base A

.. _l50736575646f4c696e6561724e6f726d616c466f726d-636f6d70616e696f6e426c6f636b73:

.. index::
   pair: PseudoLinearNormalForm; companionBlocks

:spadfun:`companionBlocks`\: (\ :ref:`Matrix <l4d6174726978>`\  K, \ :ref:`List <l4c697374>`\  \ :ref:`Vector <l566563746f72>`\  K) -> \ :ref:`List <l4c697374>`\  Record(C: \ :ref:`Matrix <l4d6174726978>`\  K, lg: \ :ref:`List <l4c697374>`\  \ :ref:`Vector <l566563746f72>`\  K) 
  \ ``companionBlocks(m, lv)``\  returns \ ``[[C_1, lg_1], ..., [C_k, lg_k]]``\  such that each \ ``C_i``\  is a companion block and \ ``m = diagonal(C_1, ..., C_k)``\ .

.. _l50736575646f4c696e6561724e6f726d616c466f726d-6e6f726d616c466f726d:

.. index::
   pair: PseudoLinearNormalForm; normalForm

:spadfun:`normalForm`\: (\ :ref:`Matrix <l4d6174726978>`\  K, \ :ref:`Automorphism <l4175746f6d6f72706869736d>`\  K, K -> K) -> Record(R: \ :ref:`Matrix <l4d6174726978>`\  K, A: \ :ref:`Matrix <l4d6174726978>`\  K, Ainv: \ :ref:`Matrix <l4d6174726978>`\  K) 
  \ ``normalForm(M, sig, der)``\  returns \ ``[R, A, A^{-1}]``\  such that the pseudo-linear operator whose matrix in the basis \ ``y``\  is \ ``M``\  had matrix \ ``R``\  in the basis \ ``z = A y``\ . \ ``der``\  is a \ ``sig``\ -derivation.


