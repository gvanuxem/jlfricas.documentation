.. index:: PolToPol

.. _l506f6c546f506f6c:

PolToPol(lv, R)
===============

:viewcode:`poltopol.spad line 68 <poltopol.spad#L68>` :editcode:`[edit on github] <poltopol.spad#L68>`

* lv: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ 

* R: \ :ref:`Ring <l52696e67>`\ 


Package with the conversion functions among different kind of polynomials


.. _l506f6c546f506f6c-646d70546f48646d70:

.. index::
   pair: PolToPol; dmpToHdmp

:spadfun:`dmpToHdmp`\: \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, R) -> \ :ref:`HomogeneousDistributedMultivariatePolynomial <l486f6d6f67656e656f757344697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, R) 
  \ ``dmpToHdmp(p)``\  converts \ ``p``\  from a DMP to a HDMP.

.. _l506f6c546f506f6c-646d70546f50:

.. index::
   pair: PolToPol; dmpToP

:spadfun:`dmpToP`\: \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, R) -> \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R 
  \ ``dmpToP(p)``\  converts \ ``p``\  from a DMP to a POLY.

.. _l506f6c546f506f6c-68646d70546f446d70:

.. index::
   pair: PolToPol; hdmpToDmp

:spadfun:`hdmpToDmp`\: \ :ref:`HomogeneousDistributedMultivariatePolynomial <l486f6d6f67656e656f757344697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, R) -> \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, R) 
  \ ``hdmpToDmp(p)``\  converts \ ``p``\  from a HDMP to a DMP.

.. _l506f6c546f506f6c-68646d70546f50:

.. index::
   pair: PolToPol; hdmpToP

:spadfun:`hdmpToP`\: \ :ref:`HomogeneousDistributedMultivariatePolynomial <l486f6d6f67656e656f757344697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, R) -> \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R 
  \ ``hdmpToP(p)``\  converts \ ``p``\  from a HDMP to a POLY.

.. _l506f6c546f506f6c-70546f446d70:

.. index::
   pair: PolToPol; pToDmp

:spadfun:`pToDmp`\: \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R -> \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, R) 
  \ ``pToDmp(p)``\  converts \ ``p``\  from a POLY to a DMP.

.. _l506f6c546f506f6c-70546f48646d70:

.. index::
   pair: PolToPol; pToHdmp

:spadfun:`pToHdmp`\: \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R -> \ :ref:`HomogeneousDistributedMultivariatePolynomial <l486f6d6f67656e656f757344697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, R) 
  \ ``pToHdmp(p)``\  converts \ ``p``\  from a POLY to a HDMP.


