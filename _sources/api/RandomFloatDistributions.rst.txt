.. index:: RandomFloatDistributions

.. _l52616e646f6d466c6f6174446973747269627574696f6e73:

RandomFloatDistributions
========================

:viewcode:`random.spad line 185 <random.spad#L185>` :editcode:`[edit on github] <random.spad#L185>`


This package exports random floating-point distributions


.. _l52616e646f6d466c6f6174446973747269627574696f6e73-42657461:

.. index::
   pair: RandomFloatDistributions; Beta

:spadfun:`Beta`\: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``Beta(n, m)``\  \undocumented

.. _l52616e646f6d466c6f6174446973747269627574696f6e73-63686953717561726531:

.. index::
   pair: RandomFloatDistributions; chiSquare1

:spadfun:`chiSquare1`\: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> \ :ref:`Float <l466c6f6174>`\  
  \ ``chiSquare1(n)``\  \undocumented

.. _l52616e646f6d466c6f6174446973747269627574696f6e73-636869537175617265:

.. index::
   pair: RandomFloatDistributions; chiSquare

:spadfun:`chiSquare`\: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``chiSquare(n)``\  \undocumented

.. _l52616e646f6d466c6f6174446973747269627574696f6e73-6578706f6e656e7469616c31:

.. index::
   pair: RandomFloatDistributions; exponential1

:spadfun:`exponential1`\: () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``exponential1()``\  \undocumented

.. _l52616e646f6d466c6f6174446973747269627574696f6e73-6578706f6e656e7469616c:

.. index::
   pair: RandomFloatDistributions; exponential

:spadfun:`exponential`\: \ :ref:`Float <l466c6f6174>`\  -> () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``exponential(f)``\  \undocumented

.. _l52616e646f6d466c6f6174446973747269627574696f6e73-46:

.. index::
   pair: RandomFloatDistributions; F

:spadfun:`F`\: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``F(n, m)``\  \undocumented

.. _l52616e646f6d466c6f6174446973747269627574696f6e73-6e6f726d616c3031:

.. index::
   pair: RandomFloatDistributions; normal01

:spadfun:`normal01`\: () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``normal01()``\  \undocumented

.. _l52616e646f6d466c6f6174446973747269627574696f6e73-6e6f726d616c:

.. index::
   pair: RandomFloatDistributions; normal

:spadfun:`normal`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``normal(f, g)``\  \undocumented

.. _l52616e646f6d466c6f6174446973747269627574696f6e73-74:

.. index::
   pair: RandomFloatDistributions; t

:spadfun:`t`\: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  -> () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``t(n)``\  \undocumented

.. _l52616e646f6d466c6f6174446973747269627574696f6e73-756e69666f726d3031:

.. index::
   pair: RandomFloatDistributions; uniform01

:spadfun:`uniform01`\: () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``uniform01()``\  \undocumented

.. _l52616e646f6d466c6f6174446973747269627574696f6e73-756e69666f726d:

.. index::
   pair: RandomFloatDistributions; uniform

:spadfun:`uniform`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``uniform(f, g)``\  \undocumented


