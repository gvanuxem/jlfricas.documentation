.. index:: FramedNonAssociativeAlgebra

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261:

FramedNonAssociativeAlgebra R
=============================

:viewcode:`naalgc.spad line 895 <naalgc.spad#L895>` :editcode:`[edit on github] <naalgc.spad#L895>`

* R: \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 


FramedNonAssociativeAlgebra(\ ``R``\ ) is a \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  (i.e. a non associative algebra over \ ``R``\  which is a free \ ``R``\ -module of finite rank) over a commutative ring \ ``R``\  together with a fixed \ ``R``\ -module basis.


.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-30:

\ :ref:`0 <l4162656c69616e4d6f6e6f6964-30>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-2a:

\ :ref:`\* <l4d61676d61-2a>`\ \: (%, %) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 


\ :ref:`\* <l52696768744d6f64756c65-2a>`\ \: (%, R) -> % 
  from \ :ref:`RightModule <l52696768744d6f64756c65>`\  R


\ :ref:`\* <l4162656c69616e47726f7570-2a>`\ \: (\ :ref:`Integer <l496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`\* <l4162656c69616e4d6f6e6f6964-2a>`\ \: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`\* <l4162656c69616e53656d6947726f7570-2a>`\ \: (\ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 


\ :ref:`\* <l4c6566744d6f64756c65-2a>`\ \: (R, %) -> % 
  from \ :ref:`LeftModule <l4c6566744d6f64756c65>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-2b:

\ :ref:`+ <l4162656c69616e53656d6947726f7570-2b>`\ \: (%, %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-2d:

\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: % -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: (%, %) -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-5e:

\ :ref:`^ <l4d61676d61-5e>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-616c7465726e61746976653f:

\ :ref:`alternative? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-616c7465726e61746976653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-616e74694173736f636961746976653f:

\ :ref:`antiAssociative? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-616e74694173736f636961746976653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-616e7469436f6d6d757461746976653f:

\ :ref:`antiCommutative? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-616e7469436f6d6d757461746976653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-616e7469436f6d6d757461746f72:

\ :ref:`antiCommutator <l4e6f6e4173736f6369617469766553656d69526e67-616e7469436f6d6d757461746f72>`\ \: (%, %) -> % 
  from \ :ref:`NonAssociativeSemiRng <l4e6f6e4173736f6369617469766553656d69526e67>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6170706c79:

.. index::
   pair: FramedNonAssociativeAlgebra; apply

:spadfun:`apply`\: (\ :ref:`Matrix <l4d6174726978>`\  R, %) -> % 
  \ ``apply(m, a)``\  defines a left operation of \ ``n``\  by \ ``n``\  matrices where \ ``n``\  is the rank of the algebra in terms of matrix-vector multiplication, this is a substitute for a left module structure. Error: if shape of matrix doesn\ ``'t``\  fit.

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6173736f636961746976653f:

\ :ref:`associative? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6173736f636961746976653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6173736f636961746f72:

\ :ref:`associator <l4e6f6e4173736f63696174697665526e67-6173736f636961746f72>`\ \: (%, %, %) -> % 
  from \ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6173736f636961746f72446570656e64656e6365:

\ :ref:`associatorDependence <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6173736f636961746f72446570656e64656e6365>`\ \: () -> \ :ref:`List <l4c697374>`\  \ :ref:`Vector <l566563746f72>`\  R if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6261736973:

\ :ref:`basis <l4672616d65644d6f64756c65-6261736973>`\ \: () -> \ :ref:`Vector <l566563746f72>`\  % 
  from \ :ref:`FramedModule <l4672616d65644d6f64756c65>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-636f6d6d757461746976653f:

\ :ref:`commutative? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-636f6d6d757461746976653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-636f6d6d757461746f72:

\ :ref:`commutator <l4e6f6e4173736f63696174697665526e67-636f6d6d757461746f72>`\ \: (%, %) -> % 
  from \ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-636f6e646974696f6e73466f724964656d706f74656e7473:

.. index::
   pair: FramedNonAssociativeAlgebra; conditionsForIdempotents

:spadfun:`conditionsForIdempotents`\: () -> \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R 
  \ ``conditionsForIdempotents()``\  determines a complete list of polynomial equations for the coefficients of idempotents with respect to the fixed \ ``R``\ -module basis.


\ :ref:`conditionsForIdempotents <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-636f6e646974696f6e73466f724964656d706f74656e7473>`\ \: \ :ref:`Vector <l566563746f72>`\  % -> \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-636f6e76657274:

\ :ref:`convert <l436f6e7665727469626c65546f-636f6e76657274>`\ \: % -> \ :ref:`InputForm <l496e707574466f726d>`\  if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 


\ :ref:`convert <l4672616d65644d6f64756c65-636f6e76657274>`\ \: % -> \ :ref:`Vector <l566563746f72>`\  R 
  from \ :ref:`FramedModule <l4672616d65644d6f64756c65>`\  R


\ :ref:`convert <l4672616d65644d6f64756c65-636f6e76657274>`\ \: \ :ref:`Vector <l566563746f72>`\  R -> % 
  from \ :ref:`FramedModule <l4672616d65644d6f64756c65>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-636f6f7264696e61746573:

\ :ref:`coordinates <l4672616d65644d6f64756c65-636f6f7264696e61746573>`\ \: % -> \ :ref:`Vector <l566563746f72>`\  R 
  from \ :ref:`FramedModule <l4672616d65644d6f64756c65>`\  R


\ :ref:`coordinates <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-636f6f7264696e61746573>`\ \: (%, \ :ref:`Vector <l566563746f72>`\  %) -> \ :ref:`Vector <l566563746f72>`\  R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R


\ :ref:`coordinates <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-636f6f7264696e61746573>`\ \: (\ :ref:`Vector <l566563746f72>`\  %, \ :ref:`Vector <l566563746f72>`\  %) -> \ :ref:`Matrix <l4d6174726978>`\  R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R


\ :ref:`coordinates <l4672616d65644d6f64756c65-636f6f7264696e61746573>`\ \: \ :ref:`Vector <l566563746f72>`\  % -> \ :ref:`Matrix <l4d6174726978>`\  R 
  from \ :ref:`FramedModule <l4672616d65644d6f64756c65>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-656c74:

.. index::
   pair: FramedNonAssociativeAlgebra; elt

:spadfun:`elt`\: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> R 
  \ ``elt(a, i)``\  returns the \ ``i``\ -th coefficient of \ ``a``\  with respect to the fixed \ ``R``\ -module basis.

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-656e756d6572617465:

\ :ref:`enumerate <l46696e697465-656e756d6572617465>`\ \: () -> \ :ref:`List <l4c697374>`\  % if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Finite <l46696e697465>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-666c657869626c653f:

\ :ref:`flexible? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-666c657869626c653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-68617368:

\ :ref:`hash <l4861736861626c65-68617368>`\ \: % -> \ :ref:`SingleInteger <l53696e676c65496e7465676572>`\  if R has \ :ref:`Hashable <l4861736861626c65>`\ 
  from \ :ref:`Hashable <l4861736861626c65>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6861736855706461746521:

\ :ref:`hashUpdate! <l4861736861626c65-6861736855706461746521>`\ \: (\ :ref:`HashState <l486173685374617465>`\ , %) -> \ :ref:`HashState <l486173685374617465>`\  if R has \ :ref:`Hashable <l4861736861626c65>`\ 
  from \ :ref:`Hashable <l4861736861626c65>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-696e646578:

\ :ref:`index <l46696e697465-696e646578>`\ \: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> % if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Finite <l46696e697465>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6a61636f62694964656e746974793f:

\ :ref:`jacobiIdentity? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6a61636f62694964656e746974793f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6a6f7264616e41646d69737369626c653f:

\ :ref:`jordanAdmissible? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6a6f7264616e41646d69737369626c653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6a6f7264616e416c67656272613f:

\ :ref:`jordanAlgebra? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6a6f7264616e416c67656272613f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c656674416c7465726e61746976653f:

\ :ref:`leftAlternative? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c656674416c7465726e61746976653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c6566744368617261637465726973746963506f6c796e6f6d69616c:

\ :ref:`leftCharacteristicPolynomial <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c6566744368617261637465726973746963506f6c796e6f6d69616c>`\ \: % -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c6566744469736372696d696e616e74:

.. index::
   pair: FramedNonAssociativeAlgebra; leftDiscriminant

:spadfun:`leftDiscriminant`\: () -> R 
  \ ``leftDiscriminant()``\  returns the determinant of the \ ``n``\ -by-\ ``n``\  matrix whose element at the \ ``i``\ \ ``-``\ th row and \ ``j``\ \ ``-``\ th column is given by the left trace of the product \ ``vi*vj``\ , where \ ``v1``\ , ..., \ ``vn``\  are the elements of the fixed \ ``R``\ -module basis. Note: the same as \ ``determinant(leftTraceMatrix())``\ .


\ :ref:`leftDiscriminant <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c6566744469736372696d696e616e74>`\ \: \ :ref:`Vector <l566563746f72>`\  % -> R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c6566744d696e696d616c506f6c796e6f6d69616c:

\ :ref:`leftMinimalPolynomial <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c6566744d696e696d616c506f6c796e6f6d69616c>`\ \: % -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  R if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c6566744e6f726d:

\ :ref:`leftNorm <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c6566744e6f726d>`\ \: % -> R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c656674506f776572:

\ :ref:`leftPower <l4d61676d61-6c656674506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c65667452616e6b506f6c796e6f6d69616c:

.. index::
   pair: FramedNonAssociativeAlgebra; leftRankPolynomial

:spadfun:`leftRankPolynomial`\: () -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R if R has \ :ref:`Field <l4669656c64>`\ 
  \ ``leftRankPolynomial()``\  calculates the left minimal polynomial of the generic element in the algebra, defined by the same structural constants over the polynomial ring in symbolic coefficients with respect to the fixed basis.

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c6566745265636970:

\ :ref:`leftRecip <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c6566745265636970>`\ \: % -> Union(%, failed) if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c656674526567756c6172526570726573656e746174696f6e:

.. index::
   pair: FramedNonAssociativeAlgebra; leftRegularRepresentation

:spadfun:`leftRegularRepresentation`\: % -> \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``leftRegularRepresentation(a)``\  returns the matrix of the linear map defined by left multiplication by \ ``a``\  with respect to the fixed \ ``R``\ -module basis.


\ :ref:`leftRegularRepresentation <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c656674526567756c6172526570726573656e746174696f6e>`\ \: (%, \ :ref:`Vector <l566563746f72>`\  %) -> \ :ref:`Matrix <l4d6174726978>`\  R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c6566745472616365:

\ :ref:`leftTrace <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c6566745472616365>`\ \: % -> R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c65667454726163654d6174726978:

.. index::
   pair: FramedNonAssociativeAlgebra; leftTraceMatrix

:spadfun:`leftTraceMatrix`\: () -> \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``leftTraceMatrix()``\  is the \ ``n``\ -by-\ ``n``\  matrix whose element at the \ ``i``\ \ ``-``\ th row and \ ``j``\ \ ``-``\ th column is given by left trace of the product \ ``vi*vj``\ , where \ ``v1``\ , ..., \ ``vn``\  are the elements of the fixed \ ``R``\ -module basis.


\ :ref:`leftTraceMatrix <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c65667454726163654d6174726978>`\ \: \ :ref:`Vector <l566563746f72>`\  % -> \ :ref:`Matrix <l4d6174726978>`\  R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c656674556e6974:

\ :ref:`leftUnit <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c656674556e6974>`\ \: () -> Union(%, failed) if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c656674556e697473:

\ :ref:`leftUnits <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c656674556e697473>`\ \: () -> Union(Record(particular: %, basis: \ :ref:`List <l4c697374>`\  %), failed) if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c696541646d69737369626c653f:

\ :ref:`lieAdmissible? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c696541646d69737369626c653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c6965416c67656272613f:

\ :ref:`lieAlgebra? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6c6965416c67656272613f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6c6f6f6b7570:

\ :ref:`lookup <l46696e697465-6c6f6f6b7570>`\ \: % -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Finite <l46696e697465>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6e6f6e636f6d6d757461746976654a6f7264616e416c67656272613f:

\ :ref:`noncommutativeJordanAlgebra? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-6e6f6e636f6d6d757461746976654a6f7264616e416c67656272613f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-6f70706f736974653f:

\ :ref:`opposite? <l4162656c69616e4d6f6e6f6964-6f70706f736974653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-706c656e617279506f776572:

\ :ref:`plenaryPower <l4e6f6e4173736f63696174697665416c6765627261-706c656e617279506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-706f7765724173736f636961746976653f:

\ :ref:`powerAssociative? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-706f7765724173736f636961746976653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-72616e646f6d:

\ :ref:`random <l46696e697465-72616e646f6d>`\ \: () -> % if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Finite <l46696e697465>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-72616e6b:

\ :ref:`rank <l4672616d65644d6f64756c65-72616e6b>`\ \: () -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  from \ :ref:`FramedModule <l4672616d65644d6f64756c65>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-7265636970:

\ :ref:`recip <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-7265636970>`\ \: % -> Union(%, failed) if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-726570726573656e7473:

\ :ref:`represents <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-726570726573656e7473>`\ \: (\ :ref:`Vector <l566563746f72>`\  R, \ :ref:`Vector <l566563746f72>`\  %) -> % 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R


\ :ref:`represents <l4672616d65644d6f64756c65-726570726573656e7473>`\ \: \ :ref:`Vector <l566563746f72>`\  R -> % 
  from \ :ref:`FramedModule <l4672616d65644d6f64756c65>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-7269676874416c7465726e61746976653f:

\ :ref:`rightAlternative? <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-7269676874416c7465726e61746976653f>`\ \: () -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-72696768744368617261637465726973746963506f6c796e6f6d69616c:

\ :ref:`rightCharacteristicPolynomial <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-72696768744368617261637465726973746963506f6c796e6f6d69616c>`\ \: % -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-72696768744469736372696d696e616e74:

.. index::
   pair: FramedNonAssociativeAlgebra; rightDiscriminant

:spadfun:`rightDiscriminant`\: () -> R 
  \ ``rightDiscriminant()``\  returns the determinant of the \ ``n``\ -by-\ ``n``\  matrix whose element at the \ ``i``\ \ ``-``\ th row and \ ``j``\ \ ``-``\ th column is given by the right trace of the product \ ``vi*vj``\ , where \ ``v1``\ , ..., \ ``vn``\  are the elements of the fixed \ ``R``\ -module basis. Note: the same as \ ``determinant(rightTraceMatrix())``\ .


\ :ref:`rightDiscriminant <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-72696768744469736372696d696e616e74>`\ \: \ :ref:`Vector <l566563746f72>`\  % -> R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-72696768744d696e696d616c506f6c796e6f6d69616c:

\ :ref:`rightMinimalPolynomial <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-72696768744d696e696d616c506f6c796e6f6d69616c>`\ \: % -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  R if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-72696768744e6f726d:

\ :ref:`rightNorm <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-72696768744e6f726d>`\ \: % -> R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-7269676874506f776572:

\ :ref:`rightPower <l4d61676d61-7269676874506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-726967687452616e6b506f6c796e6f6d69616c:

.. index::
   pair: FramedNonAssociativeAlgebra; rightRankPolynomial

:spadfun:`rightRankPolynomial`\: () -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R if R has \ :ref:`Field <l4669656c64>`\ 
  \ ``rightRankPolynomial()``\  calculates the right minimal polynomial of the generic element in the algebra, defined by the same structural constants over the polynomial ring in symbolic coefficients with respect to the fixed basis.

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-72696768745265636970:

\ :ref:`rightRecip <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-72696768745265636970>`\ \: % -> Union(%, failed) if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-7269676874526567756c6172526570726573656e746174696f6e:

.. index::
   pair: FramedNonAssociativeAlgebra; rightRegularRepresentation

:spadfun:`rightRegularRepresentation`\: % -> \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``rightRegularRepresentation(a)``\  returns the matrix of the linear map defined by right multiplication by \ ``a``\  with respect to the fixed \ ``R``\ -module basis.


\ :ref:`rightRegularRepresentation <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-7269676874526567756c6172526570726573656e746174696f6e>`\ \: (%, \ :ref:`Vector <l566563746f72>`\  %) -> \ :ref:`Matrix <l4d6174726978>`\  R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-72696768745472616365:

\ :ref:`rightTrace <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-72696768745472616365>`\ \: % -> R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-726967687454726163654d6174726978:

.. index::
   pair: FramedNonAssociativeAlgebra; rightTraceMatrix

:spadfun:`rightTraceMatrix`\: () -> \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``rightTraceMatrix()``\  is the \ ``n``\ -by-\ ``n``\  matrix whose element at the \ ``i``\ \ ``-``\ th row and \ ``j``\ \ ``-``\ th column is given by the right trace of the product \ ``vi*vj``\ , where \ ``v1``\ , ..., \ ``vn``\  are the elements of the fixed \ ``R``\ -module basis.


\ :ref:`rightTraceMatrix <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-726967687454726163654d6174726978>`\ \: \ :ref:`Vector <l566563746f72>`\  % -> \ :ref:`Matrix <l4d6174726978>`\  R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-7269676874556e6974:

\ :ref:`rightUnit <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-7269676874556e6974>`\ \: () -> Union(%, failed) if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-7269676874556e697473:

\ :ref:`rightUnits <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-7269676874556e697473>`\ \: () -> Union(Record(particular: %, basis: \ :ref:`List <l4c697374>`\  %), failed) if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-73616d706c65:

\ :ref:`sample <l4162656c69616e4d6f6e6f6964-73616d706c65>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-73697a65:

\ :ref:`size <l46696e697465-73697a65>`\ \: () -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Finite <l46696e697465>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-736d616c6c65723f:

\ :ref:`smaller? <l436f6d70617261626c65-736d616c6c65723f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Comparable <l436f6d70617261626c65>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-736f6d654261736973:

\ :ref:`someBasis <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-736f6d654261736973>`\ \: () -> \ :ref:`Vector <l566563746f72>`\  % 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-7374727563747572616c436f6e7374616e7473:

.. index::
   pair: FramedNonAssociativeAlgebra; structuralConstants

:spadfun:`structuralConstants`\: () -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``structuralConstants()``\  calculates the structural constants \ ``[(gammaijk) for k in 1..rank()]``\  defined by \ ``vi * vj = gammaij1 * v1 + ... + gammaijn * vn``\ , where \ ``v1``\ , ..., \ ``vn``\  is the fixed \ ``R``\ -module basis.


\ :ref:`structuralConstants <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-7374727563747572616c436f6e7374616e7473>`\ \: \ :ref:`Vector <l566563746f72>`\  % -> \ :ref:`Vector <l566563746f72>`\  \ :ref:`Matrix <l4d6174726978>`\  R 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-7375627472616374496643616e:

\ :ref:`subtractIfCan <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-7375627472616374496643616e>`\ \: (%, %) -> Union(%, failed) 
  from \ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\ 

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-756e6974:

\ :ref:`unit <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261-756e6974>`\ \: () -> Union(%, failed) if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  from \ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4672616d65644e6f6e4173736f63696174697665416c6765627261-7a65726f3f:

\ :ref:`zero? <l4162656c69616e4d6f6e6f6964-7a65726f3f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\  

\ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\  

\ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\  

\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`BiModule <l42694d6f64756c65>`\ (R, R) 

\ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`Comparable <l436f6d70617261626c65>`\  if R has \ :ref:`Finite <l46696e697465>`\ 

\ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\  if R has \ :ref:`Finite <l46696e697465>`\ 

\ :ref:`Finite <l46696e697465>`\  if R has \ :ref:`Finite <l46696e697465>`\ 

\ :ref:`FiniteRankNonAssociativeAlgebra <l46696e69746552616e6b4e6f6e4173736f63696174697665416c6765627261>`\  R 

\ :ref:`FramedModule <l4672616d65644d6f64756c65>`\  R 

\ :ref:`Hashable <l4861736861626c65>`\  if R has \ :ref:`Hashable <l4861736861626c65>`\ 

\ :ref:`LeftModule <l4c6566744d6f64756c65>`\  R 

\ :ref:`Magma <l4d61676d61>`\  

\ :ref:`Module <l4d6f64756c65>`\  R 

\ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  R 

\ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\  

\ :ref:`NonAssociativeSemiRng <l4e6f6e4173736f6369617469766553656d69526e67>`\  

\ :ref:`RightModule <l52696768744d6f64756c65>`\  R 

\ :ref:`SetCategory <l53657443617465676f7279>`\  

\ :ref:`unitsKnown <l756e6974734b6e6f776e>`\  if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 

