.. index:: IntegralBasisPolynomialTools

.. _l496e74656772616c4261736973506f6c796e6f6d69616c546f6f6c73:

IntegralBasisPolynomialTools(K, R, UP, L)
=========================================

:viewcode:`padiclib.spad line 1 <padiclib.spad#L1>` :editcode:`[edit on github] <padiclib.spad#L1>`

* K: \ :ref:`Ring <l52696e67>`\ 

* R: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  K

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  R

* L: \ :ref:`Ring <l52696e67>`\ 


IntegralBasisPolynomialTools provides functions for mapping functions on the coefficients of univariate and bivariate polynomials.


.. _l496e74656772616c4261736973506f6c796e6f6d69616c546f6f6c73-6d6170426976617269617465:

.. index::
   pair: IntegralBasisPolynomialTools; mapBivariate

:spadfun:`mapBivariate`\: (K -> L, UP) -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  L 
  \ ``mapBivariate(f, p(x, y))``\  applies the function \ ``f``\  to the coefficients of \ ``p(x, y)``\ .

.. _l496e74656772616c4261736973506f6c796e6f6d69616c546f6f6c73-6d61704d6174726978496643616e:

.. index::
   pair: IntegralBasisPolynomialTools; mapMatrixIfCan

:spadfun:`mapMatrixIfCan`\: (L -> Union(K, failed), \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  L) -> Union(\ :ref:`Matrix <l4d6174726978>`\  R, failed) 
  \ ``mapMatrixIfCan(f, mat)``\  applies the function \ ``f``\  to the coefficients of the entries of \ ``mat``\  if possible, and returns \ ``"failed"``\  otherwise.

.. _l496e74656772616c4261736973506f6c796e6f6d69616c546f6f6c73-6d6170556e6976617269617465:

.. index::
   pair: IntegralBasisPolynomialTools; mapUnivariate

:spadfun:`mapUnivariate`\: (K -> L, R) -> \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  L 
  \ ``mapUnivariate(f, p(x))``\  applies the function \ ``f``\  to the coefficients of \ ``p(x)``\ .


.. index::
   pair: IntegralBasisPolynomialTools; mapUnivariate

:spadfun:`mapUnivariate`\: (L -> K, \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  L) -> R 
  \ ``mapUnivariate(f, p(x))``\  applies the function \ ``f``\  to the coefficients of \ ``p(x)``\ .

.. _l496e74656772616c4261736973506f6c796e6f6d69616c546f6f6c73-6d6170556e6976617269617465496643616e:

.. index::
   pair: IntegralBasisPolynomialTools; mapUnivariateIfCan

:spadfun:`mapUnivariateIfCan`\: (L -> Union(K, failed), \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  L) -> Union(R, failed) 
  \ ``mapUnivariateIfCan(f, p(x))``\  applies the function \ ``f``\  to the coefficients of \ ``p(x)``\ , if possible, and returns \ ``"failed"``\  otherwise.


