.. index:: ListFunctions3

.. _l4c69737446756e6374696f6e7333:

ListFunctions3(A, B, C)
=======================

:viewcode:`list.spad line 335 <list.spad#L335>` :editcode:`[edit on github] <list.spad#L335>`

* A: \ :ref:`Type <l54797065>`\ 

* B: \ :ref:`Type <l54797065>`\ 

* C: \ :ref:`Type <l54797065>`\ 


\ :ref:`ListFunctions3 <l4c69737446756e6374696f6e7333>`\  implements utility functions that operate on three kinds of lists, each with a possibly different type of element.


.. _l4c69737446756e6374696f6e7333-6d6170:

.. index::
   pair: ListFunctions3; map

:spadfun:`map`\: ((A, B) -> C, \ :ref:`List <l4c697374>`\  A, \ :ref:`List <l4c697374>`\  B) -> \ :ref:`List <l4c697374>`\  C 
  \ ``map(fn, u1, u2)``\  applies the binary function \ ``fn``\  to corresponding elements of lists \ ``u1``\  and \ ``u2``\  and returns a list of the results (in the same order). Thus \ ``map(/, [1, 2, 3], [4, 5, 6]) = [1/4, 2/5, 1/2]``\ . The computation terminates when the end of either list is reached. That is, the length of the result list is equal to the minimum of the lengths of \ ``u1``\  and \ ``u2``\ .


