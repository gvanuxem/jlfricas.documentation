.. index:: Tuple

.. _l5475706c65:

Tuple S
=======

:viewcode:`array1.spad line 67 <array1.spad#L67>` :editcode:`[edit on github] <array1.spad#L67>`

* S: \ :ref:`Type <l54797065>`\ 


This domain is used to interface with the interpreter\ ``'s``\  notion of comma-delimited sequences of values.


.. _l5475706c65-23:

.. index::
   pair: Tuple; #

:spadfun:`#`\: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``\#(x)``\  returns the number of elements in tuple \ ``x``\ 

.. _l5475706c65-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l5475706c65-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l5475706c65-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  if S has \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`PrimitiveArray <l5072696d69746976654172726179>`\  S 
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`PrimitiveArray <l5072696d69746976654172726179>`\  S


.. index::
   pair: Tuple; coerce

:spadfun:`coerce`\: \ :ref:`PrimitiveArray <l5072696d69746976654172726179>`\  S -> % 
  \ ``coerce(a)``\  makes a tuple from primitive array a

.. _l5475706c65-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l5475706c65-73656c656374:

.. index::
   pair: Tuple; select

:spadfun:`select`\: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> S 
  \ ``select(x, n)``\  returns the \ ``n``\ -th element of tuple \ ``x``\ . tuples are 0-based


\ :ref:`BasicType <l426173696354797065>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  if S has \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`PrimitiveArray <l5072696d69746976654172726179>`\  S 

\ :ref:`SetCategory <l53657443617465676f7279>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

