.. index:: XExponentialPackage

.. _l584578706f6e656e7469616c5061636b616765:

XExponentialPackage(R, VarSet, XPOLY)
=====================================

:viewcode:`xlpoly.spad line 381 <xlpoly.spad#L381>` :editcode:`[edit on github] <xlpoly.spad#L381>`

* R: Join(\ :ref:`Ring <l52696e67>`\ , \ :ref:`Module <l4d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )

* VarSet: \ :ref:`OrderedSet <l4f726465726564536574>`\ 

* XPOLY: \ :ref:`XPolynomialsCat <l58506f6c796e6f6d69616c73436174>`\ (VarSet, R)


This package provides computations of logarithms and exponentials for polynomials in non-commutative variables.   Author: Michel Petitot (petitot@lifl.\ ``fr``\ ).


.. _l584578706f6e656e7469616c5061636b616765-657870:

.. index::
   pair: XExponentialPackage; exp

:spadfun:`exp`\: (XPOLY, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> XPOLY 
  \ ``exp(p, n)``\  returns the exponential of \ ``p``\  truncated at order \ ``n``\ .

.. _l584578706f6e656e7469616c5061636b616765-48617573646f726666:

.. index::
   pair: XExponentialPackage; Hausdorff

:spadfun:`Hausdorff`\: (XPOLY, XPOLY, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> XPOLY 
  \ ``Hausdorff(a, b, n)``\  returns log(exp(a)*exp(\ ``b``\ )) truncated at order \ ``n``\ .

.. _l584578706f6e656e7469616c5061636b616765-6c6f67:

.. index::
   pair: XExponentialPackage; log

:spadfun:`log`\: (XPOLY, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> XPOLY 
  \ ``log(p, n)``\  returns the logarithm of \ ``p``\  truncated at order \ ``n``\ .


