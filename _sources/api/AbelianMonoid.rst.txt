.. index:: AbelianMonoid

.. _l4162656c69616e4d6f6e6f6964:

AbelianMonoid
=============

:viewcode:`catdef.spad line 37 <catdef.spad#L37>` :editcode:`[edit on github] <catdef.spad#L37>`


The class of multiplicative monoids, i.e. semigroups with an additive identity element.  


.. _l4162656c69616e4d6f6e6f6964-30:

.. index::
   pair: AbelianMonoid; 0

:spadfun:`0`\: % 
  0 is the additive identity element.

.. _l4162656c69616e4d6f6e6f6964-2a:

.. index::
   pair: AbelianMonoid; *

:spadfun:`\*`\: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , %) -> % 
  \ ``n * x``\  is left-multiplication by a non negative integer


\ :ref:`\* <l4162656c69616e53656d6947726f7570-2a>`\ \: (\ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l4162656c69616e4d6f6e6f6964-2b:

\ :ref:`+ <l4162656c69616e53656d6947726f7570-2b>`\ \: (%, %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l4162656c69616e4d6f6e6f6964-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4162656c69616e4d6f6e6f6964-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4162656c69616e4d6f6e6f6964-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l4162656c69616e4d6f6e6f6964-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4162656c69616e4d6f6e6f6964-6f70706f736974653f:

.. index::
   pair: AbelianMonoid; opposite?

:spadfun:`opposite?`\: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``opposite?(x,y)``\  holds if the sum of \ ``x``\  and \ ``y``\  is \ ``0``\ .

.. _l4162656c69616e4d6f6e6f6964-73616d706c65:

.. index::
   pair: AbelianMonoid; sample

:spadfun:`sample`\: % 
  \ ``sample yields``\  a value of type \%

.. _l4162656c69616e4d6f6e6f6964-7a65726f3f:

.. index::
   pair: AbelianMonoid; zero?

:spadfun:`zero?`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``zero?(x)``\  tests if \ ``x``\  is equal to 0.


\ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\  

\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

