.. index:: RationalFunctionSign

.. _l526174696f6e616c46756e6374696f6e5369676e:

RationalFunctionSign R
======================

:viewcode:`sign.spad line 88 <sign.spad#L88>` :editcode:`[edit on github] <sign.spad#L88>`

* R: \ :ref:`GcdDomain <l476364446f6d61696e>`\ 


Find the sign of a rational function around a point or infinity.


.. _l526174696f6e616c46756e6374696f6e5369676e-7369676e:

.. index::
   pair: RationalFunctionSign; sign

:spadfun:`sign`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`String <l537472696e67>`\ ) -> Union(\ :ref:`Integer <l496e7465676572>`\ , failed) 
  \ ``sign(f, x, a, s)``\  returns the sign of \ ``f``\  as \ ``x``\  nears \ ``a``\  from the left (below) if \ ``s``\  is the string \ ``"left"``\ , or from the right (above) if \ ``s``\  is the string \ ``"right"``\ .


.. index::
   pair: RationalFunctionSign; sign

:spadfun:`sign`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R) -> Union(\ :ref:`Integer <l496e7465676572>`\ , failed) 
  \ ``sign(f, x, a)``\  returns the sign of \ ``f``\  as \ ``x``\  approaches \ ``a``\ , from both sides if \ ``a``\  is finite.


.. index::
   pair: RationalFunctionSign; sign

:spadfun:`sign`\: \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R -> Union(\ :ref:`Integer <l496e7465676572>`\ , failed) 
  \ ``sign f``\  returns the sign of \ ``f``\  if it is constant everywhere.


