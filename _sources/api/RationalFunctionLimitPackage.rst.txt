.. index:: RationalFunctionLimitPackage

.. _l526174696f6e616c46756e6374696f6e4c696d69745061636b616765:

RationalFunctionLimitPackage R
==============================

:viewcode:`sign.spad line 174 <sign.spad#L174>` :editcode:`[edit on github] <sign.spad#L174>`

* R: \ :ref:`GcdDomain <l476364446f6d61696e>`\ 


Computation of limits for rational functions.


.. _l526174696f6e616c46756e6374696f6e4c696d69745061636b616765-636f6d706c65784c696d6974:

.. index::
   pair: RationalFunctionLimitPackage; complexLimit

:spadfun:`complexLimit`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R) -> \ :ref:`OnePointCompletion <l4f6e65506f696e74436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R 
  \ ``complexLimit(f(x), x = a)``\  computes the complex limit of \ ``f``\  as its argument \ ``x``\  approaches \ ``a``\ .


.. index::
   pair: RationalFunctionLimitPackage; complexLimit

:spadfun:`complexLimit`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`OnePointCompletion <l4f6e65506f696e74436f6d706c6574696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R) -> \ :ref:`OnePointCompletion <l4f6e65506f696e74436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R 
  \ ``complexLimit(f(x), x = a)``\  computes the complex limit of \ ``f``\  as its argument \ ``x``\  approaches \ ``a``\ .

.. _l526174696f6e616c46756e6374696f6e4c696d69745061636b616765-6c696d6974:

.. index::
   pair: RationalFunctionLimitPackage; limit

:spadfun:`limit`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R) -> Union(\ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, Record(leftHandLimit: Union(\ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, failed), rightHandLimit: Union(\ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, failed)), failed) 
  \ ``limit(f(x), x = a)``\  computes the real two-sided limit of \ ``f``\  as its argument \ ``x``\  approaches \ ``a``\ .


.. index::
   pair: RationalFunctionLimitPackage; limit

:spadfun:`limit`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`String <l537472696e67>`\ ) -> Union(\ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, failed) 
  \ ``limit(f(x),x,a,"left")``\  computes the real limit of \ ``f``\  as its argument \ ``x``\  approaches \ ``a``\  from the left; limit(\ ``f``\ (\ ``x``\ ),\ ``x``\ ,a,"right") computes the corresponding limit as \ ``x``\  approaches \ ``a``\  from the right.


.. index::
   pair: RationalFunctionLimitPackage; limit

:spadfun:`limit`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Equation <l4571756174696f6e>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R) -> Union(\ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, Record(leftHandLimit: Union(\ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, failed), rightHandLimit: Union(\ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, failed)), failed) 
  \ ``limit(f(x), x = a)``\  computes the real two-sided limit of \ ``f``\  as its argument \ ``x``\  approaches \ ``a``\ .


