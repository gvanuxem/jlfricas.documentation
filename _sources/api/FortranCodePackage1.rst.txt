.. index:: FortranCodePackage1

.. _l466f727472616e436f64655061636b61676531:

FortranCodePackage1
===================

:viewcode:`fortpak.spad line 1 <fortpak.spad#L1>` :editcode:`[edit on github] <fortpak.spad#L1>`


\ :ref:`FortranCodePackage1 <l466f727472616e436f64655061636b61676531>`\  provides some utilities for producing useful objects in FortranCode domain. The Package may be used with the FortranCode domain and its \ ``printCode``\  or possibly via an outputAsFortran. (The package provides items of use in connection with ASPs in the AXIOM-NAG link and, where appropriate, naming accords with that in IRENA.) The easy-to-use functions use Fortran loop variables \ ``I1``\ , \ ``I2``\ , and it is users' responsibility to check that this is sensible. The advanced functions use SegmentBinding to allow users control over Fortran loop variable names.


.. _l466f727472616e436f64655061636b61676531-6964656e746974795371756172654d6174726978:

.. index::
   pair: FortranCodePackage1; identitySquareMatrix

:spadfun:`identitySquareMatrix`\: (\ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`FortranCode <l466f727472616e436f6465>`\  
  \ ``identitySquareMatrix(s, p)``\  is undocumented.

.. _l466f727472616e436f64655061636b61676531-7a65726f4d6174726978:

.. index::
   pair: FortranCodePackage1; zeroMatrix

:spadfun:`zeroMatrix`\: (\ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`FortranCode <l466f727472616e436f6465>`\  
  \ ``zeroMatrix(s, p, q)``\  uses loop variables in the Fortran, \ ``I1``\  and \ ``I2``\ 


.. index::
   pair: FortranCodePackage1; zeroMatrix

:spadfun:`zeroMatrix`\: (\ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`FortranCode <l466f727472616e436f6465>`\  
  \ ``zeroMatrix(s, b, d)``\  in this version gives the user control over names of Fortran variables used in loops.

.. _l466f727472616e436f64655061636b61676531-7a65726f5371756172654d6174726978:

.. index::
   pair: FortranCodePackage1; zeroSquareMatrix

:spadfun:`zeroSquareMatrix`\: (\ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`FortranCode <l466f727472616e436f6465>`\  
  \ ``zeroSquareMatrix(s, p)``\  is undocumented.

.. _l466f727472616e436f64655061636b61676531-7a65726f566563746f72:

.. index::
   pair: FortranCodePackage1; zeroVector

:spadfun:`zeroVector`\: (\ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`FortranCode <l466f727472616e436f6465>`\  
  \ ``zeroVector(s, p)``\  is undocumented.


