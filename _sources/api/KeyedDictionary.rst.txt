.. index:: KeyedDictionary

.. _l4b6579656444696374696f6e617279:

KeyedDictionary(Key, Entry)
===========================

:viewcode:`aggcat.spad line 726 <aggcat.spad#L726>` :editcode:`[edit on github] <aggcat.spad#L726>`

* Key: \ :ref:`Type <l54797065>`\ 

* Entry: \ :ref:`Type <l54797065>`\ 


A keyed dictionary is a dictionary of key-entry pairs for which there is a unique entry for each key.


.. _l4b6579656444696374696f6e617279-23:

\ :ref:`# <l416767726567617465-23>`\ \: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4b6579656444696374696f6e617279-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\  or Record(key: Key, entry: Entry) has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4b6579656444696374696f6e617279-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\  or Record(key: Key, entry: Entry) has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4b6579656444696374696f6e617279-616e793f:

\ :ref:`any? <l486f6d6f67656e656f7573416767726567617465-616e793f>`\ \: (Record(key: Key, entry: Entry) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  if Record(key: Key, entry: Entry) has \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l4b6579656444696374696f6e617279-636f6e737472756374:

\ :ref:`construct <l436f6c6c656374696f6e-636f6e737472756374>`\ \: \ :ref:`List <l4c697374>`\  Record(key: Key, entry: Entry) -> % 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-636f6e76657274:

\ :ref:`convert <l436f6e7665727469626c65546f-636f6e76657274>`\ \: % -> \ :ref:`InputForm <l496e707574466f726d>`\  if Record(key: Key, entry: Entry) has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 
  from \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 

.. _l4b6579656444696374696f6e617279-636f7079:

\ :ref:`copy <l416767726567617465-636f7079>`\ \: % -> % 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4b6579656444696374696f6e617279-636f756e74:

\ :ref:`count <l486f6d6f67656e656f7573416767726567617465-636f756e74>`\ \: (Record(key: Key, entry: Entry) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)


\ :ref:`count <l486f6d6f67656e656f7573416767726567617465-636f756e74>`\ \: (Record(key: Key, entry: Entry), %) -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if Record(key: Key, entry: Entry) has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-64696374696f6e617279:

\ :ref:`dictionary <l44696374696f6e6172794f7065726174696f6e73-64696374696f6e617279>`\ \: () -> % 
  from \ :ref:`DictionaryOperations <l44696374696f6e6172794f7065726174696f6e73>`\  Record(key: Key, entry: Entry)


\ :ref:`dictionary <l44696374696f6e6172794f7065726174696f6e73-64696374696f6e617279>`\ \: \ :ref:`List <l4c697374>`\  Record(key: Key, entry: Entry) -> % 
  from \ :ref:`DictionaryOperations <l44696374696f6e6172794f7065726174696f6e73>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-656d7074793f:

\ :ref:`empty? <l416767726567617465-656d7074793f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4b6579656444696374696f6e617279-656d707479:

\ :ref:`empty <l416767726567617465-656d707479>`\ \: () -> % 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4b6579656444696374696f6e617279-65713f:

\ :ref:`eq? <l416767726567617465-65713f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4b6579656444696374696f6e617279-6576616c:

\ :ref:`eval <l4576616c61626c65-6576616c>`\ \: (%, \ :ref:`Equation <l4571756174696f6e>`\  Record(key: Key, entry: Entry)) -> % if Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\  and Record(key: Key, entry: Entry) has \ :ref:`Evalable <l4576616c61626c65>`\  Record(key: Key, entry: Entry)
  from \ :ref:`Evalable <l4576616c61626c65>`\  Record(key: Key, entry: Entry)


\ :ref:`eval <l4576616c61626c65-6576616c>`\ \: (%, \ :ref:`List <l4c697374>`\  \ :ref:`Equation <l4571756174696f6e>`\  Record(key: Key, entry: Entry)) -> % if Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\  and Record(key: Key, entry: Entry) has \ :ref:`Evalable <l4576616c61626c65>`\  Record(key: Key, entry: Entry)
  from \ :ref:`Evalable <l4576616c61626c65>`\  Record(key: Key, entry: Entry)


\ :ref:`eval <l496e6e65724576616c61626c65-6576616c>`\ \: (%, \ :ref:`List <l4c697374>`\  Record(key: Key, entry: Entry), \ :ref:`List <l4c697374>`\  Record(key: Key, entry: Entry)) -> % if Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\  and Record(key: Key, entry: Entry) has \ :ref:`Evalable <l4576616c61626c65>`\  Record(key: Key, entry: Entry)
  from \ :ref:`InnerEvalable <l496e6e65724576616c61626c65>`\ (Record(key: Key, entry: Entry), Record(key: Key, entry: Entry))


\ :ref:`eval <l496e6e65724576616c61626c65-6576616c>`\ \: (%, Record(key: Key, entry: Entry), Record(key: Key, entry: Entry)) -> % if Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\  and Record(key: Key, entry: Entry) has \ :ref:`Evalable <l4576616c61626c65>`\  Record(key: Key, entry: Entry)
  from \ :ref:`InnerEvalable <l496e6e65724576616c61626c65>`\ (Record(key: Key, entry: Entry), Record(key: Key, entry: Entry))

.. _l4b6579656444696374696f6e617279-65766572793f:

\ :ref:`every? <l486f6d6f67656e656f7573416767726567617465-65766572793f>`\ \: (Record(key: Key, entry: Entry) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-6578747261637421:

\ :ref:`extract! <l426167416767726567617465-6578747261637421>`\ \: % -> Record(key: Key, entry: Entry) 
  from \ :ref:`BagAggregate <l426167416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-66696e64:

\ :ref:`find <l436f6c6c656374696f6e-66696e64>`\ \: (Record(key: Key, entry: Entry) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> Union(Record(key: Key, entry: Entry), failed) 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-696e7365727421:

\ :ref:`insert! <l426167416767726567617465-696e7365727421>`\ \: (Record(key: Key, entry: Entry), %) -> % 
  from \ :ref:`BagAggregate <l426167416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-696e7370656374:

\ :ref:`inspect <l426167416767726567617465-696e7370656374>`\ \: % -> Record(key: Key, entry: Entry) 
  from \ :ref:`BagAggregate <l426167416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-6b65793f:

.. index::
   pair: KeyedDictionary; key?

:spadfun:`key?`\: (Key, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``key?(k, t)``\  tests if \ ``k``\  is a key in table \ ``t``\ .

.. _l4b6579656444696374696f6e617279-6b657973:

.. index::
   pair: KeyedDictionary; keys

:spadfun:`keys`\: % -> \ :ref:`List <l4c697374>`\  Key 
  \ ``keys(t)``\  returns the list of keys in table \ ``t``\ .

.. _l4b6579656444696374696f6e617279-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  if Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4b6579656444696374696f6e617279-6c6573733f:

\ :ref:`less? <l416767726567617465-6c6573733f>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4b6579656444696374696f6e617279-6d617021:

\ :ref:`map! <l486f6d6f67656e656f7573416767726567617465-6d617021>`\ \: (Record(key: Key, entry: Entry) -> Record(key: Key, entry: Entry), %) -> % 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-6d6170:

\ :ref:`map <l486f6d6f67656e656f7573416767726567617465-6d6170>`\ \: (Record(key: Key, entry: Entry) -> Record(key: Key, entry: Entry), %) -> % 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-6d6178:

\ :ref:`max <l486f6d6f67656e656f7573416767726567617465-6d6178>`\ \: % -> Record(key: Key, entry: Entry) if Record(key: Key, entry: Entry) has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)


\ :ref:`max <l486f6d6f67656e656f7573416767726567617465-6d6178>`\ \: ((Record(key: Key, entry: Entry), Record(key: Key, entry: Entry)) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> Record(key: Key, entry: Entry) if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-6d656d6265723f:

\ :ref:`member? <l486f6d6f67656e656f7573416767726567617465-6d656d6265723f>`\ \: (Record(key: Key, entry: Entry), %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if Record(key: Key, entry: Entry) has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-6d656d62657273:

\ :ref:`members <l486f6d6f67656e656f7573416767726567617465-6d656d62657273>`\ \: % -> \ :ref:`List <l4c697374>`\  Record(key: Key, entry: Entry) if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-6d696e:

\ :ref:`min <l486f6d6f67656e656f7573416767726567617465-6d696e>`\ \: % -> Record(key: Key, entry: Entry) if Record(key: Key, entry: Entry) has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-6d6f72653f:

\ :ref:`more? <l416767726567617465-6d6f72653f>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4b6579656444696374696f6e617279-7061727473:

\ :ref:`parts <l486f6d6f67656e656f7573416767726567617465-7061727473>`\ \: % -> \ :ref:`List <l4c697374>`\  Record(key: Key, entry: Entry) if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-726564756365:

\ :ref:`reduce <l436f6c6c656374696f6e-726564756365>`\ \: ((Record(key: Key, entry: Entry), Record(key: Key, entry: Entry)) -> Record(key: Key, entry: Entry), %) -> Record(key: Key, entry: Entry) if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  Record(key: Key, entry: Entry)


\ :ref:`reduce <l436f6c6c656374696f6e-726564756365>`\ \: ((Record(key: Key, entry: Entry), Record(key: Key, entry: Entry)) -> Record(key: Key, entry: Entry), %, Record(key: Key, entry: Entry)) -> Record(key: Key, entry: Entry) if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  Record(key: Key, entry: Entry)


\ :ref:`reduce <l436f6c6c656374696f6e-726564756365>`\ \: ((Record(key: Key, entry: Entry), Record(key: Key, entry: Entry)) -> Record(key: Key, entry: Entry), %, Record(key: Key, entry: Entry), Record(key: Key, entry: Entry)) -> Record(key: Key, entry: Entry) if Record(key: Key, entry: Entry) has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-72656d6f766521:

.. index::
   pair: KeyedDictionary; remove!

:spadfun:`remove!`\: (Key, %) -> Union(Entry, failed) 
  \ ``remove!(k, t)``\  searches the table \ ``t``\  for the key \ ``k``\  removing (and return) the entry if there. If \ ``t``\  has no such key, \ ``remove!(k,t)``\  returns "failed".


\ :ref:`remove! <l44696374696f6e6172794f7065726174696f6e73-72656d6f766521>`\ \: (Record(key: Key, entry: Entry) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`DictionaryOperations <l44696374696f6e6172794f7065726174696f6e73>`\  Record(key: Key, entry: Entry)


\ :ref:`remove! <l44696374696f6e6172794f7065726174696f6e73-72656d6f766521>`\ \: (Record(key: Key, entry: Entry), %) -> % if Record(key: Key, entry: Entry) has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`DictionaryOperations <l44696374696f6e6172794f7065726174696f6e73>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-72656d6f7665:

\ :ref:`remove <l436f6c6c656374696f6e-72656d6f7665>`\ \: (Record(key: Key, entry: Entry) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  Record(key: Key, entry: Entry)


\ :ref:`remove <l436f6c6c656374696f6e-72656d6f7665>`\ \: (Record(key: Key, entry: Entry), %) -> % if Record(key: Key, entry: Entry) has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-72656d6f76654475706c696361746573:

\ :ref:`removeDuplicates <l436f6c6c656374696f6e-72656d6f76654475706c696361746573>`\ \: % -> % if Record(key: Key, entry: Entry) has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-73616d706c65:

\ :ref:`sample <l416767726567617465-73616d706c65>`\ \: % 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4b6579656444696374696f6e617279-736561726368:

.. index::
   pair: KeyedDictionary; search

:spadfun:`search`\: (Key, %) -> Union(Entry, failed) 
  \ ``search(k, t)``\  searches the table \ ``t``\  for the key \ ``k``\ , returning the entry stored in \ ``t``\  for key \ ``k``\ . If \ ``t``\  has no such key, \ ``search(k,t)``\  returns "failed".

.. _l4b6579656444696374696f6e617279-73656c65637421:

\ :ref:`select! <l44696374696f6e6172794f7065726174696f6e73-73656c65637421>`\ \: (Record(key: Key, entry: Entry) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`DictionaryOperations <l44696374696f6e6172794f7065726174696f6e73>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-73656c656374:

\ :ref:`select <l436f6c6c656374696f6e-73656c656374>`\ \: (Record(key: Key, entry: Entry) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  Record(key: Key, entry: Entry)

.. _l4b6579656444696374696f6e617279-73697a653f:

\ :ref:`size? <l416767726567617465-73697a653f>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 


\ :ref:`Aggregate <l416767726567617465>`\  

\ :ref:`BagAggregate <l426167416767726567617465>`\  Record(key: Key, entry: Entry) 

\ :ref:`BasicType <l426173696354797065>`\  if Record(key: Key, entry: Entry) has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\  or Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  if Record(key: Key, entry: Entry) has \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

\ :ref:`Collection <l436f6c6c656374696f6e>`\  Record(key: Key, entry: Entry) 

\ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\  if Record(key: Key, entry: Entry) has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 

\ :ref:`Dictionary <l44696374696f6e617279>`\  Record(key: Key, entry: Entry) 

\ :ref:`DictionaryOperations <l44696374696f6e6172794f7065726174696f6e73>`\  Record(key: Key, entry: Entry) 

\ :ref:`Evalable <l4576616c61626c65>`\  Record(key: Key, entry: Entry) if Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\  and Record(key: Key, entry: Entry) has \ :ref:`Evalable <l4576616c61626c65>`\  Record(key: Key, entry: Entry)

\ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  Record(key: Key, entry: Entry) 

\ :ref:`InnerEvalable <l496e6e65724576616c61626c65>`\ (Record(key: Key, entry: Entry), Record(key: Key, entry: Entry)) if Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\  and Record(key: Key, entry: Entry) has \ :ref:`Evalable <l4576616c61626c65>`\  Record(key: Key, entry: Entry)

\ :ref:`SetCategory <l53657443617465676f7279>`\  if Record(key: Key, entry: Entry) has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\  

