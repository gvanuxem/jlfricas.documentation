.. index:: PointPackage

.. _l506f696e745061636b616765:

PointPackage R
==============

:viewcode:`newpoint.spad line 554 <newpoint.spad#L554>` :editcode:`[edit on github] <newpoint.spad#L554>`

* R: \ :ref:`Ring <l52696e67>`\ 


This package \undocumented


.. _l506f696e745061636b616765-636f6c6f72:

.. index::
   pair: PointPackage; color

:spadfun:`color`\: \ :ref:`Point <l506f696e74>`\  R -> R 
  \ ``color(pt)``\  returns the fourth element of the point, \ ``pt``\ , although no assumptions are made with regards as to how the components of higher dimensional points are interpreted. This function is defined for the convenience of the user using specifically, color to express a fourth dimension.

.. _l506f696e745061636b616765-687565:

.. index::
   pair: PointPackage; hue

:spadfun:`hue`\: \ :ref:`Point <l506f696e74>`\  R -> R 
  \ ``hue(pt)``\  returns the third element of the two dimensional point, \ ``pt``\ , although no assumptions are made with regards as to how the components of higher dimensional points are interpreted. This function is defined for the convenience of the user using specifically, hue to express a third dimension.

.. _l506f696e745061636b616765-706869436f6f7264:

.. index::
   pair: PointPackage; phiCoord

:spadfun:`phiCoord`\: \ :ref:`Point <l506f696e74>`\  R -> R 
  \ ``phiCoord(pt)``\  returns the third element of the point, \ ``pt``\ , although no assumptions are made as to the coordinate system being used. This function is defined for the convenience of the user dealing with a spherical coordinate system.

.. _l506f696e745061636b616765-72436f6f7264:

.. index::
   pair: PointPackage; rCoord

:spadfun:`rCoord`\: \ :ref:`Point <l506f696e74>`\  R -> R 
  \ ``rCoord(pt)``\  returns the first element of the point, \ ``pt``\ , although no assumptions are made as to the coordinate system being used. This function is defined for the convenience of the user dealing with a spherical or a cylindrical coordinate system.

.. _l506f696e745061636b616765-7368616465:

.. index::
   pair: PointPackage; shade

:spadfun:`shade`\: \ :ref:`Point <l506f696e74>`\  R -> R 
  \ ``shade(pt)``\  returns the fourth element of the two dimensional point, \ ``pt``\ , although no assumptions are made with regards as to how the components of higher dimensional points are interpreted. This function is defined for the convenience of the user using specifically, shade to express a fourth dimension.

.. _l506f696e745061636b616765-7468657461436f6f7264:

.. index::
   pair: PointPackage; thetaCoord

:spadfun:`thetaCoord`\: \ :ref:`Point <l506f696e74>`\  R -> R 
  \ ``thetaCoord(pt)``\  returns the second element of the point, \ ``pt``\ , although no assumptions are made as to the coordinate system being used. This function is defined for the convenience of the user dealing with a spherical or a cylindrical coordinate system.

.. _l506f696e745061636b616765-78436f6f7264:

.. index::
   pair: PointPackage; xCoord

:spadfun:`xCoord`\: \ :ref:`Point <l506f696e74>`\  R -> R 
  \ ``xCoord(pt)``\  returns the first element of the point, \ ``pt``\ , although no assumptions are made as to the coordinate system being used. This function is defined for the convenience of the user dealing with a Cartesian coordinate system.

.. _l506f696e745061636b616765-79436f6f7264:

.. index::
   pair: PointPackage; yCoord

:spadfun:`yCoord`\: \ :ref:`Point <l506f696e74>`\  R -> R 
  \ ``yCoord(pt)``\  returns the second element of the point, \ ``pt``\ , although no assumptions are made as to the coordinate system being used. This function is defined for the convenience of the user dealing with a Cartesian coordinate system.

.. _l506f696e745061636b616765-7a436f6f7264:

.. index::
   pair: PointPackage; zCoord

:spadfun:`zCoord`\: \ :ref:`Point <l506f696e74>`\  R -> R 
  \ ``zCoord(pt)``\  returns the third element of the point, \ ``pt``\ , although no assumptions are made as to the coordinate system being used. This function is defined for the convenience of the user dealing with a Cartesian or a cylindrical coordinate system.


