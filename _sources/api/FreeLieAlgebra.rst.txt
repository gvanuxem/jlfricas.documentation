.. index:: FreeLieAlgebra

.. _l467265654c6965416c6765627261:

FreeLieAlgebra(VarSet, R)
=========================

:viewcode:`xlpoly.spad line 325 <xlpoly.spad#L325>` :editcode:`[edit on github] <xlpoly.spad#L325>`

* VarSet: \ :ref:`OrderedSet <l4f726465726564536574>`\ 

* R: \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 


The category of free Lie algebras. It is used by domains of non-commutative algebra: \ :ref:`LiePolynomial <l4c6965506f6c796e6f6d69616c>`\  and \ :ref:`XPBWPolynomial <l58504257506f6c796e6f6d69616c>`\ .   Author: Michel Petitot (petitot@lifl.\ ``fr``\ )


.. _l467265654c6965416c6765627261-30:

\ :ref:`0 <l4162656c69616e4d6f6e6f6964-30>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l467265654c6965416c6765627261-2a:

\ :ref:`\* <l52696768744d6f64756c65-2a>`\ \: (%, R) -> % 
  from \ :ref:`RightModule <l52696768744d6f64756c65>`\  R


\ :ref:`\* <l4162656c69616e47726f7570-2a>`\ \: (\ :ref:`Integer <l496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`\* <l4162656c69616e4d6f6e6f6964-2a>`\ \: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`\* <l4162656c69616e53656d6947726f7570-2a>`\ \: (\ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 


\ :ref:`\* <l4c6566744d6f64756c65-2a>`\ \: (R, %) -> % 
  from \ :ref:`LeftModule <l4c6566744d6f64756c65>`\  R

.. _l467265654c6965416c6765627261-2b:

\ :ref:`+ <l4162656c69616e53656d6947726f7570-2b>`\ \: (%, %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l467265654c6965416c6765627261-2d:

\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: % -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: (%, %) -> % 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 

.. _l467265654c6965416c6765627261-2f:

\ :ref:`/ <l4c6965416c6765627261-2f>`\ \: (%, R) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  from \ :ref:`LieAlgebra <l4c6965416c6765627261>`\  R

.. _l467265654c6965416c6765627261-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l467265654c6965416c6765627261-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l467265654c6965416c6765627261-636f6566:

.. index::
   pair: FreeLieAlgebra; coef

:spadfun:`coef`\: (\ :ref:`XRecursivePolynomial <l58526563757273697665506f6c796e6f6d69616c>`\ (VarSet, R), %) -> R 
  \ ``coef(x, y)``\  returns the scalar product of \ ``x``\  by \ ``y``\ , the set of words being regarded as an orthogonal basis.

.. _l467265654c6965416c6765627261-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


.. index::
   pair: FreeLieAlgebra; coerce

:spadfun:`coerce`\: % -> \ :ref:`XDistributedPolynomial <l584469737472696275746564506f6c796e6f6d69616c>`\ (VarSet, R) 
  \ ``coerce(x)``\  returns \ ``x``\  as distributed polynomial.


.. index::
   pair: FreeLieAlgebra; coerce

:spadfun:`coerce`\: % -> \ :ref:`XRecursivePolynomial <l58526563757273697665506f6c796e6f6d69616c>`\ (VarSet, R) 
  \ ``coerce(x)``\  returns \ ``x``\  as a recursive polynomial.


.. index::
   pair: FreeLieAlgebra; coerce

:spadfun:`coerce`\: VarSet -> % 
  \ ``coerce(x)``\  returns \ ``x``\  as a Lie polynomial.

.. _l467265654c6965416c6765627261-636f6e737472756374:

\ :ref:`construct <l4c6965416c6765627261-636f6e737472756374>`\ \: (%, %) -> % 
  from \ :ref:`LieAlgebra <l4c6965416c6765627261>`\  R

.. _l467265654c6965416c6765627261-646567726565:

.. index::
   pair: FreeLieAlgebra; degree

:spadfun:`degree`\: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``degree(x)``\  returns the greatest length of a word in the support of \ ``x``\ .

.. _l467265654c6965416c6765627261-6576616c:

.. index::
   pair: FreeLieAlgebra; eval

:spadfun:`eval`\: (%, \ :ref:`List <l4c697374>`\  VarSet, \ :ref:`List <l4c697374>`\  %) -> % 
  \ ``eval(p, [x1, ..., xn], [v1, ..., vn])``\  replaces \ ``xi``\  by \ ``vi``\  in \ ``p``\ .


.. index::
   pair: FreeLieAlgebra; eval

:spadfun:`eval`\: (%, VarSet, %) -> % 
  \ ``eval(p, x, v)``\  replaces \ ``x``\  by \ ``v``\  in \ ``p``\ .

.. _l467265654c6965416c6765627261-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l467265654c6965416c6765627261-4c6965506f6c79:

.. index::
   pair: FreeLieAlgebra; LiePoly

:spadfun:`LiePoly`\: \ :ref:`LyndonWord <l4c796e646f6e576f7264>`\  VarSet -> % 
  \ ``LiePoly(l)``\  returns the bracketed form of \ ``l``\  as a Lie polynomial.

.. _l467265654c6965416c6765627261-6c71756f:

.. index::
   pair: FreeLieAlgebra; lquo

:spadfun:`lquo`\: (\ :ref:`XRecursivePolynomial <l58526563757273697665506f6c796e6f6d69616c>`\ (VarSet, R), %) -> \ :ref:`XRecursivePolynomial <l58526563757273697665506f6c796e6f6d69616c>`\ (VarSet, R) 
  \ ``lquo(x, y)``\  returns the left simplification of \ ``x``\  by \ ``y``\ .

.. _l467265654c6965416c6765627261-6d6972726f72:

.. index::
   pair: FreeLieAlgebra; mirror

:spadfun:`mirror`\: % -> % 
  \ ``mirror(x)``\  returns \ ``Sum(r_i mirror(w_i))``\  if \ ``x``\  is \ ``Sum(r_i w_i)``\ .

.. _l467265654c6965416c6765627261-6f70706f736974653f:

\ :ref:`opposite? <l4162656c69616e4d6f6e6f6964-6f70706f736974653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l467265654c6965416c6765627261-7271756f:

.. index::
   pair: FreeLieAlgebra; rquo

:spadfun:`rquo`\: (\ :ref:`XRecursivePolynomial <l58526563757273697665506f6c796e6f6d69616c>`\ (VarSet, R), %) -> \ :ref:`XRecursivePolynomial <l58526563757273697665506f6c796e6f6d69616c>`\ (VarSet, R) 
  \ ``rquo(x, y)``\  returns the right simplification of \ ``x``\  by \ ``y``\ .

.. _l467265654c6965416c6765627261-73616d706c65:

\ :ref:`sample <l4162656c69616e4d6f6e6f6964-73616d706c65>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l467265654c6965416c6765627261-7375627472616374496643616e:

\ :ref:`subtractIfCan <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-7375627472616374496643616e>`\ \: (%, %) -> Union(%, failed) 
  from \ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\ 

.. _l467265654c6965416c6765627261-7472756e63:

.. index::
   pair: FreeLieAlgebra; trunc

:spadfun:`trunc`\: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  \ ``trunc(p, n)``\  returns the polynomial \ ``p``\  truncated at order \ ``n``\ .

.. _l467265654c6965416c6765627261-7661724c697374:

.. index::
   pair: FreeLieAlgebra; varList

:spadfun:`varList`\: % -> \ :ref:`List <l4c697374>`\  VarSet 
  \ ``varList(x)``\  returns the list of distinct entries of \ ``x``\ .

.. _l467265654c6965416c6765627261-7a65726f3f:

\ :ref:`zero? <l4162656c69616e4d6f6e6f6964-7a65726f3f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\  

\ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\  

\ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\  

\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`BiModule <l42694d6f64756c65>`\ (R, R) 

\ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`LeftModule <l4c6566744d6f64756c65>`\  R 

\ :ref:`LieAlgebra <l4c6965416c6765627261>`\  R 

\ :ref:`Module <l4d6f64756c65>`\  R 

\ :ref:`RightModule <l52696768744d6f64756c65>`\  R 

\ :ref:`SetCategory <l53657443617465676f7279>`\  

