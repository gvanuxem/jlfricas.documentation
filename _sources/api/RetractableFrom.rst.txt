.. index:: RetractableFrom

.. _l5265747261637461626c6546726f6d:

RetractableFrom S
=================

:viewcode:`coerce.spad line 73 <coerce.spad#L73>` :editcode:`[edit on github] <coerce.spad#L73>`

* S: \ :ref:`Type <l54797065>`\ 


\ ``B``\  is retractable from A means that some elements in A can be converted into elements of \ ``B``\  and any element of \ ``B``\  can be converted into an element of A.


.. _l5265747261637461626c6546726f6d-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> S 
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  S

.. _l5265747261637461626c6546726f6d-72657472616374:

.. index::
   pair: RetractableFrom; retract

:spadfun:`retract`\: S -> % 
  \ ``retract(a)``\  transforms a into an element of \% if possible. Error: if a cannot be made into an element of \%.

.. _l5265747261637461626c6546726f6d-72657472616374496643616e:

.. index::
   pair: RetractableFrom; retractIfCan

:spadfun:`retractIfCan`\: S -> Union(%, failed) 
  \ ``retractIfCan(a)``\  transforms a into an element of \% if possible. Returns "failed" if a cannot be made into an element of \%.


\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  S 

