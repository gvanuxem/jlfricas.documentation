.. index:: RationalFunctionDefiniteIntegration

.. _l526174696f6e616c46756e6374696f6e446566696e697465496e746567726174696f6e:

RationalFunctionDefiniteIntegration R
=====================================

:viewcode:`defintrf.spad line 259 <defintrf.spad#L259>` :editcode:`[edit on github] <defintrf.spad#L259>`

* R: Join(\ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ , \ :ref:`Comparable <l436f6d70617261626c65>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`LinearlyExplicitOver <l4c696e6561726c794578706c696369744f766572>`\  \ :ref:`Integer <l496e7465676572>`\ )


\ :ref:`RationalFunctionDefiniteIntegration <l526174696f6e616c46756e6374696f6e446566696e697465496e746567726174696f6e>`\  provides functions to compute definite integrals of rational functions.


.. _l526174696f6e616c46756e6374696f6e446566696e697465496e746567726174696f6e-696e74656772617465:

.. index::
   pair: RationalFunctionDefiniteIntegration; integrate

:spadfun:`integrate`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  R) -> Union(f1: \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  R, f2: \ :ref:`List <l4c697374>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  R, fail: failed, pole: potentialPole) 
  \ ``integrate(f, x = a..b)``\  returns the integral of \ ``f(x)dx``\  from a to \ ``b``\ . Error: if \ ``f``\  has a pole for \ ``x``\  between a and \ ``b``\ .


.. index::
   pair: RationalFunctionDefiniteIntegration; integrate

:spadfun:`integrate`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  R, \ :ref:`String <l537472696e67>`\ ) -> Union(f1: \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  R, f2: \ :ref:`List <l4c697374>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  R, fail: failed, pole: potentialPole) 
  \ ``integrate(f, x = a..b, "noPole")``\  returns the integral of \ ``f(x)dx``\  from a to \ ``b``\ . If it is not possible to check whether \ ``f``\  has a pole for \ ``x``\  between a and \ ``b``\  (because of parameters), then this function will assume that \ ``f``\  has no such pole. Error: if \ ``f``\  has a pole for \ ``x``\  between a and \ ``b``\  or if the last argument is not "noPole".


.. index::
   pair: RationalFunctionDefiniteIntegration; integrate

:spadfun:`integrate`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R) -> Union(f1: \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  R, f2: \ :ref:`List <l4c697374>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  R, fail: failed, pole: potentialPole) 
  \ ``integrate(f, x = a..b)``\  returns the integral of \ ``f(x)dx``\  from a to \ ``b``\ . Error: if \ ``f``\  has a pole for \ ``x``\  between a and \ ``b``\ .


.. index::
   pair: RationalFunctionDefiniteIntegration; integrate

:spadfun:`integrate`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`String <l537472696e67>`\ ) -> Union(f1: \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  R, f2: \ :ref:`List <l4c697374>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  \ :ref:`Expression <l45787072657373696f6e>`\  R, fail: failed, pole: potentialPole) 
  \ ``integrate(f, x = a..b, "noPole")``\  returns the integral of \ ``f(x)dx``\  from a to \ ``b``\ . If it is not possible to check whether \ ``f``\  has a pole for \ ``x``\  between a and \ ``b``\  (because of parameters), then this function will assume that \ ``f``\  has no such pole. Error: if \ ``f``\  has a pole for \ ``x``\  between a and \ ``b``\  or if the last argument is not "noPole".


