.. index:: RationalRicDE

.. _l526174696f6e616c5269634445:

RationalRicDE(F, UP)
====================

:viewcode:`riccati.spad line 254 <riccati.spad#L254>` :editcode:`[edit on github] <riccati.spad#L254>`

* F: Join(\ :ref:`Field <l4669656c64>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  F


In-field solution of Riccati equations, rational case.


.. _l526174696f6e616c5269634445-706f6c795269634445:

.. index::
   pair: RationalRicDE; polyRicDE

:spadfun:`polyRicDE`\: (\ :ref:`LinearOrdinaryDifferentialOperator2 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7232>`\ (UP, \ :ref:`Fraction <l4672616374696f6e>`\  UP), UP -> \ :ref:`List <l4c697374>`\  F) -> \ :ref:`List <l4c697374>`\  Record(poly: UP, eq: \ :ref:`LinearOrdinaryDifferentialOperator2 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7232>`\ (UP, \ :ref:`Fraction <l4672616374696f6e>`\  UP)) 
  \ ``polyRicDE(op, zeros)``\  returns \ ``[[p1, L1], [p2, L2], ... , [pk, Lk]]``\  such that the polynomial part of any rational solution of the associated Riccati equation of \ ``op y = 0``\  must be one of the \ ``pi``\ \ ``'s``\  (up to the constant coefficient), in which case the equation for \ ``z = y e^{-int p}``\  is \ ``Li z = 0``\ . \ ``zeros``\  is a zero finder in \ ``UP``\ .

.. _l526174696f6e616c5269634445-72696344736f6c7665:

.. index::
   pair: RationalRicDE; ricDsolve

:spadfun:`ricDsolve`\: (\ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP, UP -> \ :ref:`Factored <l466163746f726564>`\  UP) -> \ :ref:`List <l4c697374>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP if F has \ :ref:`AlgebraicallyClosedField <l416c67656272616963616c6c79436c6f7365644669656c64>`\ 
  \ ``ricDsolve(op, ezfactor)``\  returns the rational solutions of the associated Riccati equation of \ ``op y = 0``\ . Argument \ ``ezfactor``\  is a factorisation in \ ``UP``\ , not necessarily into irreducibles.


.. index::
   pair: RationalRicDE; ricDsolve

:spadfun:`ricDsolve`\: (\ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP, UP -> \ :ref:`List <l4c697374>`\  F) -> \ :ref:`List <l4c697374>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP 
  \ ``ricDsolve(op, zeros)``\  returns the rational solutions of the associated Riccati equation of \ ``op y = 0``\ . \ ``zeros``\  is a zero finder in \ ``UP``\ .


.. index::
   pair: RationalRicDE; ricDsolve

:spadfun:`ricDsolve`\: (\ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP, UP -> \ :ref:`List <l4c697374>`\  F, UP -> \ :ref:`Factored <l466163746f726564>`\  UP) -> \ :ref:`List <l4c697374>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP 
  \ ``ricDsolve(op, zeros, ezfactor)``\  returns the rational solutions of the associated Riccati equation of \ ``op y = 0``\ . \ ``zeros``\  is a zero finder in \ ``UP``\ . Argument \ ``ezfactor``\  is a factorisation in \ ``UP``\ , not necessarily into irreducibles.


.. index::
   pair: RationalRicDE; ricDsolve

:spadfun:`ricDsolve`\: (\ :ref:`LinearOrdinaryDifferentialOperator2 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7232>`\ (UP, \ :ref:`Fraction <l4672616374696f6e>`\  UP), UP -> \ :ref:`Factored <l466163746f726564>`\  UP) -> \ :ref:`List <l4c697374>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP if F has \ :ref:`AlgebraicallyClosedField <l416c67656272616963616c6c79436c6f7365644669656c64>`\ 
  \ ``ricDsolve(op, ezfactor)``\  returns the rational solutions of the associated Riccati equation of \ ``op y = 0``\ . Argument \ ``ezfactor``\  is a factorisation in \ ``UP``\ , not necessarily into irreducibles.


.. index::
   pair: RationalRicDE; ricDsolve

:spadfun:`ricDsolve`\: (\ :ref:`LinearOrdinaryDifferentialOperator2 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7232>`\ (UP, \ :ref:`Fraction <l4672616374696f6e>`\  UP), UP -> \ :ref:`List <l4c697374>`\  F) -> \ :ref:`List <l4c697374>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP 
  \ ``ricDsolve(op, zeros)``\  returns the rational solutions of the associated Riccati equation of \ ``op y = 0``\ . \ ``zeros``\  is a zero finder in \ ``UP``\ .


.. index::
   pair: RationalRicDE; ricDsolve

:spadfun:`ricDsolve`\: (\ :ref:`LinearOrdinaryDifferentialOperator2 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7232>`\ (UP, \ :ref:`Fraction <l4672616374696f6e>`\  UP), UP -> \ :ref:`List <l4c697374>`\  F, UP -> \ :ref:`Factored <l466163746f726564>`\  UP) -> \ :ref:`List <l4c697374>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP 
  \ ``ricDsolve(op, zeros, ezfactor)``\  returns the rational solutions of the associated Riccati equation of \ ``op y = 0``\ . \ ``zeros``\  is a zero finder in \ ``UP``\ . Argument \ ``ezfactor``\  is a factorisation in \ ``UP``\ , not necessarily into irreducibles.


.. index::
   pair: RationalRicDE; ricDsolve

:spadfun:`ricDsolve`\: \ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP -> \ :ref:`List <l4c697374>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP if F has \ :ref:`AlgebraicallyClosedField <l416c67656272616963616c6c79436c6f7365644669656c64>`\ 
  \ ``ricDsolve(op)``\  returns the rational solutions of the associated Riccati equation of \ ``op y = 0``\ .


.. index::
   pair: RationalRicDE; ricDsolve

:spadfun:`ricDsolve`\: \ :ref:`LinearOrdinaryDifferentialOperator2 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7232>`\ (UP, \ :ref:`Fraction <l4672616374696f6e>`\  UP) -> \ :ref:`List <l4c697374>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP if F has \ :ref:`AlgebraicallyClosedField <l416c67656272616963616c6c79436c6f7365644669656c64>`\ 
  \ ``ricDsolve(op)``\  returns the rational solutions of the associated Riccati equation of \ ``op y = 0``\ .

.. _l526174696f6e616c5269634445-73696e675269634445:

.. index::
   pair: RationalRicDE; singRicDE

:spadfun:`singRicDE`\: (\ :ref:`LinearOrdinaryDifferentialOperator2 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7232>`\ (UP, \ :ref:`Fraction <l4672616374696f6e>`\  UP), UP -> \ :ref:`Factored <l466163746f726564>`\  UP) -> \ :ref:`List <l4c697374>`\  Record(frac: \ :ref:`Fraction <l4672616374696f6e>`\  UP, eq: \ :ref:`LinearOrdinaryDifferentialOperator2 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7232>`\ (UP, \ :ref:`Fraction <l4672616374696f6e>`\  UP)) 
  \ ``singRicDE(op, ezfactor)``\  returns \ ``[[f1, L1], [f2, L2], ..., [fk, Lk]]``\  such that the singular \ ``++``\  part of any rational solution of the associated Riccati equation of \ ``op y = 0``\  must be one of the \ ``fi``\ \ ``'s``\  (up to the constant coefficient), in which case the equation for \ ``z = y e^{-int ai}``\  is \ ``Li z = 0``\ . Argument \ ``ezfactor``\  is a factorisation in \ ``UP``\ , not necessarily into irreducibles.


