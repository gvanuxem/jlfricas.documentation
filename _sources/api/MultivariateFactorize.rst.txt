.. index:: MultivariateFactorize

.. _l4d756c746976617269617465466163746f72697a65:

MultivariateFactorize(OV, E, R, P)
==================================

:viewcode:`multfact.spad line 437 <multfact.spad#L437>` :editcode:`[edit on github] <multfact.spad#L437>`

* OV: \ :ref:`OrderedSet <l4f726465726564536574>`\ 

* E: \ :ref:`OrderedAbelianMonoidSup <l4f7264657265644162656c69616e4d6f6e6f6964537570>`\ 

* R: Join(\ :ref:`PolynomialFactorizationExplicit <l506f6c796e6f6d69616c466163746f72697a6174696f6e4578706c69636974>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ )

* P: \ :ref:`PolynomialCategory <l506f6c796e6f6d69616c43617465676f7279>`\ (R, E, OV)


This is the top level package for doing multivariate factorization over basic domains like \ :ref:`Integer <l496e7465676572>`\  or Fraction Integer.


.. _l4d756c746976617269617465466163746f72697a65-666163746f72:

.. index::
   pair: MultivariateFactorize; factor

:spadfun:`factor`\: P -> \ :ref:`Factored <l466163746f726564>`\  P 
  \ ``factor(p)``\  factors the multivariate polynomial \ ``p``\  over its coefficient domain


.. index::
   pair: MultivariateFactorize; factor

:spadfun:`factor`\: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  P -> \ :ref:`Factored <l466163746f726564>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  P 
  \ ``factor(p)``\  factors the multivariate polynomial \ ``p``\  over its coefficient domain where \ ``p``\  is represented as a univariate polynomial with multivariate coefficients


