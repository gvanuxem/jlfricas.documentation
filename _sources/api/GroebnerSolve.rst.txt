.. index:: GroebnerSolve

.. _l47726f65626e6572536f6c7665:

GroebnerSolve(lv, F, R)
=======================

:viewcode:`groebsol.spad line 1 <groebsol.spad#L1>` :editcode:`[edit on github] <groebsol.spad#L1>`

* lv: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ 

* F: \ :ref:`GcdDomain <l476364446f6d61696e>`\ 

* R: \ :ref:`GcdDomain <l476364446f6d61696e>`\ 


Author : \ ``P``\ .Gianni, Summer \ ``'88``\ , revised November \ ``'89``\  Solve systems of polynomial equations using Groebner bases Total order Groebner bases are computed and then converted to lex ones This package is mostly intended for internal use.


.. _l47726f65626e6572536f6c7665-67656e65726963506f736974696f6e:

.. index::
   pair: GroebnerSolve; genericPosition

:spadfun:`genericPosition`\: (\ :ref:`List <l4c697374>`\  \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, F), \ :ref:`List <l4c697374>`\  \ :ref:`OrderedVariableList <l4f7264657265645661726961626c654c697374>`\  lv) -> Record(dpolys: \ :ref:`List <l4c697374>`\  \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, F), coords: \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``genericPosition(lp, lv)``\  puts a radical zero dimensional ideal in general position, for system \ ``lp``\  in variables \ ``lv``\ .

.. _l47726f65626e6572536f6c7665-67726f6562536f6c7665:

.. index::
   pair: GroebnerSolve; groebSolve

:spadfun:`groebSolve`\: (\ :ref:`List <l4c697374>`\  \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, F), \ :ref:`List <l4c697374>`\  \ :ref:`OrderedVariableList <l4f7264657265645661726961626c654c697374>`\  lv) -> \ :ref:`List <l4c697374>`\  \ :ref:`List <l4c697374>`\  \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, F) 
  \ ``groebSolve(lp, lv)``\  reduces the polynomial system \ ``lp``\  in variables \ ``lv``\  to triangular form. Algorithm based on groebner bases algorithm with linear algebra for change of ordering. Preprocessing for the general solver. The polynomials in input are of type DMP.

.. _l47726f65626e6572536f6c7665-7465737444696d:

.. index::
   pair: GroebnerSolve; testDim

:spadfun:`testDim`\: (\ :ref:`List <l4c697374>`\  \ :ref:`HomogeneousDistributedMultivariatePolynomial <l486f6d6f67656e656f757344697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, F), \ :ref:`List <l4c697374>`\  \ :ref:`OrderedVariableList <l4f7264657265645661726961626c654c697374>`\  lv) -> Union(\ :ref:`List <l4c697374>`\  \ :ref:`HomogeneousDistributedMultivariatePolynomial <l486f6d6f67656e656f757344697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (lv, F), failed) 
  \ ``testDim(lp, lv)``\  tests if the polynomial system \ ``lp``\  in variables \ ``lv``\  is zero dimensional.


