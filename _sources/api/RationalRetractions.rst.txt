.. index:: RationalRetractions

.. _l526174696f6e616c52657472616374696f6e73:

RationalRetractions S
=====================

:viewcode:`retract.spad line 52 <retract.spad#L52>` :editcode:`[edit on github] <retract.spad#L52>`

* S: \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 


rational number testing and retraction functions. Date Created: March 1990


.. _l526174696f6e616c52657472616374696f6e73-726174696f6e616c3f:

.. index::
   pair: RationalRetractions; rational?

:spadfun:`rational?`\: S -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``rational?(x)``\  returns \ ``true``\  if \ ``x``\  is a rational number, \ ``false``\  otherwise.

.. _l526174696f6e616c52657472616374696f6e73-726174696f6e616c:

.. index::
   pair: RationalRetractions; rational

:spadfun:`rational`\: S -> \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``rational(x)``\  returns \ ``x``\  as a rational number; error if \ ``x``\  is not a rational number.

.. _l526174696f6e616c52657472616374696f6e73-726174696f6e616c496643616e:

.. index::
   pair: RationalRetractions; rationalIfCan

:spadfun:`rationalIfCan`\: S -> Union(\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , failed) 
  \ ``rationalIfCan(x)``\  returns \ ``x``\  as a rational number, "failed" if \ ``x``\  is not a rational number.


