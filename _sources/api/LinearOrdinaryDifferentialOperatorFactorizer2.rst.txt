.. index:: LinearOrdinaryDifferentialOperatorFactorizer2

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232:

LinearOrdinaryDifferentialOperatorFactorizer2(var, cen)
=======================================================

:viewcode:`lodof2.spad line 46 <lodof2.spad#L46>` :editcode:`[edit on github] <lodof2.spad#L46>`

* var: \ :ref:`Symbol <l53796d626f6c>`\ 

* cen: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 


\ :ref:`LinearOrdinaryDifferentialOperatorFactorizer2 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232>`\  provides a factorizer for linear ordinary differential operators whose coefficients are rational functions.


.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-666163746f72:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; factor

:spadfun:`factor`\: (\ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Factored <l466163746f726564>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) 
  to be documented later.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-67655f6d696e696d616c:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; ge_minimal

:spadfun:`ge_minimal`\: (\ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Factored <l466163746f726564>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`List <l4c697374>`\  Record(singularity: Record(point: Union(\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , infinity), lpf: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), dxt: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ), fos: \ :ref:`List <l4c697374>`\  Record(op: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), ram: \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), expart: \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), mge: \ :ref:`List <l4c697374>`\  \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)) 
  to be documented later.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-67656e5f657870:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; gen_exp

:spadfun:`gen_exp`\: (\ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), Union(\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , infinity), (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Factored <l466163746f726564>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  Record(ecs: \ :ref:`List <l4c697374>`\  \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), ecr: \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), ect: \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )) 
  to be documented later.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-74657374636f:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testco

:spadfun:`testco`\: (\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746370:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testcp

:spadfun:`testcp`\: (\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746378:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testcx

:spadfun:`testcx`\: (\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746632:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testf2

:spadfun:`testf2`\: (\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> Record(Qt: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), Rt: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen))) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746667:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testfg

:spadfun:`testfg`\: (\ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Factored <l466163746f726564>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-74657374666e:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testfn

:spadfun:`testfn`\: (\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Factored <l466163746f726564>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-74657374666f:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testfo

:spadfun:`testfo`\: (\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Factored <l466163746f726564>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`String <l537472696e67>`\ ) -> Union(\ :ref:`List <l4c697374>`\  Record(op: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), ram: \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), expart: \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), \ :ref:`List <l4c697374>`\  Union(\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), Record(ope: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), dext: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , alpha: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , rami: \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )))) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746672:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testfr

:spadfun:`testfr`\: (\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Factored <l466163746f726564>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`String <l537472696e67>`\ ) -> Union(\ :ref:`List <l4c697374>`\  Record(op: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), ram: \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), expart: \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), \ :ref:`List <l4c697374>`\  Union(\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), Record(ope: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), dext: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , alpha: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , rami: \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )))) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746774:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testgt

:spadfun:`testgt`\: (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Kernel <l4b65726e656c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746973:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testis

:spadfun:`testis`\: \ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746c63:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testlc

:spadfun:`testlc`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> Record(llc: \ :ref:`List <l4c697374>`\  \ :ref:`Stream <l53747265616d>`\  Record(k: \ :ref:`Integer <l496e7465676572>`\ , c: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), rlc: \ :ref:`List <l4c697374>`\  \ :ref:`Stream <l53747265616d>`\  Record(k: \ :ref:`Integer <l496e7465676572>`\ , c: \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746c6c:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testll

:spadfun:`testll`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> Record(laurl: \ :ref:`List <l4c697374>`\  \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), laurr: \ :ref:`List <l4c697374>`\  \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746c6e:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testln

:spadfun:`testln`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> Record(main: Record(Qt: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), Rt: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen))), nf: Record(Qt: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), Rt: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen))), error: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen))) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746c70:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testlp

:spadfun:`testlp`\: (\ :ref:`LinearOrdinaryDifferentialOperator1 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7231>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), Union(\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , infinity)) -> \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746c77:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testlw

:spadfun:`testlw`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Stream <l53747265616d>`\  Record(Qt: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), Rt: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen))) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573746e70:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testnp

:spadfun:`testnp`\: \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )) -> \ :ref:`List <l4c697374>`\  Record(point: Record(x: \ :ref:`Integer <l496e7465676572>`\ , y: \ :ref:`Integer <l496e7465676572>`\ ), slope: \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , npoly: \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573747064:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testpd

:spadfun:`testpd`\: \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-74657374726f:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testro

:spadfun:`testro`\: (\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573747362:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testsb

:spadfun:`testsb`\: (Union(\ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)), \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ))) -> \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariateTaylorSeries <l556e69766172696174655461796c6f72536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen), \ :ref:`UnivariateLaurentSeries <l556e69766172696174654c617572656e74536572696573>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , var, cen)) 
  test function.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72466163746f72697a657232-746573747363:

.. index::
   pair: LinearOrdinaryDifferentialOperatorFactorizer2; testsc

:spadfun:`testsc`\: (\ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`LinearOrdinaryDifferentialOperator3 <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7233>`\ (\ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (var, \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )), \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Factored <l466163746f726564>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  \ :ref:`Expression <l45787072657373696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  test function.


