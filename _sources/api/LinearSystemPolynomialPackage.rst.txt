.. index:: LinearSystemPolynomialPackage

.. _l4c696e65617253797374656d506f6c796e6f6d69616c5061636b616765:

LinearSystemPolynomialPackage(R, E, OV, P)
==========================================

:viewcode:`solvelin.spad line 154 <solvelin.spad#L154>` :editcode:`[edit on github] <solvelin.spad#L154>`

* R: \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 

* E: \ :ref:`OrderedAbelianMonoidSup <l4f7264657265644162656c69616e4d6f6e6f6964537570>`\ 

* OV: \ :ref:`OrderedSet <l4f726465726564536574>`\ 

* P: \ :ref:`PolynomialCategory <l506f6c796e6f6d69616c43617465676f7279>`\ (R, E, OV)


this package finds the solutions of linear systems presented as a list of polynomials.


.. _l4c696e65617253797374656d506f6c796e6f6d69616c5061636b616765-696e746f4d6174726978:

.. index::
   pair: LinearSystemPolynomialPackage; intoMatrix

:spadfun:`intoMatrix`\: (\ :ref:`List <l4c697374>`\  P, \ :ref:`List <l4c697374>`\  OV) -> Record(mat: \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`Fraction <l4672616374696f6e>`\  P, vec: \ :ref:`Vector <l566563746f72>`\  \ :ref:`Fraction <l4672616374696f6e>`\  P) 
  \ ``intoMatrix(lp, lvar)``\  converts linear in symbols lvar system of polynomials \ ``lp``\  = 0 into matrix form

.. _l4c696e65617253797374656d506f6c796e6f6d69616c5061636b616765-6c696e536f6c7665:

.. index::
   pair: LinearSystemPolynomialPackage; linSolve

:spadfun:`linSolve`\: (\ :ref:`List <l4c697374>`\  P, \ :ref:`List <l4c697374>`\  OV) -> Record(particular: Union(\ :ref:`Vector <l566563746f72>`\  \ :ref:`Fraction <l4672616374696f6e>`\  P, failed), basis: \ :ref:`List <l4c697374>`\  \ :ref:`Vector <l566563746f72>`\  \ :ref:`Fraction <l4672616374696f6e>`\  P) 
  \ ``linSolve(lp, lvar)``\  finds the solutions of the linear system of polynomials \ ``lp``\  = 0 with respect to the list of symbols lvar.


