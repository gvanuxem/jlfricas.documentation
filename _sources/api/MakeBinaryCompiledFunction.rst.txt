.. index:: MakeBinaryCompiledFunction

.. _l4d616b6542696e617279436f6d70696c656446756e6374696f6e:

MakeBinaryCompiledFunction(S, D1, D2, I)
========================================

:viewcode:`mkfunc.spad line 302 <mkfunc.spad#L302>` :editcode:`[edit on github] <mkfunc.spad#L302>`

* S: \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 

* D1: \ :ref:`Type <l54797065>`\ 

* D2: \ :ref:`Type <l54797065>`\ 

* I: \ :ref:`Type <l54797065>`\ 


transforms top-level objects into compiled functions.


.. _l4d616b6542696e617279436f6d70696c656446756e6374696f6e-62696e61727946756e6374696f6e:

.. index::
   pair: MakeBinaryCompiledFunction; binaryFunction

:spadfun:`binaryFunction`\: \ :ref:`Symbol <l53796d626f6c>`\  -> (D1, D2) -> I 
  \ ``binaryFunction(s)``\  is a local function

.. _l4d616b6542696e617279436f6d70696c656446756e6374696f6e-636f6d70696c656446756e6374696f6e:

.. index::
   pair: MakeBinaryCompiledFunction; compiledFunction

:spadfun:`compiledFunction`\: (S, \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Symbol <l53796d626f6c>`\ ) -> (D1, D2) -> I 
  \ ``compiledFunction(expr, x, y)``\  returns a function \ ``f: (D1, D2) -> I``\  defined by \ ``f(x, y) == expr``\ . Function \ ``f``\  is compiled and directly applicable to objects of type \ ``(D1, D2)``\ 


