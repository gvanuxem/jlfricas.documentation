.. index:: QuasiAlgebraicSet2

.. _l5175617369416c6765627261696353657432:

QuasiAlgebraicSet2 vl
=====================

:viewcode:`qalgset.spad line 186 <qalgset.spad#L186>` :editcode:`[edit on github] <qalgset.spad#L186>`

* vl: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ 


\ :ref:`QuasiAlgebraicSet2 <l5175617369416c6765627261696353657432>`\  adds a function \ :spadfun:`radicalSimplify`\  which uses \ :ref:`IdealDecompositionPackage <l496465616c4465636f6d706f736974696f6e5061636b616765>`\  to simplify the representation of a quasi-algebraic set. A quasi-algebraic set is the intersection of a Zariski closed set, defined as the common zeros of a given list of polynomials (the defining polynomials for equations), and a principal Zariski open set, defined as the complement of the common zeros of a polynomial \ ``f``\  (the defining polynomial for the inequation). Quasi-algebraic sets are implemented in the domain \ :ref:`QuasiAlgebraicSet <l5175617369416c67656272616963536574>`\ , where two simplification routines are provided: \ :spadfun:`idealSimplify`\  and \ :spadfun:`simplify`\ . The function \ :spadfun:`radicalSimplify`\  is added for comparison study only. Because the domain \ :ref:`IdealDecompositionPackage <l496465616c4465636f6d706f736974696f6e5061636b616765>`\  provides facilities for computing with radical ideals, it is necessary to restrict the ground ring to the domain Fraction Integer, and the polynomial ring to be of type \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ . The routine \ :spadfun:`radicalSimplify`\  uses these to compute groebner basis of radical ideals and is inefficient and restricted when compared to the two in \ :ref:`QuasiAlgebraicSet <l5175617369416c67656272616963536574>`\ .


.. _l5175617369416c6765627261696353657432-7261646963616c53696d706c696679:

.. index::
   pair: QuasiAlgebraicSet2; radicalSimplify

:spadfun:`radicalSimplify`\: \ :ref:`QuasiAlgebraicSet <l5175617369416c67656272616963536574>`\ (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`OrderedVariableList <l4f7264657265645661726961626c654c697374>`\  vl, \ :ref:`DirectProduct <l44697265637450726f64756374>`\ (# vl, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (vl, \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )) -> \ :ref:`QuasiAlgebraicSet <l5175617369416c67656272616963536574>`\ (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`OrderedVariableList <l4f7264657265645661726961626c654c697374>`\  vl, \ :ref:`DirectProduct <l44697265637450726f64756374>`\ (# vl, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ), \ :ref:`DistributedMultivariatePolynomial <l44697374726962757465644d756c746976617269617465506f6c796e6f6d69616c>`\ (vl, \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )) 
  \ ``radicalSimplify(s)``\  returns a different and presumably simpler representation of \ ``s``\  with the defining polynomials for the equations forming a groebner basis, and the defining polynomial for the inequation reduced with respect to the basis, using using groebner basis of radical ideals


