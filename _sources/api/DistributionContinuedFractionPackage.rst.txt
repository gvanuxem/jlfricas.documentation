.. index:: DistributionContinuedFractionPackage

.. _l446973747269627574696f6e436f6e74696e7565644672616374696f6e5061636b616765:

DistributionContinuedFractionPackage(R, z)
==========================================

:viewcode:`distro.spad line 1070 <distro.spad#L1070>` :editcode:`[edit on github] <distro.spad#L1070>`

* R: \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 

* z: \ :ref:`Symbol <l53796d626f6c>`\ 


A package to compute Jacobi continued fractions of Cauchy transforms.


.. _l446973747269627574696f6e436f6e74696e7565644672616374696f6e5061636b616765-4a436f6e74696e7565644672616374696f6e:

.. index::
   pair: DistributionContinuedFractionPackage; JContinuedFraction

:spadfun:`JContinuedFraction`\: (\ :ref:`Distribution <l446973747269627574696f6e>`\  R, \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (z, \ :ref:`Fraction <l4672616374696f6e>`\  R)) -> \ :ref:`ContinuedFraction <l436f6e74696e7565644672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (z, \ :ref:`Fraction <l4672616374696f6e>`\  R) if R hasn't \ :ref:`Field <l4669656c64>`\  and R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 
  \ ``JContinuedFraction(d, z)``\  returns the Cauchy transform as a continued fraction at \ ``z``\ .


.. index::
   pair: DistributionContinuedFractionPackage; JContinuedFraction

:spadfun:`JContinuedFraction`\: (\ :ref:`Distribution <l446973747269627574696f6e>`\  R, \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (z, R)) -> \ :ref:`ContinuedFraction <l436f6e74696e7565644672616374696f6e>`\  \ :ref:`UnivariatePolynomial <l556e6976617269617465506f6c796e6f6d69616c>`\ (z, R) if R has \ :ref:`Field <l4669656c64>`\ 
  \ ``JContinuedFraction(d, z)``\  returns the Cauchy transform as a continued fraction at \ ``z``\ .


