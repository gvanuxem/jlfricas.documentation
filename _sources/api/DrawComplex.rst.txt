.. index:: DrawComplex

.. _l44726177436f6d706c6578:

DrawComplex
===========

:viewcode:`drawpak.spad line 1 <drawpak.spad#L1>` :editcode:`[edit on github] <drawpak.spad#L1>`


\ :ref:`DrawComplex <l44726177436f6d706c6578>`\  provides some facilities for drawing complex functions.


.. _l44726177436f6d706c6578-64726177436f6d706c6578:

.. index::
   pair: DrawComplex; drawComplex

:spadfun:`drawComplex`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\  -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , \ :ref:`Segment <l5365676d656e74>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , \ :ref:`Segment <l5365676d656e74>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , \ :ref:`Boolean <l426f6f6c65616e>`\ ) -> \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\  
  \ ``drawComplex(f, rRange, iRange, arrows?)``\  draws a complex function as a height field. It uses the complex norm as the height and the complex argument as the color. It will optionally draw arrows on the surface indicating the direction of the complex value.  Sample call: \ ``f z == exp(1/z)``\  \ ``drawComplex(f, 0.3..3, 0..2*\%pi, false)``\  Parameter descriptions: \ ``f:``\  the function to draw \ ``rRange``\  : the range of the real values \ ``iRange``\  : the range of imaginary values arrows? : a flag indicating whether to draw the phase arrows for \ ``f``\  Call the functions \ :ref:`setRealSteps <l44726177436f6d706c6578-7365745265616c5374657073>`\  and \ :ref:`setImagSteps <l44726177436f6d706c6578-736574496d61675374657073>`\  to change the number of steps used in each direction.

.. _l44726177436f6d706c6578-64726177436f6d706c6578566563746f724669656c64:

.. index::
   pair: DrawComplex; drawComplexVectorField

:spadfun:`drawComplexVectorField`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\  -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , \ :ref:`Segment <l5365676d656e74>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , \ :ref:`Segment <l5365676d656e74>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ ) -> \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\  
  \ ``drawComplexVectorField(f, rRange, iRange)``\  draws a complex vector field using arrows on the \ ``x--y``\  plane. These vector fields should be viewed from the top by pressing the "XY" translate button on the 3-\ ``d``\  viewport control panel.  Sample call: \ ``f z == sin z``\  \ ``drawComplexVectorField(f, -2..2, -2..2)``\  Parameter descriptions: \ ``f``\  : the function to draw \ ``rRange``\  : the range of the real values iRange : the range of the imaginary values Call the functions \ :ref:`setRealSteps <l44726177436f6d706c6578-7365745265616c5374657073>`\  and \ :ref:`setImagSteps <l44726177436f6d706c6578-736574496d61675374657073>`\  to change the number of steps used in each direction.

.. _l44726177436f6d706c6578-736574436c697056616c7565:

.. index::
   pair: DrawComplex; setClipValue

:spadfun:`setClipValue`\: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\  -> \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\  
  \ ``setClipValue(x)``\  sets to \ ``x``\  the maximum value to plot when drawing complex functions. Returns \ ``x``\ .

.. _l44726177436f6d706c6578-736574496d61675374657073:

.. index::
   pair: DrawComplex; setImagSteps

:spadfun:`setImagSteps`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``setImagSteps(i)``\  sets to \ ``i``\  the number of steps to use in the imaginary direction when drawing complex functions. Returns \ ``i``\ .

.. _l44726177436f6d706c6578-7365745265616c5374657073:

.. index::
   pair: DrawComplex; setRealSteps

:spadfun:`setRealSteps`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``setRealSteps(i)``\  sets to \ ``i``\  the number of steps to use in the real direction when drawing complex functions. Returns \ ``i``\ .


