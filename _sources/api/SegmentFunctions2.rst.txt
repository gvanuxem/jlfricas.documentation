.. index:: SegmentFunctions2

.. _l5365676d656e7446756e6374696f6e7332:

SegmentFunctions2(R, S)
=======================

:viewcode:`seg.spad line 176 <seg.spad#L176>` :editcode:`[edit on github] <seg.spad#L176>`

* R: \ :ref:`Type <l54797065>`\ 

* S: \ :ref:`Type <l54797065>`\ 


This package provides operations for mapping functions onto segments.


.. _l5365676d656e7446756e6374696f6e7332-6d6170:

.. index::
   pair: SegmentFunctions2; map

:spadfun:`map`\: (R -> S, \ :ref:`Segment <l5365676d656e74>`\  R) -> \ :ref:`List <l4c697374>`\  S if R has \ :ref:`OrderedRing <l4f72646572656452696e67>`\ 
  \ ``map(f, s)``\  expands the segment \ ``s``\ , applying \ ``f``\  to each value. For example, if \ ``s = l..h by k``\ , then the list \ ``[f(l), f(l+k), ..., f(lN)]``\  is computed, where \ ``lN <= h < lN+k``\ .


.. index::
   pair: SegmentFunctions2; map

:spadfun:`map`\: (R -> S, \ :ref:`Segment <l5365676d656e74>`\  R) -> \ :ref:`Segment <l5365676d656e74>`\  S 
  \ ``map(f, l..h)``\  returns a new segment \ ``f(l)..f(h)``\ .


