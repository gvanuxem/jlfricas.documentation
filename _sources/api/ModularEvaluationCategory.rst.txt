.. index:: ModularEvaluationCategory

.. _l4d6f64756c61724576616c756174696f6e43617465676f7279:

ModularEvaluationCategory(PT, MP)
=================================

:viewcode:`evalut.spad line 177 <evalut.spad#L177>` :editcode:`[edit on github] <evalut.spad#L177>`

* PT: \ :ref:`Type <l54797065>`\ 

* MP: \ :ref:`Type <l54797065>`\ 


ModularEvaluationCategory(\ ``PT``\ , \ ``MP``\ ) defines interface to evaluation functions for \ ``ModularAlgebraicGcd2``\ .


.. _l4d6f64756c61724576616c756174696f6e43617465676f7279-646567726565:

.. index::
   pair: ModularEvaluationCategory; degree

:spadfun:`degree`\: (MP, \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``degree(p, v)``\  computes degree of \ ``p``\  with respect to \ ``v``\ .

.. _l4d6f64756c61724576616c756174696f6e43617465676f7279-6576616c31:

.. index::
   pair: ModularEvaluationCategory; eval1

:spadfun:`eval1`\: (MP, \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Integer <l496e7465676572>`\ , Record(prime: \ :ref:`Integer <l496e7465676572>`\ , eval1coeffbuf: \ :ref:`U32Vector <l553332566563746f72>`\ , eval1expbuf: \ :ref:`SortedExponentVector <l536f727465644578706f6e656e74566563746f72>`\ )) -> Union(MP, failed) 
  \ ``eval1(p, v, r, pss)``\  evaluates \ ``p``\  with respect to single variable \ ``v``\  at \ ``r``\ . \ ``pss``\  is global state.

.. _l4d6f64756c61724576616c756174696f6e43617465676f7279-6c646567726565:

.. index::
   pair: ModularEvaluationCategory; ldegree

:spadfun:`ldegree`\: (PT, \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``ldegree(p, v)``\  computes degree of \ ``p``\  with respect to \ ``v``\ . \ ``v``\  must be one of auxiliary variables and must be lexicographically first variable which appears in \ ``p``\ . Moreover, \ ``p``\  must be a polynomial in \ ``v``\  (not a rational function).

.. _l4d6f64756c61724576616c756174696f6e43617465676f7279-6d6f6470726564756374696f6e:

.. index::
   pair: ModularEvaluationCategory; modpreduction

:spadfun:`modpreduction`\: (MP, \ :ref:`Integer <l496e7465676572>`\ ) -> Union(MP, failed) 
  \ ``modpreduction(p, q)``\  reduces all coefficients of \ ``p``\  modulo \ ``q``\ .

.. _l4d6f64756c61724576616c756174696f6e43617465676f7279-73756273745f76617273:

.. index::
   pair: ModularEvaluationCategory; subst_vars

:spadfun:`subst_vars`\: (PT, \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ ) -> MP 
  \ ``subst_vars(p, lv1, lv2)``\  substitutes variables from list \ ``lv2``\  for corresponding variables from \ ``lv1``\ .

.. _l4d6f64756c61724576616c756174696f6e43617465676f7279-747269616c5f6469766973696f6e:

.. index::
   pair: ModularEvaluationCategory; trial_division

:spadfun:`trial_division`\: (MP, \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  MP, \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``trial_division(p, q, lm, v, lz)``\  checks if \ ``p``\  is divisible by \ ``q``\ . \ ``lm``\  is a list of defining equations for algebraic parameters, \ ``v``\  is main variable, \ ``lz``\  is the list of algebraic parameters.


