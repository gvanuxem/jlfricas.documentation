.. index:: GradedModule

.. _l4772616465644d6f64756c65:

GradedModule(R, E)
==================

:viewcode:`carten.spad line 1 <carten.spad#L1>` :editcode:`[edit on github] <carten.spad#L1>`

* R: \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 

* E: \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


GradedModule(\ ``R``\ , \ ``E``\ ) denotes ``E-graded \ ``R``\ -module\ ``''``\ , i.e. collection of \ ``R``\ -modules indexed by an abelian monoid \ ``E``\ . An element \ ``g``\  of \ ``G[s]``\  for some specific \ ``s``\  in \ ``E``\  is said to be an element of \ ``G``\  with \ *degree*\  \ ``s``\ . Sums are defined in each module \ ``G[s]``\  so two elements of \ ``G``\  have a sum if they have the same degree.   Morphisms can be defined and composed by degree to give the mathematical category of graded modules.


.. _l4772616465644d6f64756c65-30:

.. index::
   pair: GradedModule; 0

:spadfun:`0`\: % 
  0 denotes the zero of degree 0.

.. _l4772616465644d6f64756c65-2a:

.. index::
   pair: GradedModule; *

:spadfun:`\*`\: (%, R) -> % 
  \ ``g*r``\  is right module multiplication.


.. index::
   pair: GradedModule; *

:spadfun:`\*`\: (R, %) -> % 
  \ ``r*g``\  is left module multiplication.

.. _l4772616465644d6f64756c65-2b:

.. index::
   pair: GradedModule; +

:spadfun:`+`\: (%, %) -> % 
  \ ``g+h``\  is the sum of \ ``g``\  and \ ``h``\  in the module of elements of the same degree as \ ``g``\  and \ ``h``\ . Error: if \ ``g``\  and \ ``h``\  have different degrees.

.. _l4772616465644d6f64756c65-2d:

.. index::
   pair: GradedModule; -

:spadfun:`-`\: % -> % 
  \ ``-g``\  is the additive inverse of \ ``g``\  in the module of elements of the same grade as \ ``g``\ .


.. index::
   pair: GradedModule; -

:spadfun:`-`\: (%, %) -> % 
  \ ``g-h``\  is the difference of \ ``g``\  and \ ``h``\  in the module of elements of the same degree as \ ``g``\  and \ ``h``\ . Error: if \ ``g``\  and \ ``h``\  have different degrees.

.. _l4772616465644d6f64756c65-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4772616465644d6f64756c65-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4772616465644d6f64756c65-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l4772616465644d6f64756c65-646567726565:

.. index::
   pair: GradedModule; degree

:spadfun:`degree`\: % -> E 
  \ ``degree(g)``\  names the degree of \ ``g``\ . The set of all elements of a given degree form an \ ``R``\ -module.

.. _l4772616465644d6f64756c65-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

