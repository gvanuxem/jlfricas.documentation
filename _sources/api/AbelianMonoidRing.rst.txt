.. index:: AbelianMonoidRing

.. _l4162656c69616e4d6f6e6f696452696e67:

AbelianMonoidRing(R, E)
=======================

:viewcode:`polycat.spad line 1 <polycat.spad#L1>` :editcode:`[edit on github] <polycat.spad#L1>`

* R: Join(\ :ref:`SemiRng <l53656d69526e67>`\ , \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ )

* E: \ :ref:`OrderedAbelianMonoid <l4f7264657265644162656c69616e4d6f6e6f6964>`\ 


Abelian monoid ring elements (not necessarily of finite support) of this ring are of the form formal SUM (r_i * e_i) where the r_i are coefficients and the e_i, elements of the ordered abelian monoid, are thought of as exponents or monomials. The monomials commute with each other, but in general do not commute with the coefficients (which themselves may or may not be commutative). See \ :ref:`FiniteAbelianMonoidRing <l46696e6974654162656c69616e4d6f6e6f696452696e67>`\  for the case of finite support. A useful common model for polynomials and power series. Conceptually at least, only the non-zero terms are ever operated on.


.. _l4162656c69616e4d6f6e6f696452696e67-30:

\ :ref:`0 <l4162656c69616e4d6f6e6f6964-30>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-31:

\ :ref:`1 <l4d61676d6157697468556e6974-31>`\ \: % if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-2a:

\ :ref:`\* <l4d61676d61-2a>`\ \: (%, %) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 


\ :ref:`\* <l52696768744d6f64756c65-2a>`\ \: (%, \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> % if R has \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 
  from \ :ref:`RightModule <l52696768744d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 


\ :ref:`\* <l52696768744d6f64756c65-2a>`\ \: (%, R) -> % 
  from \ :ref:`RightModule <l52696768744d6f64756c65>`\  R


\ :ref:`\* <l4c6566744d6f64756c65-2a>`\ \: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , %) -> % if R has \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 
  from \ :ref:`LeftModule <l4c6566744d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 


\ :ref:`\* <l4162656c69616e47726f7570-2a>`\ \: (\ :ref:`Integer <l496e7465676572>`\ , %) -> % if % has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\  or R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`\* <l4162656c69616e4d6f6e6f6964-2a>`\ \: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`\* <l4162656c69616e53656d6947726f7570-2a>`\ \: (\ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 


\ :ref:`\* <l4c6566744d6f64756c65-2a>`\ \: (R, %) -> % 
  from \ :ref:`LeftModule <l4c6566744d6f64756c65>`\  R

.. _l4162656c69616e4d6f6e6f696452696e67-2b:

\ :ref:`+ <l4162656c69616e53656d6947726f7570-2b>`\ \: (%, %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-2d:

\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: % -> % if % has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\  or R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: (%, %) -> % if % has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\  or R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-2f:

.. index::
   pair: AbelianMonoidRing; /

:spadfun:`/`\: (%, R) -> % if R has \ :ref:`Field <l4669656c64>`\ 
  \ ``p/c``\  divides \ ``p``\  by the coefficient \ ``c``\ .

.. _l4162656c69616e4d6f6e6f696452696e67-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-5e:

\ :ref:`^ <l4d61676d6157697468556e6974-5e>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`^ <l4d61676d61-5e>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-616e6e6968696c6174653f:

\ :ref:`annihilate? <l526e67-616e6e6968696c6174653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`Ring <l52696e67>`\ 
  from \ :ref:`Rng <l526e67>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-616e7469436f6d6d757461746f72:

\ :ref:`antiCommutator <l4e6f6e4173736f6369617469766553656d69526e67-616e7469436f6d6d757461746f72>`\ \: (%, %) -> % 
  from \ :ref:`NonAssociativeSemiRng <l4e6f6e4173736f6369617469766553656d69526e67>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-6173736f6369617465733f:

\ :ref:`associates? <l456e7469726552696e67-6173736f6369617465733f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 
  from \ :ref:`EntireRing <l456e7469726552696e67>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-6173736f636961746f72:

\ :ref:`associator <l4e6f6e4173736f63696174697665526e67-6173736f636961746f72>`\ \: (%, %, %) -> % if R has \ :ref:`Ring <l52696e67>`\ 
  from \ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-6368617261637465726973746963:

\ :ref:`characteristic <l4e6f6e4173736f6369617469766552696e67-6368617261637465726973746963>`\ \: () -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if R has \ :ref:`Ring <l52696e67>`\ 
  from \ :ref:`NonAssociativeRing <l4e6f6e4173736f6369617469766552696e67>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-636861727468526f6f74:

\ :ref:`charthRoot <l43686172616374657269737469634e6f6e5a65726f-636861727468526f6f74>`\ \: % -> Union(%, failed) if R has \ :ref:`CharacteristicNonZero <l43686172616374657269737469634e6f6e5a65726f>`\ 
  from \ :ref:`CharacteristicNonZero <l43686172616374657269737469634e6f6e5a65726f>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-636f656666696369656e74:

.. index::
   pair: AbelianMonoidRing; coefficient

:spadfun:`coefficient`\: (%, E) -> R 
  \ ``coefficient(p, e)``\  extracts the coefficient of the monomial with exponent \ ``e``\  from polynomial \ ``p``\ , or returns zero if exponent is not present.

.. _l4162656c69616e4d6f6e6f696452696e67-636f65726365:

\ :ref:`coerce <l416c6765627261-636f65726365>`\ \: % -> % if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\  or R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 
  from \ :ref:`Algebra <l416c6765627261>`\  %


\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


\ :ref:`coerce <l416c6765627261-636f65726365>`\ \: \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  -> % if R has \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 
  from \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 


\ :ref:`coerce <l4e6f6e4173736f6369617469766552696e67-636f65726365>`\ \: \ :ref:`Integer <l496e7465676572>`\  -> % if R has \ :ref:`Ring <l52696e67>`\ 
  from \ :ref:`NonAssociativeRing <l4e6f6e4173736f6369617469766552696e67>`\ 


\ :ref:`coerce <l416c6765627261-636f65726365>`\ \: R -> % if R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 
  from \ :ref:`Algebra <l416c6765627261>`\  R

.. _l4162656c69616e4d6f6e6f696452696e67-636f6d6d757461746f72:

\ :ref:`commutator <l4e6f6e4173736f63696174697665526e67-636f6d6d757461746f72>`\ \: (%, %) -> % if R has \ :ref:`Ring <l52696e67>`\ 
  from \ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-636f6e737472756374:

\ :ref:`construct <l496e646578656450726f6475637443617465676f7279-636f6e737472756374>`\ \: \ :ref:`List <l4c697374>`\  Record(k: E, c: R) -> % 
  from \ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E)

.. _l4162656c69616e4d6f6e6f696452696e67-636f6e7374727563744f726465726564:

\ :ref:`constructOrdered <l496e646578656450726f6475637443617465676f7279-636f6e7374727563744f726465726564>`\ \: \ :ref:`List <l4c697374>`\  Record(k: E, c: R) -> % 
  from \ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E)

.. _l4162656c69616e4d6f6e6f696452696e67-646567726565:

.. index::
   pair: AbelianMonoidRing; degree

:spadfun:`degree`\: % -> E 
  \ ``degree(p)``\  returns the maximum of the exponents of the terms of \ ``p``\ .

.. _l4162656c69616e4d6f6e6f696452696e67-657871756f:

\ :ref:`exquo <l456e7469726552696e67-657871756f>`\ \: (%, %) -> Union(%, failed) if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 
  from \ :ref:`EntireRing <l456e7469726552696e67>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-6c656164696e67436f656666696369656e74:

\ :ref:`leadingCoefficient <l496e646578656450726f6475637443617465676f7279-6c656164696e67436f656666696369656e74>`\ \: % -> R 
  from \ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E)

.. _l4162656c69616e4d6f6e6f696452696e67-6c656164696e674d6f6e6f6d69616c:

\ :ref:`leadingMonomial <l496e646578656450726f6475637443617465676f7279-6c656164696e674d6f6e6f6d69616c>`\ \: % -> % 
  from \ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E)

.. _l4162656c69616e4d6f6e6f696452696e67-6c656164696e67537570706f7274:

\ :ref:`leadingSupport <l496e646578656450726f6475637443617465676f7279-6c656164696e67537570706f7274>`\ \: % -> E 
  from \ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E)

.. _l4162656c69616e4d6f6e6f696452696e67-6c656164696e675465726d:

\ :ref:`leadingTerm <l496e646578656450726f6475637443617465676f7279-6c656164696e675465726d>`\ \: % -> Record(k: E, c: R) 
  from \ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E)

.. _l4162656c69616e4d6f6e6f696452696e67-6c656674506f776572:

\ :ref:`leftPower <l4d61676d6157697468556e6974-6c656674506f776572>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`leftPower <l4d61676d61-6c656674506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-6c6566745265636970:

\ :ref:`leftRecip <l4d61676d6157697468556e6974-6c6566745265636970>`\ \: % -> Union(%, failed) if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-6d6170:

\ :ref:`map <l496e646578656450726f6475637443617465676f7279-6d6170>`\ \: (R -> R, %) -> % 
  from \ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E)

.. _l4162656c69616e4d6f6e6f696452696e67-6d6f6e6f6d69616c3f:

\ :ref:`monomial? <l496e646578656450726f6475637443617465676f7279-6d6f6e6f6d69616c3f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E)

.. _l4162656c69616e4d6f6e6f696452696e67-6d6f6e6f6d69616c:

\ :ref:`monomial <l496e646578656450726f6475637443617465676f7279-6d6f6e6f6d69616c>`\ \: (R, E) -> % 
  from \ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E)

.. _l4162656c69616e4d6f6e6f696452696e67-6f6e653f:

\ :ref:`one? <l4d61676d6157697468556e6974-6f6e653f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-6f70706f736974653f:

\ :ref:`opposite? <l4162656c69616e4d6f6e6f6964-6f70706f736974653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-706c656e617279506f776572:

\ :ref:`plenaryPower <l4e6f6e4173736f63696174697665416c6765627261-706c656e617279506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % if R has \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  or R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\  or R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 
  from \ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  R

.. _l4162656c69616e4d6f6e6f696452696e67-7265636970:

\ :ref:`recip <l4d61676d6157697468556e6974-7265636970>`\ \: % -> Union(%, failed) if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-726564756374756d:

\ :ref:`reductum <l496e646578656450726f6475637443617465676f7279-726564756374756d>`\ \: % -> % 
  from \ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E)

.. _l4162656c69616e4d6f6e6f696452696e67-7269676874506f776572:

\ :ref:`rightPower <l4d61676d6157697468556e6974-7269676874506f776572>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`rightPower <l4d61676d61-7269676874506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-72696768745265636970:

\ :ref:`rightRecip <l4d61676d6157697468556e6974-72696768745265636970>`\ \: % -> Union(%, failed) if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-73616d706c65:

\ :ref:`sample <l4162656c69616e4d6f6e6f6964-73616d706c65>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-7375627472616374496643616e:

\ :ref:`subtractIfCan <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-7375627472616374496643616e>`\ \: (%, %) -> Union(%, failed) 
  from \ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-756e69743f:

\ :ref:`unit? <l456e7469726552696e67-756e69743f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 
  from \ :ref:`EntireRing <l456e7469726552696e67>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-756e697443616e6f6e6963616c:

\ :ref:`unitCanonical <l456e7469726552696e67-756e697443616e6f6e6963616c>`\ \: % -> % if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 
  from \ :ref:`EntireRing <l456e7469726552696e67>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-756e69744e6f726d616c:

\ :ref:`unitNormal <l456e7469726552696e67-756e69744e6f726d616c>`\ \: % -> Record(unit: %, canonical: %, associate: %) if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 
  from \ :ref:`EntireRing <l456e7469726552696e67>`\ 

.. _l4162656c69616e4d6f6e6f696452696e67-7a65726f3f:

\ :ref:`zero? <l4162656c69616e4d6f6e6f6964-7a65726f3f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\  if R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 

\ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\  

\ :ref:`AbelianProductCategory <l4162656c69616e50726f6475637443617465676f7279>`\  R 

\ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\  

\ :ref:`Algebra <l416c6765627261>`\  % if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\  or R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if R has \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 

\ :ref:`Algebra <l416c6765627261>`\  R if R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`BiModule <l42694d6f64756c65>`\ (%, %) 

\ :ref:`BiModule <l42694d6f64756c65>`\ (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) if R has \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 

\ :ref:`BiModule <l42694d6f64756c65>`\ (R, R) 

\ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\  

\ :ref:`CharacteristicNonZero <l43686172616374657269737469634e6f6e5a65726f>`\  if R has \ :ref:`CharacteristicNonZero <l43686172616374657269737469634e6f6e5a65726f>`\ 

\ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\  if R has \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ 

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\  or R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`CommutativeStar <l436f6d6d7574617469766553746172>`\  if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\  or R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`EntireRing <l456e7469726552696e67>`\  if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`IndexedProductCategory <l496e646578656450726f6475637443617465676f7279>`\ (R, E) 

\ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`LeftModule <l4c6566744d6f64756c65>`\  % 

\ :ref:`LeftModule <l4c6566744d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if R has \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 

\ :ref:`LeftModule <l4c6566744d6f64756c65>`\  R 

\ :ref:`Magma <l4d61676d61>`\  

\ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\  if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 

\ :ref:`Module <l4d6f64756c65>`\  % if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\  or R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`Module <l4d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if R has \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 

\ :ref:`Module <l4d6f64756c65>`\  R if R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`Monoid <l4d6f6e6f6964>`\  if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 

\ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  % if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\  or R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if R has \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 

\ :ref:`NonAssociativeAlgebra <l4e6f6e4173736f63696174697665416c6765627261>`\  R if R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`NonAssociativeRing <l4e6f6e4173736f6369617469766552696e67>`\  if R has \ :ref:`Ring <l52696e67>`\ 

\ :ref:`NonAssociativeRng <l4e6f6e4173736f63696174697665526e67>`\  if R has \ :ref:`Ring <l52696e67>`\ 

\ :ref:`NonAssociativeSemiRing <l4e6f6e4173736f6369617469766553656d6952696e67>`\  if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 

\ :ref:`NonAssociativeSemiRng <l4e6f6e4173736f6369617469766553656d69526e67>`\  

\ :ref:`noZeroDivisors <l6e6f5a65726f44697669736f7273>`\  if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`RightModule <l52696768744d6f64756c65>`\  % 

\ :ref:`RightModule <l52696768744d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\  if R has \ :ref:`Algebra <l416c6765627261>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ 

\ :ref:`RightModule <l52696768744d6f64756c65>`\  R 

\ :ref:`Ring <l52696e67>`\  if R has \ :ref:`Ring <l52696e67>`\ 

\ :ref:`Rng <l526e67>`\  if R has \ :ref:`Ring <l52696e67>`\ 

\ :ref:`SemiGroup <l53656d6947726f7570>`\  

\ :ref:`SemiRing <l53656d6952696e67>`\  if R has \ :ref:`SemiRing <l53656d6952696e67>`\ 

\ :ref:`SemiRng <l53656d69526e67>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

\ :ref:`TwoSidedRecip <l54776f53696465645265636970>`\  if R has \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\  or R has \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\  and % has \ :ref:`VariablesCommuteWithCoefficients <l5661726961626c6573436f6d6d75746557697468436f656666696369656e7473>`\ 

\ :ref:`unitsKnown <l756e6974734b6e6f776e>`\  if R has \ :ref:`Ring <l52696e67>`\ 

