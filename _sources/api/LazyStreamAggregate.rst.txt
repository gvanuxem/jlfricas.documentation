.. index:: LazyStreamAggregate

.. _l4c617a7953747265616d416767726567617465:

LazyStreamAggregate S
=====================

:viewcode:`stream.spad line 1 <stream.spad#L1>` :editcode:`[edit on github] <stream.spad#L1>`

* S: \ :ref:`Type <l54797065>`\ 


LazyStreamAggregate is the category of streams with lazy evaluation. It is understood that the function 'empty?' will cause lazy evaluation if necessary to determine if there are entries. Functions which call 'empty?', e.g. 'first' and 'rest', will also cause lazy evaluation if necessary. Elements of LazyStreamAggregate are computed only when strictly needed. Lazy computation means that potential errors are delayed, so errors are detected later than in case of normal (eager) evaluation used by other aggregates. In some cases computation that would signal error when using eager evaluation can succeed when using lazy evaluation.


.. _l4c617a7953747265616d416767726567617465-23:

\ :ref:`# <l416767726567617465-23>`\ \: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4c617a7953747265616d416767726567617465-3c3d:

\ :ref:`<= <l5061727469616c4f72646572-3c3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l4c617a7953747265616d416767726567617465-3c:

\ :ref:`< <l5061727469616c4f72646572-3c>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l4c617a7953747265616d416767726567617465-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\  or S has \ :ref:`Hashable <l4861736861626c65>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\  or S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4c617a7953747265616d416767726567617465-3e3d:

\ :ref:`>= <l5061727469616c4f72646572-3e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l4c617a7953747265616d416767726567617465-3e:

\ :ref:`> <l5061727469616c4f72646572-3e>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`PartialOrder <l5061727469616c4f72646572>`\ 

.. _l4c617a7953747265616d416767726567617465-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\  or S has \ :ref:`Hashable <l4861736861626c65>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\  or S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4c617a7953747265616d416767726567617465-616e793f:

\ :ref:`any? <l486f6d6f67656e656f7573416767726567617465-616e793f>`\ \: (S -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6368696c643f:

\ :ref:`child? <l526563757273697665416767726567617465-6368696c643f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`BasicType <l426173696354797065>`\ 
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6368696c6472656e:

\ :ref:`children <l526563757273697665416767726567617465-6368696c6472656e>`\ \: % -> \ :ref:`List <l4c697374>`\  % 
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  if S has \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l4c617a7953747265616d416767726567617465-636f6d706c657465:

.. index::
   pair: LazyStreamAggregate; complete

:spadfun:`complete`\: % -> % 
  \ ``complete(st)``\  causes all entries of 'st' to be computed. this function should only be called on streams which are known to be finite.

.. _l4c617a7953747265616d416767726567617465-636f6e63617421:

\ :ref:`concat! <l556e617279526563757273697665416767726567617465-636f6e63617421>`\ \: (%, %) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`concat! <l556e617279526563757273697665416767726567617465-636f6e63617421>`\ \: (%, S) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`concat! <l556e617279526563757273697665416767726567617465-636f6e63617421>`\ \: \ :ref:`List <l4c697374>`\  % -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-636f6e636174:

\ :ref:`concat <l556e617279526563757273697665416767726567617465-636f6e636174>`\ \: (%, %) -> % 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`concat <l4c696e656172416767726567617465-636f6e636174>`\ \: (%, S) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`concat <l556e617279526563757273697665416767726567617465-636f6e636174>`\ \: (S, %) -> % 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`concat <l4c696e656172416767726567617465-636f6e636174>`\ \: \ :ref:`List <l4c697374>`\  % -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-636f6e737472756374:

\ :ref:`construct <l436f6c6c656374696f6e-636f6e737472756374>`\ \: \ :ref:`List <l4c697374>`\  S -> % 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  S

.. _l4c617a7953747265616d416767726567617465-636f6e76657274:

\ :ref:`convert <l436f6e7665727469626c65546f-636f6e76657274>`\ \: % -> \ :ref:`InputForm <l496e707574466f726d>`\  if S has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 
  from \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 

.. _l4c617a7953747265616d416767726567617465-636f7079:

\ :ref:`copy <l416767726567617465-636f7079>`\ \: % -> % 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4c617a7953747265616d416767726567617465-636f7079496e746f21:

\ :ref:`copyInto! <l4c696e656172416767726567617465-636f7079496e746f21>`\ \: (%, %, \ :ref:`Integer <l496e7465676572>`\ ) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-636f756e74:

\ :ref:`count <l486f6d6f67656e656f7573416767726567617465-636f756e74>`\ \: (S -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S


\ :ref:`count <l486f6d6f67656e656f7573416767726567617465-636f756e74>`\ \: (S, %) -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6379636c65456e747279:

\ :ref:`cycleEntry <l556e617279526563757273697665416767726567617465-6379636c65456e747279>`\ \: % -> % 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6379636c654c656e677468:

\ :ref:`cycleLength <l556e617279526563757273697665416767726567617465-6379636c654c656e677468>`\ \: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6379636c6553706c697421:

\ :ref:`cycleSplit! <l556e617279526563757273697665416767726567617465-6379636c6553706c697421>`\ \: % -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6379636c655461696c:

\ :ref:`cycleTail <l556e617279526563757273697665416767726567617465-6379636c655461696c>`\ \: % -> % 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6379636c69633f:

\ :ref:`cyclic? <l526563757273697665416767726567617465-6379636c69633f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-64656c657465:

\ :ref:`delete <l4c696e656172416767726567617465-64656c657465>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`delete <l4c696e656172416767726567617465-64656c657465>`\ \: (%, \ :ref:`UniversalSegment <l556e6976657273616c5365676d656e74>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-64697374616e6365:

\ :ref:`distance <l526563757273697665416767726567617465-64697374616e6365>`\ \: (%, %) -> \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-656c74:

\ :ref:`elt <l556e617279526563757273697665416767726567617465-656c74>`\ \: (%, first) -> S 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`elt <l456c7461626c65-656c74>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> S 
  from \ :ref:`Eltable <l456c7461626c65>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)


\ :ref:`elt <l456c7461626c65416767726567617465-656c74>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ , S) -> S 
  from \ :ref:`EltableAggregate <l456c7461626c65416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)


\ :ref:`elt <l556e617279526563757273697665416767726567617465-656c74>`\ \: (%, last) -> S 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`elt <l556e617279526563757273697665416767726567617465-656c74>`\ \: (%, rest) -> % 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`elt <l456c7461626c65-656c74>`\ \: (%, \ :ref:`UniversalSegment <l556e6976657273616c5365676d656e74>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`Eltable <l456c7461626c65>`\ (\ :ref:`UniversalSegment <l556e6976657273616c5365676d656e74>`\  \ :ref:`Integer <l496e7465676572>`\ , %)


\ :ref:`elt <l526563757273697665416767726567617465-656c74>`\ \: (%, value) -> S 
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-656d7074793f:

\ :ref:`empty? <l416767726567617465-656d7074793f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4c617a7953747265616d416767726567617465-656d707479:

\ :ref:`empty <l416767726567617465-656d707479>`\ \: () -> % 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4c617a7953747265616d416767726567617465-656e7472696573:

\ :ref:`entries <l496e6465786564416767726567617465-656e7472696573>`\ \: % -> \ :ref:`List <l4c697374>`\  S 
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)

.. _l4c617a7953747265616d416767726567617465-656e7472793f:

\ :ref:`entry? <l496e6465786564416767726567617465-656e7472793f>`\ \: (S, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)

.. _l4c617a7953747265616d416767726567617465-65713f:

\ :ref:`eq? <l416767726567617465-65713f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4c617a7953747265616d416767726567617465-6576616c:

\ :ref:`eval <l4576616c61626c65-6576616c>`\ \: (%, \ :ref:`Equation <l4571756174696f6e>`\  S) -> % if S has \ :ref:`Evalable <l4576616c61626c65>`\  S and S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`Evalable <l4576616c61626c65>`\  S


\ :ref:`eval <l4576616c61626c65-6576616c>`\ \: (%, \ :ref:`List <l4c697374>`\  \ :ref:`Equation <l4571756174696f6e>`\  S) -> % if S has \ :ref:`Evalable <l4576616c61626c65>`\  S and S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`Evalable <l4576616c61626c65>`\  S


\ :ref:`eval <l496e6e65724576616c61626c65-6576616c>`\ \: (%, \ :ref:`List <l4c697374>`\  S, \ :ref:`List <l4c697374>`\  S) -> % if S has \ :ref:`Evalable <l4576616c61626c65>`\  S and S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`InnerEvalable <l496e6e65724576616c61626c65>`\ (S, S)


\ :ref:`eval <l496e6e65724576616c61626c65-6576616c>`\ \: (%, S, S) -> % if S has \ :ref:`Evalable <l4576616c61626c65>`\  S and S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`InnerEvalable <l496e6e65724576616c61626c65>`\ (S, S)

.. _l4c617a7953747265616d416767726567617465-65766572793f:

\ :ref:`every? <l486f6d6f67656e656f7573416767726567617465-65766572793f>`\ \: (S -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6578706c69636974456e74726965733f:

.. index::
   pair: LazyStreamAggregate; explicitEntries?

:spadfun:`explicitEntries?`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``explicitEntries?(s)``\  returns \ ``true``\  if the stream \ ``s``\  has explicitly computed entries, and \ ``false``\  otherwise.

.. _l4c617a7953747265616d416767726567617465-6578706c696369746c79456d7074793f:

.. index::
   pair: LazyStreamAggregate; explicitlyEmpty?

:spadfun:`explicitlyEmpty?`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``explicitlyEmpty?(s)``\  returns \ ``true``\  if the stream is an (explicitly) empty stream. Note: this is a null test which will not cause lazy evaluation.

.. _l4c617a7953747265616d416767726567617465-6578706c696369746c7946696e6974653f:

\ :ref:`explicitlyFinite? <l53747265616d416767726567617465-6578706c696369746c7946696e6974653f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`StreamAggregate <l53747265616d416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-657874656e64:

.. index::
   pair: LazyStreamAggregate; extend

:spadfun:`extend`\: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  \ ``extend(st, n)``\  causes entries to be computed, if necessary, so that 'st' will have at least \ ``'n'``\  explicit entries or so that all entries of 'st' will be computed if 'st' is finite with length \ ``<=``\  \ ``n``\ .

.. _l4c617a7953747265616d416767726567617465-66696c6c21:

\ :ref:`fill! <l496e6465786564416767726567617465-66696c6c21>`\ \: (%, S) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)

.. _l4c617a7953747265616d416767726567617465-66696e64:

\ :ref:`find <l436f6c6c656374696f6e-66696e64>`\ \: (S -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> Union(S, failed) 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  S

.. _l4c617a7953747265616d416767726567617465-6669727374:

\ :ref:`first <l556e617279526563757273697665416767726567617465-6669727374>`\ \: % -> S 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`first <l556e617279526563757273697665416767726567617465-6669727374>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-66727374:

.. index::
   pair: LazyStreamAggregate; frst

:spadfun:`frst`\: % -> S 
  \ ``frst(s)``\  returns the first element of stream \ ``s``\ . Caution: this function should only be called after a \ ``empty?``\  test has been made since there is no error check.

.. _l4c617a7953747265616d416767726567617465-68617368:

\ :ref:`hash <l4861736861626c65-68617368>`\ \: % -> \ :ref:`SingleInteger <l53696e676c65496e7465676572>`\  if S has \ :ref:`Hashable <l4861736861626c65>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Hashable <l4861736861626c65>`\ 

.. _l4c617a7953747265616d416767726567617465-6861736855706461746521:

\ :ref:`hashUpdate! <l4861736861626c65-6861736855706461746521>`\ \: (\ :ref:`HashState <l486173685374617465>`\ , %) -> \ :ref:`HashState <l486173685374617465>`\  if S has \ :ref:`Hashable <l4861736861626c65>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Hashable <l4861736861626c65>`\ 

.. _l4c617a7953747265616d416767726567617465-696e6465783f:

\ :ref:`index? <l496e6465786564416767726567617465-696e6465783f>`\ \: (\ :ref:`Integer <l496e7465676572>`\ , %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)

.. _l4c617a7953747265616d416767726567617465-696e6469636573:

\ :ref:`indices <l496e6465786564416767726567617465-696e6469636573>`\ \: % -> \ :ref:`List <l4c697374>`\  \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)

.. _l4c617a7953747265616d416767726567617465-696e73657274:

\ :ref:`insert <l4c696e656172416767726567617465-696e73657274>`\ \: (%, %, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`insert <l4c696e656172416767726567617465-696e73657274>`\ \: (S, %, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6c617374:

\ :ref:`last <l556e617279526563757273697665416767726567617465-6c617374>`\ \: % -> S 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`last <l556e617279526563757273697665416767726567617465-6c617374>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4c617a7953747265616d416767726567617465-6c617a793f:

.. index::
   pair: LazyStreamAggregate; lazy?

:spadfun:`lazy?`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``lazy?(s)``\  returns \ ``true``\  if the first node of the stream \ ``s``\  is a lazy evaluation mechanism which could produce an additional entry to \ ``s``\ .

.. _l4c617a7953747265616d416767726567617465-6c617a794576616c75617465:

.. index::
   pair: LazyStreamAggregate; lazyEvaluate

:spadfun:`lazyEvaluate`\: % -> % 
  \ ``lazyEvaluate(s)``\  causes one lazy evaluation of stream \ ``s``\ . Caution: the first node must be a lazy evaluation mechanism (satisfies \ ``lazy?(s) = true``\ ) as there is no error check. Note: a call to this function may or may not produce an explicit first entry

.. _l4c617a7953747265616d416767726567617465-6c6561663f:

\ :ref:`leaf? <l526563757273697665416767726567617465-6c6561663f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6c6561766573:

\ :ref:`leaves <l526563757273697665416767726567617465-6c6561766573>`\ \: % -> \ :ref:`List <l4c697374>`\  S 
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6c6566745472696d:

\ :ref:`leftTrim <l4c696e656172416767726567617465-6c6566745472696d>`\ \: (%, S) -> % if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6c6573733f:

\ :ref:`less? <l416767726567617465-6c6573733f>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4c617a7953747265616d416767726567617465-6d617021:

\ :ref:`map! <l486f6d6f67656e656f7573416767726567617465-6d617021>`\ \: (S -> S, %) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6d6170:

\ :ref:`map <l4c696e656172416767726567617465-6d6170>`\ \: ((S, S) -> S, %, %) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`map <l486f6d6f67656e656f7573416767726567617465-6d6170>`\ \: (S -> S, %) -> % 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6d6178:

\ :ref:`max <l486f6d6f67656e656f7573416767726567617465-6d6178>`\ \: % -> S if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S


\ :ref:`max <l4f726465726564536574-6d6178>`\ \: (%, %) -> % if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`OrderedSet <l4f726465726564536574>`\ 


\ :ref:`max <l486f6d6f67656e656f7573416767726567617465-6d6178>`\ \: ((S, S) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> S if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6d6178496e646578:

\ :ref:`maxIndex <l496e6465786564416767726567617465-6d6178496e646578>`\ \: % -> \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)

.. _l4c617a7953747265616d416767726567617465-6d656d6265723f:

\ :ref:`member? <l486f6d6f67656e656f7573416767726567617465-6d656d6265723f>`\ \: (S, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6d656d62657273:

\ :ref:`members <l486f6d6f67656e656f7573416767726567617465-6d656d62657273>`\ \: % -> \ :ref:`List <l4c697374>`\  S if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6d65726765:

\ :ref:`merge <l4c696e656172416767726567617465-6d65726765>`\ \: (%, %) -> % if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`merge <l4c696e656172416767726567617465-6d65726765>`\ \: ((S, S) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %, %) -> % if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6d696e:

\ :ref:`min <l486f6d6f67656e656f7573416767726567617465-6d696e>`\ \: % -> S if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S


\ :ref:`min <l4f726465726564536574-6d696e>`\ \: (%, %) -> % if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`OrderedSet <l4f726465726564536574>`\ 

.. _l4c617a7953747265616d416767726567617465-6d696e496e646578:

\ :ref:`minIndex <l496e6465786564416767726567617465-6d696e496e646578>`\ \: % -> \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)

.. _l4c617a7953747265616d416767726567617465-6d6f72653f:

\ :ref:`more? <l416767726567617465-6d6f72653f>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4c617a7953747265616d416767726567617465-6e6577:

\ :ref:`new <l4c696e656172416767726567617465-6e6577>`\ \: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , S) -> % 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6e6f64653f:

\ :ref:`node? <l526563757273697665416767726567617465-6e6f64653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`BasicType <l426173696354797065>`\ 
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6e6f646573:

\ :ref:`nodes <l526563757273697665416767726567617465-6e6f646573>`\ \: % -> \ :ref:`List <l4c697374>`\  % 
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-6e756d6265724f66436f6d7075746564456e7472696573:

.. index::
   pair: LazyStreamAggregate; numberOfComputedEntries

:spadfun:`numberOfComputedEntries`\: % -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``numberOfComputedEntries(st)``\  returns the number of explicitly computed entries of stream \ ``st``\  which exist immediately prior to the time this function is called.

.. _l4c617a7953747265616d416767726567617465-7061727473:

\ :ref:`parts <l486f6d6f67656e656f7573416767726567617465-7061727473>`\ \: % -> \ :ref:`List <l4c697374>`\  S if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-706f736974696f6e:

\ :ref:`position <l4c696e656172416767726567617465-706f736974696f6e>`\ \: (S -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`Integer <l496e7465676572>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`position <l4c696e656172416767726567617465-706f736974696f6e>`\ \: (S, %) -> \ :ref:`Integer <l496e7465676572>`\  if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`position <l4c696e656172416767726567617465-706f736974696f6e>`\ \: (S, %, \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Integer <l496e7465676572>`\  if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-706f737369626c79496e66696e6974653f:

\ :ref:`possiblyInfinite? <l53747265616d416767726567617465-706f737369626c79496e66696e6974653f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`StreamAggregate <l53747265616d416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-71656c74:

\ :ref:`qelt <l456c7461626c65416767726567617465-71656c74>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> S 
  from \ :ref:`EltableAggregate <l456c7461626c65416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)

.. _l4c617a7953747265616d416767726567617465-71736574656c7421:

\ :ref:`qsetelt! <l456c7461626c65416767726567617465-71736574656c7421>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ , S) -> S if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`EltableAggregate <l456c7461626c65416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)

.. _l4c617a7953747265616d416767726567617465-71736574666972737421:

\ :ref:`qsetfirst! <l556e617279526563757273697665416767726567617465-71736574666972737421>`\ \: (%, S) -> S if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-717365747265737421:

\ :ref:`qsetrest! <l556e617279526563757273697665416767726567617465-717365747265737421>`\ \: (%, %) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-726564756365:

\ :ref:`reduce <l436f6c6c656374696f6e-726564756365>`\ \: ((S, S) -> S, %) -> S if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  S


\ :ref:`reduce <l436f6c6c656374696f6e-726564756365>`\ \: ((S, S) -> S, %, S) -> S if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  S


\ :ref:`reduce <l436f6c6c656374696f6e-726564756365>`\ \: ((S, S) -> S, %, S, S) -> S if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  S

.. _l4c617a7953747265616d416767726567617465-72656d6f7665:

.. index::
   pair: LazyStreamAggregate; remove

:spadfun:`remove`\: (S -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % 
  \ ``remove(f, st)``\  returns a stream consisting of those elements of stream st which do not satisfy the predicate \ ``f``\ . Note: \ ``remove(f, st) = [x for x in st | not f(x)]``\ .


\ :ref:`remove <l436f6c6c656374696f6e-72656d6f7665>`\ \: (S, %) -> % if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  S

.. _l4c617a7953747265616d416767726567617465-72656d6f76654475706c696361746573:

\ :ref:`removeDuplicates <l436f6c6c656374696f6e-72656d6f76654475706c696361746573>`\ \: % -> % if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Collection <l436f6c6c656374696f6e>`\  S

.. _l4c617a7953747265616d416767726567617465-72657374:

\ :ref:`rest <l556e617279526563757273697665416767726567617465-72657374>`\ \: % -> % 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`rest <l556e617279526563757273697665416767726567617465-72657374>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-7265766572736521:

\ :ref:`reverse! <l4c696e656172416767726567617465-7265766572736521>`\ \: % -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-72657665727365:

\ :ref:`reverse <l4c696e656172416767726567617465-72657665727365>`\ \: % -> % if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-72696768745472696d:

\ :ref:`rightTrim <l4c696e656172416767726567617465-72696768745472696d>`\ \: (%, S) -> % if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-727374:

.. index::
   pair: LazyStreamAggregate; rst

:spadfun:`rst`\: % -> % 
  \ ``rst(s)``\  returns a pointer to the next node of stream \ ``s``\ . Caution: this function should only be called after a \ ``empty?``\  test has been made since there is no error check.

.. _l4c617a7953747265616d416767726567617465-73616d706c65:

\ :ref:`sample <l416767726567617465-73616d706c65>`\ \: % 
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4c617a7953747265616d416767726567617465-7365636f6e64:

\ :ref:`second <l556e617279526563757273697665416767726567617465-7365636f6e64>`\ \: % -> S 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-73656c656374:

.. index::
   pair: LazyStreamAggregate; select

:spadfun:`select`\: (S -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % 
  \ ``select(f, st)``\  returns a stream consisting of those elements of stream st satisfying the predicate \ ``f``\ . Note: \ ``select(f, st) = [x for x in st | f(x)]``\ .

.. _l4c617a7953747265616d416767726567617465-7365746368696c6472656e21:

\ :ref:`setchildren! <l526563757273697665416767726567617465-7365746368696c6472656e21>`\ \: (%, \ :ref:`List <l4c697374>`\  %) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-736574656c7421:

\ :ref:`setelt! <l556e617279526563757273697665416767726567617465-736574656c7421>`\ \: (%, first, S) -> S if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`setelt! <l456c7461626c65416767726567617465-736574656c7421>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ , S) -> S if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`EltableAggregate <l456c7461626c65416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)


\ :ref:`setelt! <l556e617279526563757273697665416767726567617465-736574656c7421>`\ \: (%, last, S) -> S if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`setelt! <l556e617279526563757273697665416767726567617465-736574656c7421>`\ \: (%, rest, %) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S


\ :ref:`setelt! <l4c696e656172416767726567617465-736574656c7421>`\ \: (%, \ :ref:`UniversalSegment <l556e6976657273616c5365676d656e74>`\  \ :ref:`Integer <l496e7465676572>`\ , S) -> S if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`setelt! <l526563757273697665416767726567617465-736574656c7421>`\ \: (%, value, S) -> S if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-736574666972737421:

\ :ref:`setfirst! <l556e617279526563757273697665416767726567617465-736574666972737421>`\ \: (%, S) -> S if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-7365746c61737421:

\ :ref:`setlast! <l556e617279526563757273697665416767726567617465-7365746c61737421>`\ \: (%, S) -> S if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-7365747265737421:

\ :ref:`setrest! <l556e617279526563757273697665416767726567617465-7365747265737421>`\ \: (%, %) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-73657476616c756521:

\ :ref:`setvalue! <l526563757273697665416767726567617465-73657476616c756521>`\ \: (%, S) -> S if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-73697a653f:

\ :ref:`size? <l416767726567617465-73697a653f>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`Aggregate <l416767726567617465>`\ 

.. _l4c617a7953747265616d416767726567617465-736d616c6c65723f:

\ :ref:`smaller? <l436f6d70617261626c65-736d616c6c65723f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\  and S has \ :ref:`Comparable <l436f6d70617261626c65>`\  or S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`Comparable <l436f6d70617261626c65>`\ 

.. _l4c617a7953747265616d416767726567617465-736f727421:

\ :ref:`sort! <l4c696e656172416767726567617465-736f727421>`\ \: % -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\  and S has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`sort! <l4c696e656172416767726567617465-736f727421>`\ \: ((S, S) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-736f7274:

\ :ref:`sort <l4c696e656172416767726567617465-736f7274>`\ \: % -> % if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`sort <l4c696e656172416767726567617465-736f7274>`\ \: ((S, S) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> % if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-736f727465643f:

\ :ref:`sorted? <l4c696e656172416767726567617465-736f727465643f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S


\ :ref:`sorted? <l4c696e656172416767726567617465-736f727465643f>`\ \: ((S, S) -> \ :ref:`Boolean <l426f6f6c65616e>`\ , %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-73706c697421:

\ :ref:`split! <l556e617279526563757273697665416767726567617465-73706c697421>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-7377617021:

\ :ref:`swap! <l496e6465786564416767726567617465-7377617021>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Void <l566f6964>`\  if % has \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ 
  from \ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S)

.. _l4c617a7953747265616d416767726567617465-7461696c:

\ :ref:`tail <l556e617279526563757273697665416767726567617465-7461696c>`\ \: % -> % 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-7468697264:

\ :ref:`third <l556e617279526563757273697665416767726567617465-7468697264>`\ \: % -> S 
  from \ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-7472696d:

\ :ref:`trim <l4c696e656172416767726567617465-7472696d>`\ \: (%, S) -> % if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 
  from \ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S

.. _l4c617a7953747265616d416767726567617465-76616c7565:

\ :ref:`value <l526563757273697665416767726567617465-76616c7565>`\ \: % -> S 
  from \ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S


\ :ref:`Aggregate <l416767726567617465>`\  

\ :ref:`BasicType <l426173696354797065>`\  if S has \ :ref:`BasicType <l426173696354797065>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\  or S has \ :ref:`Hashable <l4861736861626c65>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\  or S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  if S has \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

\ :ref:`Collection <l436f6c6c656374696f6e>`\  S 

\ :ref:`Comparable <l436f6d70617261626c65>`\  if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\  or % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\  and S has \ :ref:`Comparable <l436f6d70617261626c65>`\ 

\ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\  if S has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 

\ :ref:`Eltable <l456c7461626c65>`\ (\ :ref:`Integer <l496e7465676572>`\ , S) 

\ :ref:`Eltable <l456c7461626c65>`\ (\ :ref:`UniversalSegment <l556e6976657273616c5365676d656e74>`\  \ :ref:`Integer <l496e7465676572>`\ , %) 

\ :ref:`EltableAggregate <l456c7461626c65416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S) 

\ :ref:`Evalable <l4576616c61626c65>`\  S if S has \ :ref:`Evalable <l4576616c61626c65>`\  S and S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`Hashable <l4861736861626c65>`\  if S has \ :ref:`Hashable <l4861736861626c65>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 

\ :ref:`HomogeneousAggregate <l486f6d6f67656e656f7573416767726567617465>`\  S 

\ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S) 

\ :ref:`InnerEvalable <l496e6e65724576616c61626c65>`\ (S, S) if S has \ :ref:`Evalable <l4576616c61626c65>`\  S and S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`LinearAggregate <l4c696e656172416767726567617465>`\  S 

\ :ref:`OrderedSet <l4f726465726564536574>`\  if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 

\ :ref:`PartialOrder <l5061727469616c4f72646572>`\  if S has \ :ref:`OrderedSet <l4f726465726564536574>`\  and % has \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ 

\ :ref:`RecursiveAggregate <l526563757273697665416767726567617465>`\  S 

\ :ref:`SetCategory <l53657443617465676f7279>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`StreamAggregate <l53747265616d416767726567617465>`\  S 

\ :ref:`UnaryRecursiveAggregate <l556e617279526563757273697665416767726567617465>`\  S 

