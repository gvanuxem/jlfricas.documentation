.. index:: RationalUnivariateRepresentationPackage

.. _l526174696f6e616c556e6976617269617465526570726573656e746174696f6e5061636b616765:

RationalUnivariateRepresentationPackage(R, ls)
==============================================

:viewcode:`zerodim.spad line 519 <zerodim.spad#L519>` :editcode:`[edit on github] <zerodim.spad#L519>`

* R: Join(\ :ref:`PolynomialFactorizationExplicit <l506f6c796e6f6d69616c466163746f72697a6174696f6e4578706c69636974>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ )

* ls: \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ 


A package for computing the rational univariate representation of a zero-dimensional algebraic variety given by a regular triangular set. This package is essentially an interface for the \ :ref:`InternalRationalUnivariateRepresentationPackage <l496e7465726e616c526174696f6e616c556e6976617269617465526570726573656e746174696f6e5061636b616765>`\  constructor. It is used in the \ :ref:`ZeroDimensionalSolvePackage <l5a65726f44696d656e73696f6e616c536f6c76655061636b616765>`\  for solving polynomial systems with finitely many solutions.


.. _l526174696f6e616c556e6976617269617465526570726573656e746174696f6e5061636b616765-727572:

.. index::
   pair: RationalUnivariateRepresentationPackage; rur

:spadfun:`rur`\: (\ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Boolean <l426f6f6c65616e>`\ ) -> \ :ref:`List <l4c697374>`\  Record(complexRoots: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  R, coordinates: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R) 
  \ ``rur(lp, univ?)``\  returns a rational univariate representation of \ ``lp``\ . This assumes that \ ``lp``\  defines a regular triangular \ ``ts``\  whose associated variety is zero-dimensional over \ ``R``\ . \ ``rur(lp, univ?)``\  returns a list of items \ ``[u, lc]``\  where \ ``u``\  is an irreducible univariate polynomial and each \ ``c``\  in \ ``lc``\  involves two variables: one from \ ``ls``\ , called the coordinate of \ ``c``\ , and an extra variable which represents any root of \ ``u``\ . Every root of \ ``u``\  leads to a tuple of values for the coordinates of \ ``lc``\ . Moreover, a point \ ``x``\  belongs to the variety associated with \ ``lp``\  iff there exists an item \ ``[u, lc]``\  in \ ``rur(lp, univ?)``\  and a root \ ``r``\  of \ ``u``\  such that \ ``x``\  is given by the tuple of values for the coordinates of \ ``lc``\  evaluated at \ ``r``\ . If \ ``univ?``\  is \ ``true``\  then each polynomial \ ``c``\  will have a constant leading coefficient \ ``w``\ .\ ``r``\ .\ ``t``\ . its coordinate. See the example which illustrates the \ :ref:`ZeroDimensionalSolvePackage <l5a65726f44696d656e73696f6e616c536f6c76655061636b616765>`\  package constructor.


.. index::
   pair: RationalUnivariateRepresentationPackage; rur

:spadfun:`rur`\: (\ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Boolean <l426f6f6c65616e>`\ , \ :ref:`Boolean <l426f6f6c65616e>`\ ) -> \ :ref:`List <l4c697374>`\  Record(complexRoots: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  R, coordinates: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R) 
  \ ``rur(lp, univ?, check?)``\  returns the same as \ ``rur(lp, true)``\ . Moreover, if \ ``check?``\  is \ ``true``\  then the result is checked.


.. index::
   pair: RationalUnivariateRepresentationPackage; rur

:spadfun:`rur`\: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R -> \ :ref:`List <l4c697374>`\  Record(complexRoots: \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  R, coordinates: \ :ref:`List <l4c697374>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R) 
  \ ``rur(lp)``\  returns the same as \ ``rur(lp, true)``\ 


