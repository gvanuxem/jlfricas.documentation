.. index:: AlgFactor

.. _l416c67466163746f72:

AlgFactor UP
============

:viewcode:`algfact.spad line 131 <algfact.spad#L131>` :editcode:`[edit on github] <algfact.spad#L131>`

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ 


Factorization of univariate polynomials with coefficients in \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ .


.. _l416c67466163746f72-646f75626c795472616e7369746976653f:

.. index::
   pair: AlgFactor; doublyTransitive?

:spadfun:`doublyTransitive?`\: UP -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``doublyTransitive?(p)``\  is \ ``true``\  if \ ``p``\  is irreducible over over the field \ ``K``\  generated by its coefficients, and if \ ``p(X) / (X - a)``\  is irreducible over \ ``K(a)``\  where \ ``p(a) = 0``\ .

.. _l416c67466163746f72-666163746f72:

.. index::
   pair: AlgFactor; factor

:spadfun:`factor`\: (UP, \ :ref:`List <l4c697374>`\  \ :ref:`AlgebraicNumber <l416c676562726169634e756d626572>`\ ) -> \ :ref:`Factored <l466163746f726564>`\  UP 
  \ ``factor(p, [a1, ..., an])``\  returns a prime factorisation of \ ``p``\  over the field generated by its coefficients and \ ``a1``\ , ..., an.


.. index::
   pair: AlgFactor; factor

:spadfun:`factor`\: UP -> \ :ref:`Factored <l466163746f726564>`\  UP 
  \ ``factor(p)``\  returns a prime factorisation of \ ``p``\  over the field generated by its coefficients.

.. _l416c67466163746f72-73706c6974:

.. index::
   pair: AlgFactor; split

:spadfun:`split`\: UP -> \ :ref:`Factored <l466163746f726564>`\  UP 
  \ ``split(p)``\  returns a prime factorisation of \ ``p``\  over its splitting field.


