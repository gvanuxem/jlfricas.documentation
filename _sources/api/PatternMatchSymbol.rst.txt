.. index:: PatternMatchSymbol

.. _l5061747465726e4d6174636853796d626f6c:

PatternMatchSymbol S
====================

:viewcode:`patmatch1.spad line 195 <patmatch1.spad#L195>` :editcode:`[edit on github] <patmatch1.spad#L195>`

* S: \ :ref:`SetCategory <l53657443617465676f7279>`\ 


This package provides pattern matching functions on symbols.


.. _l5061747465726e4d6174636853796d626f6c-7061747465726e4d61746368:

.. index::
   pair: PatternMatchSymbol; patternMatch

:spadfun:`patternMatch`\: (\ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Pattern <l5061747465726e>`\  S, \ :ref:`PatternMatchResult <l5061747465726e4d61746368526573756c74>`\ (S, \ :ref:`Symbol <l53796d626f6c>`\ )) -> \ :ref:`PatternMatchResult <l5061747465726e4d61746368526573756c74>`\ (S, \ :ref:`Symbol <l53796d626f6c>`\ ) 
  \ ``patternMatch(expr, pat, res)``\  matches the pattern \ ``pat``\  to the expression \ ``expr``\ ; res contains the variables of \ ``pat``\  which are already matched and their matches (necessary for recursion).


