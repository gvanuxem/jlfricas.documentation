.. index:: AlgebraPackage

.. _l416c67656272615061636b616765:

AlgebraPackage(R, A)
====================

:viewcode:`naalg.spad line 594 <naalg.spad#L594>` :editcode:`[edit on github] <naalg.spad#L594>`

* R: \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 

* A: \ :ref:`FramedNonAssociativeAlgebra <l4672616d65644e6f6e4173736f63696174697665416c6765627261>`\  R


AlgebraPackage assembles a variety of useful functions for general algebras.


.. _l416c67656272615061636b616765-6261736973:

.. index::
   pair: AlgebraPackage; basis

:spadfun:`basis`\: \ :ref:`Vector <l566563746f72>`\  A -> \ :ref:`Vector <l566563746f72>`\  A if R has \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 
  \ ``basis(va)``\  selects a basis from the elements of \ ``va``\ .

.. _l416c67656272615061636b616765-62617369734f6643656e746572:

.. index::
   pair: AlgebraPackage; basisOfCenter

:spadfun:`basisOfCenter`\: () -> \ :ref:`List <l4c697374>`\  A 
  \ ``basisOfCenter()``\  returns a basis of the space of all \ ``x``\  of \ ``A``\  satisfying \ ``commutator(x, a) = 0``\  and \ ``associator(x, a, b) = associator(a, x, b) = associator(a, b, x) = 0``\  for all \ ``a``\ , \ ``b``\  in \ ``A``\ .

.. _l416c67656272615061636b616765-62617369734f6643656e74726f6964:

.. index::
   pair: AlgebraPackage; basisOfCentroid

:spadfun:`basisOfCentroid`\: () -> \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``basisOfCentroid()``\  returns a basis of the centroid, i.e. the endomorphism ring of \ ``A``\  considered as \ ``(A, A)``\ -bimodule.

.. _l416c67656272615061636b616765-62617369734f66436f6d6d7574696e67456c656d656e7473:

.. index::
   pair: AlgebraPackage; basisOfCommutingElements

:spadfun:`basisOfCommutingElements`\: () -> \ :ref:`List <l4c697374>`\  A 
  \ ``basisOfCommutingElements()``\  returns a basis of the space of all \ ``x``\  of \ ``A``\  satisfying \ ``0 = commutator(x, a)``\  for all \ ``a``\  in \ ``A``\ .

.. _l416c67656272615061636b616765-62617369734f664c656674416e6e6968696c61746f72:

.. index::
   pair: AlgebraPackage; basisOfLeftAnnihilator

:spadfun:`basisOfLeftAnnihilator`\: A -> \ :ref:`List <l4c697374>`\  A 
  \ ``basisOfLeftAnnihilator(a)``\  returns a basis of the space of all \ ``x``\  of \ ``A``\  satisfying \ ``0 = x*a``\ .

.. _l416c67656272615061636b616765-62617369734f664c6566744e75636c657573:

.. index::
   pair: AlgebraPackage; basisOfLeftNucleus

:spadfun:`basisOfLeftNucleus`\: () -> \ :ref:`List <l4c697374>`\  A 
  \ ``basisOfLeftNucleus()``\  returns a basis of the space of all \ ``x``\  of \ ``A``\  satisfying \ ``0 = associator(x, a, b)``\  for all \ ``a``\ , \ ``b``\  in \ ``A``\ .

.. _l416c67656272615061636b616765-62617369734f664c6566744e75636c6f6964:

.. index::
   pair: AlgebraPackage; basisOfLeftNucloid

:spadfun:`basisOfLeftNucloid`\: () -> \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``basisOfLeftNucloid()``\  returns a basis of the space of endomorphisms of \ ``A``\  as right module. Note: left nucloid coincides with left nucleus if \ ``A``\  has a unit.

.. _l416c67656272615061636b616765-62617369734f664d6964646c654e75636c657573:

.. index::
   pair: AlgebraPackage; basisOfMiddleNucleus

:spadfun:`basisOfMiddleNucleus`\: () -> \ :ref:`List <l4c697374>`\  A 
  \ ``basisOfMiddleNucleus()``\  returns a basis of the space of all \ ``x``\  of \ ``A``\  satisfying \ ``0 = associator(a, x, b)``\  for all \ ``a``\ , \ ``b``\  in \ ``A``\ .

.. _l416c67656272615061636b616765-62617369734f664e75636c657573:

.. index::
   pair: AlgebraPackage; basisOfNucleus

:spadfun:`basisOfNucleus`\: () -> \ :ref:`List <l4c697374>`\  A 
  \ ``basisOfNucleus()``\  returns a basis of the space of all \ ``x``\  of \ ``A``\  satisfying \ ``associator(x, a, b) = associator(a, x, b) = associator(a, b, x) = 0``\  for all \ ``a``\ , \ ``b``\  in \ ``A``\ .

.. _l416c67656272615061636b616765-62617369734f665269676874416e6e6968696c61746f72:

.. index::
   pair: AlgebraPackage; basisOfRightAnnihilator

:spadfun:`basisOfRightAnnihilator`\: A -> \ :ref:`List <l4c697374>`\  A 
  \ ``basisOfRightAnnihilator(a)``\  returns a basis of the space of all \ ``x``\  of \ ``A``\  satisfying \ ``0 = a*x``\ .

.. _l416c67656272615061636b616765-62617369734f6652696768744e75636c657573:

.. index::
   pair: AlgebraPackage; basisOfRightNucleus

:spadfun:`basisOfRightNucleus`\: () -> \ :ref:`List <l4c697374>`\  A 
  \ ``basisOfRightNucleus()``\  returns a basis of the space of all \ ``x``\  of \ ``A``\  satisfying \ ``0 = associator(a, b, x)``\  for all \ ``a``\ , \ ``b``\  in \ ``A``\ .

.. _l416c67656272615061636b616765-62617369734f6652696768744e75636c6f6964:

.. index::
   pair: AlgebraPackage; basisOfRightNucloid

:spadfun:`basisOfRightNucloid`\: () -> \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``basisOfRightNucloid()``\  returns a basis of the space of endomorphisms of \ ``A``\  as left module. Note: right nucloid coincides with right nucleus if \ ``A``\  has a unit.

.. _l416c67656272615061636b616765-626952616e6b:

.. index::
   pair: AlgebraPackage; biRank

:spadfun:`biRank`\: A -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``biRank(x)``\  determines the number of linearly independent elements in \ ``x``\ , \ ``x*bi``\ , \ ``bi*x``\ , \ ``bi*x*bj``\ , \ ``i, j=1, ..., n``\ , where \ ``b=[b1, ..., bn]``\  is a basis. Note: if \ ``A``\  has a unit, then \ :ref:`doubleRank <l416c67656272615061636b616765-646f75626c6552616e6b>`\ , \ :ref:`weakBiRank <l416c67656272615061636b616765-7765616b426952616e6b>`\  and \ :ref:`biRank <l416c67656272615061636b616765-626952616e6b>`\  coincide.

.. _l416c67656272615061636b616765-646f75626c6552616e6b:

.. index::
   pair: AlgebraPackage; doubleRank

:spadfun:`doubleRank`\: A -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``doubleRank(x)``\  determines the number of linearly independent elements in \ ``b1*x``\ , ..., \ ``x*bn``\ , where \ ``b=[b1, ..., bn]``\  is a basis.

.. _l416c67656272615061636b616765-6c65667452616e6b:

.. index::
   pair: AlgebraPackage; leftRank

:spadfun:`leftRank`\: A -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``leftRank(x)``\  determines the number of linearly independent elements in \ ``x*b1``\ , ..., \ ``x*bn``\ , where \ ``b=[b1, ..., bn]``\  is a basis.

.. _l416c67656272615061636b616765-7261646963616c4f664c6566745472616365466f726d:

.. index::
   pair: AlgebraPackage; radicalOfLeftTraceForm

:spadfun:`radicalOfLeftTraceForm`\: () -> \ :ref:`List <l4c697374>`\  A 
  \ ``radicalOfLeftTraceForm()``\  returns basis for null space of \ ``leftTraceMatrix()``\ , if the algebra is associative, alternative or a Jordan algebra, then this space equals the radical (maximal nil ideal) of the algebra.

.. _l416c67656272615061636b616765-726967687452616e6b:

.. index::
   pair: AlgebraPackage; rightRank

:spadfun:`rightRank`\: A -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``rightRank(x)``\  determines the number of linearly independent elements in \ ``b1*x``\ , ..., \ ``bn*x``\ , where \ ``b=[b1, ..., bn]``\  is a basis.

.. _l416c67656272615061636b616765-7765616b426952616e6b:

.. index::
   pair: AlgebraPackage; weakBiRank

:spadfun:`weakBiRank`\: A -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  
  \ ``weakBiRank(x)``\  determines the number of linearly independent elements in the \ ``bi*x*bj``\ , \ ``i, j=1, ..., n``\ , where \ ``b=[b1, ..., bn]``\  is a basis.


