.. index:: OpenMathPackage

.. _l4f70656e4d6174685061636b616765:

OpenMathPackage
===============

:viewcode:`omdev.spad line 236 <omdev.spad#L236>` :editcode:`[edit on github] <omdev.spad#L236>`


\ :ref:`OpenMathPackage <l4f70656e4d6174685061636b616765>`\  provides some simple utilities to make reading OpenMath objects easier.


.. _l4f70656e4d6174685061636b616765-4f4d6c697374434473:

.. index::
   pair: OpenMathPackage; OMlistCDs

:spadfun:`OMlistCDs`\: () -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``OMlistCDs()``\  lists all the \ ``CDs``\  supported by FriCAS.

.. _l4f70656e4d6174685061636b616765-4f4d6c69737453796d626f6c73:

.. index::
   pair: OpenMathPackage; OMlistSymbols

:spadfun:`OMlistSymbols`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``OMlistSymbols(cd)``\  lists all the symbols in \ ``cd``\ .

.. _l4f70656e4d6174685061636b616765-4f4d72656164:

.. index::
   pair: OpenMathPackage; OMread

:spadfun:`OMread`\: \ :ref:`OpenMathDevice <l4f70656e4d617468446576696365>`\  -> \ :ref:`Any <l416e79>`\  
  \ ``OMread(dev)``\  reads an OpenMath object from \ ``dev``\  and passes it to FriCAS.

.. _l4f70656e4d6174685061636b616765-4f4d7265616446696c65:

.. index::
   pair: OpenMathPackage; OMreadFile

:spadfun:`OMreadFile`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Any <l416e79>`\  
  \ ``OMreadFile(f)``\  reads an OpenMath object from \ ``f``\  and passes it to FriCAS.

.. _l4f70656e4d6174685061636b616765-4f4d72656164537472:

.. index::
   pair: OpenMathPackage; OMreadStr

:spadfun:`OMreadStr`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Any <l416e79>`\  
  \ ``OMreadStr(f)``\  reads an OpenMath object from \ ``f``\  and passes it to FriCAS.

.. _l4f70656e4d6174685061636b616765-4f4d737570706f72747343443f:

.. index::
   pair: OpenMathPackage; OMsupportsCD?

:spadfun:`OMsupportsCD?`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``OMsupportsCD?(cd)``\  returns \ ``true``\  if FriCAS supports \ ``cd``\ , \ ``false``\  otherwise.

.. _l4f70656e4d6174685061636b616765-4f4d737570706f72747353796d626f6c3f:

.. index::
   pair: OpenMathPackage; OMsupportsSymbol?

:spadfun:`OMsupportsSymbol?`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``OMsupportsSymbol?(s, cd)``\  returns \ ``true``\  if FriCAS supports symbol \ ``s``\  from \ ``CD``\  \ ``cd``\ , \ ``false``\  otherwise.

.. _l4f70656e4d6174685061636b616765-4f4d756e68616e646c656453796d626f6c:

.. index::
   pair: OpenMathPackage; OMunhandledSymbol

:spadfun:`OMunhandledSymbol`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Exit <l45786974>`\  
  \ ``OMunhandledSymbol(s, cd)``\  raises an error if FriCAS reads a symbol which it is unable to handle. Note that this is different from an unexpected symbol.


