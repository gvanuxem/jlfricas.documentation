.. index:: DistributionPolynomialPackage

.. _l446973747269627574696f6e506f6c796e6f6d69616c5061636b616765:

DistributionPolynomialPackage(R, S, UPS)
========================================

:viewcode:`distro.spad line 1015 <distro.spad#L1015>` :editcode:`[edit on github] <distro.spad#L1015>`

* R: \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 

* S: Join(\ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ , \ :ref:`Module <l4d6f64756c65>`\  R)

* UPS: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  S


A package to apply polynomial transformations to distributions and integrate polynomials with respect to distributions.


.. _l446973747269627574696f6e506f6c796e6f6d69616c5061636b616765-6170706c79:

.. index::
   pair: DistributionPolynomialPackage; apply

:spadfun:`apply`\: (UPS, \ :ref:`Distribution <l446973747269627574696f6e>`\  R) -> \ :ref:`Distribution <l446973747269627574696f6e>`\  S 
  \ ``apply(p, d)``\  computes the distribution of the random variable \ ``p(X)``\ \$ where \ ``X``\  has distribution \ ``d``\ .

.. _l446973747269627574696f6e506f6c796e6f6d69616c5061636b616765-6576616c:

.. index::
   pair: DistributionPolynomialPackage; eval

:spadfun:`eval`\: (\ :ref:`Distribution <l446973747269627574696f6e>`\  R, UPS) -> S 
  \ ``eval(d, p)``\  evaluates the distribution \ ``d``\  as a linear functional on the polynomial \ ``p``\ . Same as \ ``integrate(p, d)``\ .

.. _l446973747269627574696f6e506f6c796e6f6d69616c5061636b616765-696e74656772617465:

.. index::
   pair: DistributionPolynomialPackage; integrate

:spadfun:`integrate`\: (UPS, \ :ref:`Distribution <l446973747269627574696f6e>`\  R) -> S 
  \ ``integrate(p, d)``\  integrates the polynomial \ ``p``\  against the distribution \ ``d``\ . Same as \ ``eval(d, p)``\ .


