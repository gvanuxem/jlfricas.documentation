.. index:: UnittestCount

.. _l556e697474657374436f756e74:

UnittestCount
=============

:viewcode:`unittest.spad line 66 <unittest.spad#L66>` :editcode:`[edit on github] <unittest.spad#L66>`


UnittestCount is a package that keeps track of statistics collected during testing. It is separate from \ :ref:`UnittestAux <l556e697474657374417578>`\  because the latter takes an argument, and we want the state to be common for all arguments.


.. _l556e697474657374436f756e74-6164645761726e696e67:

.. index::
   pair: UnittestCount; addWarning

:spadfun:`addWarning`\: \ :ref:`OutputForm <l4f7574707574466f726d>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``addWarning s``\  is an internal function that adds \ ``s``\ , together with an indication of the current testcase and the current testsuite to the list of warnings.

.. _l556e697474657374436f756e74-696e634661696c:

.. index::
   pair: UnittestCount; incFail

:spadfun:`incFail`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``incFail(s, o)``\  is an internal function that steps the number of failed tests and records in- and output.

.. _l556e697474657374436f756e74-696e63466174616c:

.. index::
   pair: UnittestCount; incFatal

:spadfun:`incFatal`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``incFatal s``\  is an internal function that steps the number of fatal tests and records input.

.. _l556e697474657374436f756e74-696e634c6962726172794572726f72:

.. index::
   pair: UnittestCount; incLibraryError

:spadfun:`incLibraryError`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ ) -> \ :ref:`Void <l566f6964>`\  
  incLibraryError is an internal function that steps the number of failed tests, but not the number of tests.

.. _l556e697474657374436f756e74-696e6350617373:

.. index::
   pair: UnittestCount; incPass

:spadfun:`incPass`\: () -> \ :ref:`Void <l566f6964>`\  
  incPass is an internal function that steps the number of passed tests.

.. _l556e697474657374436f756e74-696e6354657374:

.. index::
   pair: UnittestCount; incTest

:spadfun:`incTest`\: () -> \ :ref:`Void <l566f6964>`\  
  incTest is an internal function that steps the test number.

.. _l556e697474657374436f756e74-696e6358664661696c:

.. index::
   pair: UnittestCount; incXfFail

:spadfun:`incXfFail`\: () -> \ :ref:`Void <l566f6964>`\  
  \ ``incXfFail()``\  is an internal function that steps the number expected failures.

.. _l556e697474657374436f756e74-696e635866466174616c:

.. index::
   pair: UnittestCount; incXfFatal

:spadfun:`incXfFatal`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  incXfFatal is like incFatal, but for expected failures.

.. _l556e697474657374436f756e74-696e6358664c6962726172794572726f72:

.. index::
   pair: UnittestCount; incXfLibraryError

:spadfun:`incXfLibraryError`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ ) -> \ :ref:`Void <l566f6964>`\  
  incXfLibraryError is like incLibraryError, but using expected failures.

.. _l556e697474657374436f756e74-696e63586650617373:

.. index::
   pair: UnittestCount; incXfPass

:spadfun:`incXfPass`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``incXfPass(s, o)``\  is an internal function that steps the number of tests that passed but were expected to fail and records in- and output.

.. _l556e697474657374436f756e74-73746174697374696373:

.. index::
   pair: UnittestCount; statistics

:spadfun:`statistics`\: () -> \ :ref:`Void <l566f6964>`\  
  \ ``statistics()``\  prints out a summary of the outcome of the testcases so far. Use \ ``clear completely``\  to reset the statistics.

.. _l556e697474657374436f756e74-7465737463617365:

.. index::
   pair: UnittestCount; testcase

:spadfun:`testcase`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``testcase s``\  starts a new testcase with \ ``s``\  as title. It also calls \ ``clear all``\ . A testcase is composed of several tests.

.. _l556e697474657374436f756e74-74657374636173654e6f436c656172:

.. index::
   pair: UnittestCount; testcaseNoClear

:spadfun:`testcaseNoClear`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``testcaseNoClear s``\ , starts a new testcase with \ ``s``\  as title, without calling \ ``clear all``\ . A testcase is composed of several tests.

.. _l556e697474657374436f756e74-746573747375697465:

.. index::
   pair: UnittestCount; testsuite

:spadfun:`testsuite`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``testsuite s``\  starts a new testsuite with \ ``s``\  as title. It also calls \ ``clear all``\ . A testsuite is composed of several testcases.

.. _l556e697474657374436f756e74-7465737473756974654e6f436c656172:

.. index::
   pair: UnittestCount; testsuiteNoClear

:spadfun:`testsuiteNoClear`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``testsuiteNoClear s``\  starts a new testsuite with \ ``s``\  as title, without calling \ ``clear all``\ . A testsuite is composed of several testcases.


