.. index:: SortPackage

.. _l536f72745061636b616765:

SortPackage(S, A)
=================

:viewcode:`sortpak.spad line 1 <sortpak.spad#L1>` :editcode:`[edit on github] <sortpak.spad#L1>`

* S: \ :ref:`Type <l54797065>`\ 

* A: Join(\ :ref:`IndexedAggregate <l496e6465786564416767726567617465>`\ (\ :ref:`Integer <l496e7465676572>`\ , S), \ :ref:`finiteAggregate <l66696e697465416767726567617465>`\ , \ :ref:`shallowlyMutable <l7368616c6c6f776c794d757461626c65>`\ )


This package exports sorting algorithnms


.. _l536f72745061636b616765-627562626c65536f727421:

.. index::
   pair: SortPackage; bubbleSort!

:spadfun:`bubbleSort!`\: (A, (S, S) -> \ :ref:`Boolean <l426f6f6c65616e>`\ ) -> A 
  \ ``bubbleSort!(a, f)``\  \undocumented


.. index::
   pair: SortPackage; bubbleSort!

:spadfun:`bubbleSort!`\: A -> A if S has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  \ ``bubbleSort!(a)``\  \undocumented

.. _l536f72745061636b616765-696e73657274696f6e536f727421:

.. index::
   pair: SortPackage; insertionSort!

:spadfun:`insertionSort!`\: (A, (S, S) -> \ :ref:`Boolean <l426f6f6c65616e>`\ ) -> A 
  \ ``insertionSort!(a, f)``\  \undocumented


.. index::
   pair: SortPackage; insertionSort!

:spadfun:`insertionSort!`\: A -> A if S has \ :ref:`OrderedSet <l4f726465726564536574>`\ 
  \ ``insertionSort! ``\ \undocumented


