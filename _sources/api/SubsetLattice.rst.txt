.. index:: SubsetLattice

.. _l5375627365744c617474696365:

SubsetLattice(S, top)
=====================

:viewcode:`logic.spad line 2033 <logic.spad#L2033>` :editcode:`[edit on github] <logic.spad#L2033>`

* S: \ :ref:`SetCategory <l53657443617465676f7279>`\ 

* top: \ :ref:`List <l4c697374>`\  S


Implementation of subset logic. implements pseudo complement subset of powerset related to 'containment order' REP holds a single node and complete set (representing 'top') Date Created: Oct 2015


.. _l5375627365744c617474696365-2f5c:

\ :ref:`/\\ <l4d65657453656d696c617474696365-2f5c>`\ \: (%, %) -> % 
  from \ :ref:`MeetSemilattice <l4d65657453656d696c617474696365>`\ 

.. _l5375627365744c617474696365-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l5375627365744c617474696365-5c2f:

\ :ref:`\\/ <l4a6f696e53656d696c617474696365-5c2f>`\ \: (%, %) -> % 
  from \ :ref:`JoinSemilattice <l4a6f696e53656d696c617474696365>`\ 

.. _l5375627365744c617474696365-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l5375627365744c617474696365-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l5375627365744c617474696365-636f6d706c656d656e74:

.. index::
   pair: SubsetLattice; complement

:spadfun:`complement`\: % -> % 
  pseudo complement


.. index::
   pair: SubsetLattice; complement

:spadfun:`complement`\: (%, \ :ref:`List <l4c697374>`\  S) -> % 
  pseudo complement

.. _l5375627365744c617474696365-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l5375627365744c617474696365-7375627365744c617474696365:

.. index::
   pair: SubsetLattice; subsetLattice

:spadfun:`subsetLattice`\: \ :ref:`List <l4c697374>`\  S -> % 
  construct subset lattice element


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`JoinSemilattice <l4a6f696e53656d696c617474696365>`\  

\ :ref:`Lattice <l4c617474696365>`\  

\ :ref:`MeetSemilattice <l4d65657453656d696c617474696365>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

