.. index:: FortranCodeTools

.. _l466f727472616e436f6465546f6f6c73:

FortranCodeTools
================

:viewcode:`fortout.spad line 1 <fortout.spad#L1>` :editcode:`[edit on github] <fortout.spad#L1>`


undocumented


.. _l466f727472616e436f6465546f6f6c73-6368616e6765457870724c656e677468:

.. index::
   pair: FortranCodeTools; changeExprLength

:spadfun:`changeExprLength`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``changeExprLength(i)``\  changes limit on expression length by \ ``i``\ .

.. _l466f727472616e436f6465546f6f6c73-636865636b54797065:

.. index::
   pair: FortranCodeTools; checkType

:spadfun:`checkType`\: \ :ref:`String <l537472696e67>`\  -> \ :ref:`String <l537472696e67>`\  
  \ ``checkType(t)``\ 

.. _l466f727472616e436f6465546f6f6c73-636c6561725f757365645f696e7472696e73696373:

.. index::
   pair: FortranCodeTools; clear_used_intrinsics

:spadfun:`clear_used_intrinsics`\: () -> \ :ref:`Void <l566f6964>`\  
  \ ``clear_used_intrinsics()``\  clear list of used intrinsics

.. _l466f727472616e436f6465546f6f6c73-646973706c61794c696e6573:

.. index::
   pair: FortranCodeTools; displayLines

:spadfun:`displayLines`\: \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``displayLines(l)``\ 

.. _l466f727472616e436f6465546f6f6c73-6469737053746174656d656e74:

.. index::
   pair: FortranCodeTools; dispStatement

:spadfun:`dispStatement`\: \ :ref:`OutputForm <l4f7574707574466f726d>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``dispStatement(of)``\ 

.. _l466f727472616e436f6465546f6f6c73-646f5f776974685f6572726f725f656e7631:

.. index::
   pair: FortranCodeTools; do_with_error_env1

:spadfun:`do_with_error_env1`\: (() -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``do_with_error_env1(f)``\ 

.. _l466f727472616e436f6465546f6f6c73-646f5f776974685f6572726f725f656e7632:

.. index::
   pair: FortranCodeTools; do_with_error_env2

:spadfun:`do_with_error_env2`\: (\ :ref:`Boolean <l426f6f6c65616e>`\ , () -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``do_with_error_env2(int_to_floats?, f)``\ 

.. _l466f727472616e436f6465546f6f6c73-646f5f776974685f6572726f725f656e7633:

.. index::
   pair: FortranCodeTools; do_with_error_env3

:spadfun:`do_with_error_env3`\: (\ :ref:`Boolean <l426f6f6c65616e>`\ , () -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``do_with_error_env3(int_to_floats?, f)``\ 

.. _l466f727472616e436f6465546f6f6c73-65787072657373696f6e32466f727472616e31:

.. index::
   pair: FortranCodeTools; expression2Fortran1

:spadfun:`expression2Fortran1`\: (() -> \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`OutputForm <l4f7574707574466f726d>`\ , \ :ref:`Boolean <l426f6f6c65616e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``expression2Fortran1(nf, of, int_to_floats?)``\ 

.. _l466f727472616e436f6465546f6f6c73-65787072657373696f6e32466f727472616e:

.. index::
   pair: FortranCodeTools; expression2Fortran

:spadfun:`expression2Fortran`\: \ :ref:`OutputForm <l4f7574707574466f726d>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``expression2Fortran(of)``\ 

.. _l466f727472616e436f6465546f6f6c73-666f72745f636c65616e5f6c696e6573:

.. index::
   pair: FortranCodeTools; fort_clean_lines

:spadfun:`fort_clean_lines`\: \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  

.. _l466f727472616e436f6465546f6f6c73-666f72745f666f726d61745f7479706573:

.. index::
   pair: FortranCodeTools; fort_format_types

:spadfun:`fort_format_types`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``fort_format_types(typeName, names)``\ 

.. _l466f727472616e436f6465546f6f6c73-666f7274466f726d617448656164:

.. index::
   pair: FortranCodeTools; fortFormatHead

:spadfun:`fortFormatHead`\: (\ :ref:`Symbol <l53796d626f6c>`\ , Union(fst: \ :ref:`FortranScalarType <l466f727472616e5363616c617254797065>`\ , void: void), \ :ref:`List <l4c697374>`\  \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``fortFormatHead(name, returnType, args)``\ 

.. _l466f727472616e436f6465546f6f6c73-666f7274466f726d6174547970654c696e6573:

.. index::
   pair: FortranCodeTools; fortFormatTypeLines

:spadfun:`fortFormatTypeLines`\: (\ :ref:`String <l537472696e67>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``fortFormatTypeLines(typeName, l)``\ 

.. _l466f727472616e436f6465546f6f6c73-6765745f666f72745f696e64656e74:

.. index::
   pair: FortranCodeTools; get_fort_indent

:spadfun:`get_fort_indent`\: () -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``get_fort_indent()``\  gets current amount of Frotran indentation

.. _l466f727472616e436f6465546f6f6c73-6765745f757365645f696e7472696e73696373:

.. index::
   pair: FortranCodeTools; get_used_intrinsics

:spadfun:`get_used_intrinsics`\: () -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``get_used_intrinsics()``\  gets list of used intrinsics

.. _l466f727472616e436f6465546f6f6c73-67657453746174656d656e74:

.. index::
   pair: FortranCodeTools; getStatement

:spadfun:`getStatement`\: (\ :ref:`OutputForm <l4f7574707574466f726d>`\ , \ :ref:`Boolean <l426f6f6c65616e>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``getStatement(of, int_to_floats?)``\ 

.. _l466f727472616e436f6465546f6f6c73-696e64656e74466f72744c6576656c:

.. index::
   pair: FortranCodeTools; indentFortLevel

:spadfun:`indentFortLevel`\: \ :ref:`Integer <l496e7465676572>`\  -> \ :ref:`Void <l566f6964>`\  
  \ ``indentFortLevel(i)``\ 

.. _l466f727472616e436f6465546f6f6c73-6e6577466f727472616e54656d70566172:

.. index::
   pair: FortranCodeTools; newFortranTempVar

:spadfun:`newFortranTempVar`\: () -> \ :ref:`Symbol <l53796d626f6c>`\  
  \ ``newFortranTempVar()``\  creates new name for temporary variable and puts it in TheSymbolTable

.. _l466f727472616e436f6465546f6f6c73-73746174656d656e7432466f727472616e:

.. index::
   pair: FortranCodeTools; statement2Fortran

:spadfun:`statement2Fortran`\: \ :ref:`OutputForm <l4f7574707574466f726d>`\  -> \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\  
  \ ``statement2Fortran(of)``\ 


