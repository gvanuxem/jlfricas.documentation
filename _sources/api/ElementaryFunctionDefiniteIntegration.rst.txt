.. index:: ElementaryFunctionDefiniteIntegration

.. _l456c656d656e7461727946756e6374696f6e446566696e697465496e746567726174696f6e:

ElementaryFunctionDefiniteIntegration(R, F)
===========================================

:viewcode:`defintef.spad line 1 <defintef.spad#L1>` :editcode:`[edit on github] <defintef.spad#L1>`

* R: Join(\ :ref:`PolynomialFactorizationExplicit <l506f6c796e6f6d69616c466163746f72697a6174696f6e4578706c69636974>`\ , \ :ref:`Comparable <l436f6d70617261626c65>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`LinearlyExplicitOver <l4c696e6561726c794578706c696369744f766572>`\  \ :ref:`Integer <l496e7465676572>`\ )

* F: Join(\ :ref:`TranscendentalFunctionCategory <l5472616e7363656e64656e74616c46756e6374696f6e43617465676f7279>`\ , \ :ref:`PrimitiveFunctionCategory <l5072696d697469766546756e6374696f6e43617465676f7279>`\ , \ :ref:`AlgebraicallyClosedFunctionSpace <l416c67656272616963616c6c79436c6f73656446756e6374696f6e5370616365>`\  R)


\ :ref:`ElementaryFunctionDefiniteIntegration <l456c656d656e7461727946756e6374696f6e446566696e697465496e746567726174696f6e>`\  provides functions to compute definite integrals of elementary functions.


.. _l456c656d656e7461727946756e6374696f6e446566696e697465496e746567726174696f6e-696e6e6572696e74:

.. index::
   pair: ElementaryFunctionDefiniteIntegration; innerint

:spadfun:`innerint`\: (F, \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  F, \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  F, \ :ref:`Boolean <l426f6f6c65616e>`\ ) -> Union(f1: \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  F, f2: \ :ref:`List <l4c697374>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  F, fail: failed, pole: potentialPole) 
  \ ``innerint(f, x, a, b, ignore?)``\  should be local but conditional

.. _l456c656d656e7461727946756e6374696f6e446566696e697465496e746567726174696f6e-696e74656772617465:

.. index::
   pair: ElementaryFunctionDefiniteIntegration; integrate

:spadfun:`integrate`\: (F, \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  F) -> Union(f1: \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  F, f2: \ :ref:`List <l4c697374>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  F, fail: failed, pole: potentialPole) 
  \ ``integrate(f, x = a..b)``\  returns the integral of \ ``f(x)dx``\  from a to \ ``b``\ . Error: if \ ``f``\  has a pole for \ ``x``\  between a and \ ``b``\ .


.. index::
   pair: ElementaryFunctionDefiniteIntegration; integrate

:spadfun:`integrate`\: (F, \ :ref:`SegmentBinding <l5365676d656e7442696e64696e67>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  F, \ :ref:`String <l537472696e67>`\ ) -> Union(f1: \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  F, f2: \ :ref:`List <l4c697374>`\  \ :ref:`OrderedCompletion <l4f726465726564436f6d706c6574696f6e>`\  F, fail: failed, pole: potentialPole) 
  \ ``integrate(f, x = a..b, "noPole")``\  returns the integral of \ ``f(x)dx``\  from a to \ ``b``\ . If it is not possible to check whether \ ``f``\  has a pole for \ ``x``\  between a and \ ``b``\  (because of parameters), then this function will assume that \ ``f``\  has no such pole. Error: if \ ``f``\  has a pole for \ ``x``\  between a and \ ``b``\  or if the last argument is not "noPole".


