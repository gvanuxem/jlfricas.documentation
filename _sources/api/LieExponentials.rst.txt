.. index:: LieExponentials

.. _l4c69654578706f6e656e7469616c73:

LieExponentials(VarSet, R, Order)
=================================

:viewcode:`xlpoly.spad line 982 <xlpoly.spad#L982>` :editcode:`[edit on github] <xlpoly.spad#L982>`

* VarSet: \ :ref:`OrderedSet <l4f726465726564536574>`\ 

* R: Join(\ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ , \ :ref:`Module <l4d6f64756c65>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )

* Order: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ 


Management of the Lie Group associated with a free nilpotent Lie algebra. Every Lie bracket with length greater than \ ``Order``\  are assumed to be null. The implementation inherits from the \ :ref:`XPBWPolynomial <l58504257506f6c796e6f6d69616c>`\  domain constructor: Lyndon coordinates are exponential coordinates of the second kind.   Author: Michel Petitot (petitot@lifl.\ ``fr``\ ).


.. _l4c69654578706f6e656e7469616c73-31:

\ :ref:`1 <l4d61676d6157697468556e6974-31>`\ \: % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4c69654578706f6e656e7469616c73-2a:

\ :ref:`\* <l4d61676d61-2a>`\ \: (%, %) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4c69654578706f6e656e7469616c73-2f:

\ :ref:`/ <l47726f7570-2f>`\ \: (%, %) -> % 
  from \ :ref:`Group <l47726f7570>`\ 

.. _l4c69654578706f6e656e7469616c73-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4c69654578706f6e656e7469616c73-5e:

\ :ref:`^ <l47726f7570-5e>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`Group <l47726f7570>`\ 


\ :ref:`^ <l4d61676d6157697468556e6974-5e>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`^ <l4d61676d61-5e>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4c69654578706f6e656e7469616c73-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4c69654578706f6e656e7469616c73-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


.. index::
   pair: LieExponentials; coerce

:spadfun:`coerce`\: % -> \ :ref:`XDistributedPolynomial <l584469737472696275746564506f6c796e6f6d69616c>`\ (VarSet, R) 
  \ ``coerce(g)``\  returns the internal representation of \ ``g``\ .


.. index::
   pair: LieExponentials; coerce

:spadfun:`coerce`\: % -> \ :ref:`XPBWPolynomial <l58504257506f6c796e6f6d69616c>`\ (VarSet, R) 
  \ ``coerce(g)``\  returns the internal representation of \ ``g``\ .

.. _l4c69654578706f6e656e7469616c73-636f6d6d757461746f72:

\ :ref:`commutator <l47726f7570-636f6d6d757461746f72>`\ \: (%, %) -> % 
  from \ :ref:`Group <l47726f7570>`\ 

.. _l4c69654578706f6e656e7469616c73-636f6e6a7567617465:

\ :ref:`conjugate <l47726f7570-636f6e6a7567617465>`\ \: (%, %) -> % 
  from \ :ref:`Group <l47726f7570>`\ 

.. _l4c69654578706f6e656e7469616c73-657870:

.. index::
   pair: LieExponentials; exp

:spadfun:`exp`\: \ :ref:`LiePolynomial <l4c6965506f6c796e6f6d69616c>`\ (VarSet, R) -> % 
  \ ``exp(p)``\  returns the exponential of \ ``p``\ .

.. _l4c69654578706f6e656e7469616c73-6964656e74696669636174696f6e:

.. index::
   pair: LieExponentials; identification

:spadfun:`identification`\: (%, %) -> \ :ref:`List <l4c697374>`\  \ :ref:`Equation <l4571756174696f6e>`\  R 
  \ ``identification(g, h)``\  returns the list of equations \ ``g_i = h_i``\ , where \ ``g_i``\  (resp. \ ``h_i``\ ) are exponential coordinates of \ ``g``\  (resp. \ ``h``\ ).

.. _l4c69654578706f6e656e7469616c73-696e76:

\ :ref:`inv <l47726f7570-696e76>`\ \: % -> % 
  from \ :ref:`Group <l47726f7570>`\ 

.. _l4c69654578706f6e656e7469616c73-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4c69654578706f6e656e7469616c73-6c656674506f776572:

\ :ref:`leftPower <l4d61676d6157697468556e6974-6c656674506f776572>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`leftPower <l4d61676d61-6c656674506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4c69654578706f6e656e7469616c73-6c6566745265636970:

\ :ref:`leftRecip <l4d61676d6157697468556e6974-6c6566745265636970>`\ \: % -> Union(%, failed) 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4c69654578706f6e656e7469616c73-6c6973744f665465726d73:

.. index::
   pair: LieExponentials; listOfTerms

:spadfun:`listOfTerms`\: % -> \ :ref:`List <l4c697374>`\  Record(k: \ :ref:`PoincareBirkhoffWittLyndonBasis <l506f696e636172654269726b686f6666576974744c796e646f6e4261736973>`\  VarSet, c: R) 
  \ ``listOfTerms(p)``\  returns the internal representation of \ ``p``\ .

.. _l4c69654578706f6e656e7469616c73-6c6f67:

.. index::
   pair: LieExponentials; log

:spadfun:`log`\: % -> \ :ref:`LiePolynomial <l4c6965506f6c796e6f6d69616c>`\ (VarSet, R) 
  \ ``log(p)``\  returns the logarithm of \ ``p``\ .

.. _l4c69654578706f6e656e7469616c73-4c796e646f6e4261736973:

.. index::
   pair: LieExponentials; LyndonBasis

:spadfun:`LyndonBasis`\: \ :ref:`List <l4c697374>`\  VarSet -> \ :ref:`List <l4c697374>`\  \ :ref:`LiePolynomial <l4c6965506f6c796e6f6d69616c>`\ (VarSet, R) 
  \ ``LyndonBasis(lv)``\  returns the Lyndon basis of the nilpotent free Lie algebra.

.. _l4c69654578706f6e656e7469616c73-4c796e646f6e436f6f7264696e61746573:

.. index::
   pair: LieExponentials; LyndonCoordinates

:spadfun:`LyndonCoordinates`\: % -> \ :ref:`List <l4c697374>`\  Record(k: \ :ref:`LyndonWord <l4c796e646f6e576f7264>`\  VarSet, c: R) 
  \ ``LyndonCoordinates(g)``\  returns the exponential coordinates of \ ``g``\ .

.. _l4c69654578706f6e656e7469616c73-6d6972726f72:

.. index::
   pair: LieExponentials; mirror

:spadfun:`mirror`\: % -> % 
  \ ``mirror(g)``\  is the mirror of the internal representation of \ ``g``\ .

.. _l4c69654578706f6e656e7469616c73-6f6e653f:

\ :ref:`one? <l4d61676d6157697468556e6974-6f6e653f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4c69654578706f6e656e7469616c73-7265636970:

\ :ref:`recip <l4d61676d6157697468556e6974-7265636970>`\ \: % -> Union(%, failed) 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4c69654578706f6e656e7469616c73-7269676874506f776572:

\ :ref:`rightPower <l4d61676d6157697468556e6974-7269676874506f776572>`\ \: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 


\ :ref:`rightPower <l4d61676d61-7269676874506f776572>`\ \: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  from \ :ref:`Magma <l4d61676d61>`\ 

.. _l4c69654578706f6e656e7469616c73-72696768745265636970:

\ :ref:`rightRecip <l4d61676d6157697468556e6974-72696768745265636970>`\ \: % -> Union(%, failed) 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4c69654578706f6e656e7469616c73-73616d706c65:

\ :ref:`sample <l4d61676d6157697468556e6974-73616d706c65>`\ \: % 
  from \ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\ 

.. _l4c69654578706f6e656e7469616c73-7661724c697374:

.. index::
   pair: LieExponentials; varList

:spadfun:`varList`\: % -> \ :ref:`List <l4c697374>`\  VarSet 
  \ ``varList(g)``\  returns the list of variables of \ ``g``\ .


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`Group <l47726f7570>`\  

\ :ref:`Magma <l4d61676d61>`\  

\ :ref:`MagmaWithUnit <l4d61676d6157697468556e6974>`\  

\ :ref:`Monoid <l4d6f6e6f6964>`\  

\ :ref:`SemiGroup <l53656d6947726f7570>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

\ :ref:`TwoSidedRecip <l54776f53696465645265636970>`\  

\ :ref:`unitsKnown <l756e6974734b6e6f776e>`\  

