.. index:: GcdBasis

.. _l4763644261736973:

GcdBasis R
==========

:viewcode:`muldep.spad line 1 <muldep.spad#L1>` :editcode:`[edit on github] <muldep.spad#L1>`

* R: \ :ref:`GcdDomain <l476364446f6d61696e>`\ 


\ ``Gcd``\  basis provides functions to find structure of multiplicative group (and semigroup) generated by elements of \ ``Gcd``\  domain.


.. _l4763644261736973-6763644261736973:

.. index::
   pair: GcdBasis; gcdBasis

:spadfun:`gcdBasis`\: \ :ref:`Vector <l566563746f72>`\  R -> \ :ref:`Vector <l566563746f72>`\  R 
  \ ``gcdBasis(v)``\  returns basis part of \ ``gcdDecomposition(v)``\ .

.. _l4763644261736973-6763644465636f6d706f736974696f6e:

.. index::
   pair: GcdBasis; gcdDecomposition

:spadfun:`gcdDecomposition`\: \ :ref:`Vector <l566563746f72>`\  \ :ref:`Fraction <l4672616374696f6e>`\  R -> Record(basis: \ :ref:`Vector <l566563746f72>`\  R, transform: \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``gcdDecomposition(v)``\  returns \ ``[b, t]``\  such that elements of \ ``b``\  are relatively prime and that \ ``v(i) = product(b(j)^(t(j, i)), j=1..n)``\ 


.. index::
   pair: GcdBasis; gcdDecomposition

:spadfun:`gcdDecomposition`\: \ :ref:`Vector <l566563746f72>`\  R -> Record(basis: \ :ref:`Vector <l566563746f72>`\  R, transform: \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``gcdDecomposition(v)``\  returns \ ``[b, t]``\  such that elements of \ ``b``\  are relatively prime and that \ ``v(i) = product(b(j)^(t(j, i)), j=1..n)``\ 


