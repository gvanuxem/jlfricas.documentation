.. index:: ChainComplex

.. _l436861696e436f6d706c6578:

ChainComplex
============

:viewcode:`alg_top.spad line 1362 <alg_top.spad#L1362>` :editcode:`[edit on github] <alg_top.spad#L1362>`


Delta Complexes are defined by a sequence of 'face maps', These can be represented by a list of matrices. for more documentation see: http://www.euclideanspace.com/prog/scratchpad/mycode/topology/chain/ Date Created: March 2016 Basic Operations: Related packages: Related categories: Related Domains: CoChainComplex Also See: AMS Classifications:


.. _l436861696e436f6d706c6578-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l436861696e436f6d706c6578-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l436861696e436f6d706c6578-636861696e436f6d706c6578:

.. index::
   pair: ChainComplex; chainComplex

:spadfun:`chainComplex`\: \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`Integer <l496e7465676572>`\  -> % 
  constructor

.. _l436861696e436f6d706c6578-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l436861696e436f6d706c6578-686f6d6f6c6f6779:

.. index::
   pair: ChainComplex; homology

:spadfun:`homology`\: % -> \ :ref:`List <l4c697374>`\  \ :ref:`Homology <l486f6d6f6c6f6779>`\  
  calculate homology using SmithNormalForm

.. _l436861696e436f6d706c6578-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l436861696e436f6d706c6578-7472616e736974696f6e5f6d61747269636573:

.. index::
   pair: ChainComplex; transition_matrices

:spadfun:`transition_matrices`\: % -> \ :ref:`List <l4c697374>`\  \ :ref:`Matrix <l4d6174726978>`\  \ :ref:`Integer <l496e7465676572>`\  
  \ ``transition_matrices(a)``\  gives list of transition matrices of a.

.. _l436861696e436f6d706c6578-76616c6964617465:

.. index::
   pair: ChainComplex; validate

:spadfun:`validate`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``true``\  if this is a valid chain complex, that is: 1. maps compose 2. product of adjacent maps is zero


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

