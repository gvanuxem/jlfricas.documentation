.. index:: DirectProductFunctions2

.. _l44697265637450726f6475637446756e6374696f6e7332:

DirectProductFunctions2(dim, A, B)
==================================

:viewcode:`vector.spad line 493 <vector.spad#L493>` :editcode:`[edit on github] <vector.spad#L493>`

* dim: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ 

* A: \ :ref:`Type <l54797065>`\ 

* B: \ :ref:`Type <l54797065>`\ 


This package provides operations which all take as arguments direct products of elements of some type \ ``A``\  and functions from \ ``A``\  to another type \ ``B``\ . The operations all iterate over their vector argument and either return a value of type \ ``B``\  or a direct product over \ ``B``\ .


.. _l44697265637450726f6475637446756e6374696f6e7332-6d6170:

.. index::
   pair: DirectProductFunctions2; map

:spadfun:`map`\: (A -> B, \ :ref:`DirectProduct <l44697265637450726f64756374>`\ (dim, A)) -> \ :ref:`DirectProduct <l44697265637450726f64756374>`\ (dim, B) 
  \ ``map(f, v)``\  applies the function \ ``f``\  to every element of the vector \ ``v``\  producing a new vector containing the values.

.. _l44697265637450726f6475637446756e6374696f6e7332-726564756365:

.. index::
   pair: DirectProductFunctions2; reduce

:spadfun:`reduce`\: ((A, B) -> B, \ :ref:`DirectProduct <l44697265637450726f64756374>`\ (dim, A), B) -> B 
  \ ``reduce(func, vec, ident)``\  combines the elements in \ ``vec``\  using the binary function \ ``func``\ . Argument ident is returned if the vector is empty.

.. _l44697265637450726f6475637446756e6374696f6e7332-7363616e:

.. index::
   pair: DirectProductFunctions2; scan

:spadfun:`scan`\: ((A, B) -> B, \ :ref:`DirectProduct <l44697265637450726f64756374>`\ (dim, A), B) -> \ :ref:`DirectProduct <l44697265637450726f64756374>`\ (dim, B) 
  \ ``scan(func, vec, ident)``\  creates a new vector whose elements are the result of applying reduce to the binary function \ ``func``\ , increasing initial subsequences of the vector \ ``vec``\ , and the element ident.


