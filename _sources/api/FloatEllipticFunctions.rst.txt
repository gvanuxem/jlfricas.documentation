.. index:: FloatEllipticFunctions

.. _l466c6f6174456c6c697074696346756e6374696f6e73:

FloatEllipticFunctions
======================

:viewcode:`special2.spad line 2080 <special2.spad#L2080>` :editcode:`[edit on github] <special2.spad#L2080>`


This package implements arbitrary precision numerical elliptic functions. The method is based on descending Landen transform.


.. _l466c6f6174456c6c697074696346756e6374696f6e73-656c6c697074696345:

.. index::
   pair: FloatEllipticFunctions; ellipticE

:spadfun:`ellipticE`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``ellipticE(z, m)``\  is the incomplete elliptic integral of the second kind.


.. index::
   pair: FloatEllipticFunctions; ellipticE

:spadfun:`ellipticE`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Float <l466c6f6174>`\  
  \ ``ellipticE(z, m)``\  is the incomplete elliptic integral of the second kind.


.. index::
   pair: FloatEllipticFunctions; ellipticE

:spadfun:`ellipticE`\: \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``ellipticE(m)``\  is the complete elliptic integral of the second kind.


.. index::
   pair: FloatEllipticFunctions; ellipticE

:spadfun:`ellipticE`\: \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Float <l466c6f6174>`\  
  \ ``ellipticE(m)``\  is the complete elliptic integral of the second kind.

.. _l466c6f6174456c6c697074696346756e6374696f6e73-656c6c697074696346:

.. index::
   pair: FloatEllipticFunctions; ellipticF

:spadfun:`ellipticF`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``ellipticF(z, m)``\  is the incomplete elliptic integral of the first kind.


.. index::
   pair: FloatEllipticFunctions; ellipticF

:spadfun:`ellipticF`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Float <l466c6f6174>`\  
  \ ``ellipticF(z, m)``\  is the incomplete elliptic integral of the first kind.

.. _l466c6f6174456c6c697074696346756e6374696f6e73-656c6c69707469634b:

.. index::
   pair: FloatEllipticFunctions; ellipticK

:spadfun:`ellipticK`\: \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``ellipticK(m)``\  is the complete elliptic integral of the first kind.


.. index::
   pair: FloatEllipticFunctions; ellipticK

:spadfun:`ellipticK`\: \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Float <l466c6f6174>`\  
  \ ``ellipticK(m)``\  is the complete elliptic integral of the first kind.

.. _l466c6f6174456c6c697074696346756e6374696f6e73-656c6c69707469635069:

.. index::
   pair: FloatEllipticFunctions; ellipticPi

:spadfun:`ellipticPi`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``ellipticPi(z, n, m)``\  is the incomplete elliptic integral of the third kind.


.. index::
   pair: FloatEllipticFunctions; ellipticPi

:spadfun:`ellipticPi`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Float <l466c6f6174>`\  
  \ ``ellipticPi(z, n, m)``\  is the incomplete elliptic integral of the third kind.

.. _l466c6f6174456c6c697074696346756e6374696f6e73-6a61636f6269436e:

.. index::
   pair: FloatEllipticFunctions; jacobiCn

:spadfun:`jacobiCn`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``jacobiCn(z, m)``\  is the Jacobi \ ``cn``\  function


.. index::
   pair: FloatEllipticFunctions; jacobiCn

:spadfun:`jacobiCn`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Float <l466c6f6174>`\  
  \ ``jacobiCn(z, m)``\  is the Jacobi \ ``cn``\  function

.. _l466c6f6174456c6c697074696346756e6374696f6e73-6a61636f6269446e:

.. index::
   pair: FloatEllipticFunctions; jacobiDn

:spadfun:`jacobiDn`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``jacobiDn(z, m)``\  is the Jacobi \ ``dn``\  function


.. index::
   pair: FloatEllipticFunctions; jacobiDn

:spadfun:`jacobiDn`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Float <l466c6f6174>`\  
  \ ``jacobiDn(z, m)``\  is the Jacobi \ ``dn``\  function

.. _l466c6f6174456c6c697074696346756e6374696f6e73-6a61636f6269536e:

.. index::
   pair: FloatEllipticFunctions; jacobiSn

:spadfun:`jacobiSn`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``jacobiSn(z, m)``\  is the Jacobi \ ``sn``\  function


.. index::
   pair: FloatEllipticFunctions; jacobiSn

:spadfun:`jacobiSn`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Float <l466c6f6174>`\  
  \ ``jacobiSn(z, m)``\  is the Jacobi \ ``sn``\  function

.. _l466c6f6174456c6c697074696346756e6374696f6e73-6a61636f62695a657461:

.. index::
   pair: FloatEllipticFunctions; jacobiZeta

:spadfun:`jacobiZeta`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Float <l466c6f6174>`\  
  \ ``jacobiZeta(z, m)``\  is the Jacobi zeta function

.. _l466c6f6174456c6c697074696346756e6374696f6e73-6b70726f64:

.. index::
   pair: FloatEllipticFunctions; kprod

:spadfun:`kprod`\: \ :ref:`List <l4c697374>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  Undocumented.


.. index::
   pair: FloatEllipticFunctions; kprod

:spadfun:`kprod`\: \ :ref:`List <l4c697374>`\  \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Float <l466c6f6174>`\  
  Undocumented.

.. _l466c6f6174456c6c697074696346756e6374696f6e73-6c616e64656e31:

.. index::
   pair: FloatEllipticFunctions; landen1

:spadfun:`landen1`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  Undocumented.


.. index::
   pair: FloatEllipticFunctions; landen1

:spadfun:`landen1`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Float <l466c6f6174>`\  
  Undocumented.

.. _l466c6f6174456c6c697074696346756e6374696f6e73-6c616e64656e32:

.. index::
   pair: FloatEllipticFunctions; landen2

:spadfun:`landen2`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  Undocumented.


.. index::
   pair: FloatEllipticFunctions; landen2

:spadfun:`landen2`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Float <l466c6f6174>`\  
  Undocumented.

.. _l466c6f6174456c6c697074696346756e6374696f6e73-6c616e64656e:

.. index::
   pair: FloatEllipticFunctions; landen

:spadfun:`landen`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  Undocumented.


.. index::
   pair: FloatEllipticFunctions; landen

:spadfun:`landen`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Float <l466c6f6174>`\  
  Undocumented.

.. _l466c6f6174456c6c697074696346756e6374696f6e73-6d6f64756c6172496e76617269616e744a:

.. index::
   pair: FloatEllipticFunctions; modularInvariantJ

:spadfun:`modularInvariantJ`\: \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``modularInvariantJ(tau)``\  computes modular invariant \ ``j``\ , that is \ ``1728*g2^3/(g2^3 - 27*g3^2)``\  where \ ``g2``\ , \ ``g3``\  are invariants corresponding to half periods \ ``w1``\ , \ ``w2``\  such that \ ``tau = w1/w2``\ .

.. _l466c6f6174456c6c697074696346756e6374696f6e73-72616273:

.. index::
   pair: FloatEllipticFunctions; rabs

:spadfun:`rabs`\: \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Float <l466c6f6174>`\  
  Undocumented.


.. index::
   pair: FloatEllipticFunctions; rabs

:spadfun:`rabs`\: \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Float <l466c6f6174>`\  
  Undocumented.

.. _l466c6f6174456c6c697074696346756e6374696f6e73-736e32:

.. index::
   pair: FloatEllipticFunctions; sn2

:spadfun:`sn2`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  Undocumented.


.. index::
   pair: FloatEllipticFunctions; sn2

:spadfun:`sn2`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Float <l466c6f6174>`\  
  Undocumented.

.. _l466c6f6174456c6c697074696346756e6374696f6e73-776569657273747261737348616c66506572696f6473:

.. index::
   pair: FloatEllipticFunctions; weierstrassHalfPeriods

:spadfun:`weierstrassHalfPeriods`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``weierstrassHalfPeriods(g2, g3)``\  computes half periods of Weierstrass elliptic functions from invariants \ ``g2``\ , \ ``g3``\ .

.. _l466c6f6174456c6c697074696346756e6374696f6e73-7765696572737472617373496e76617269616e7473:

.. index::
   pair: FloatEllipticFunctions; weierstrassInvariants

:spadfun:`weierstrassInvariants`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``weierstrassInvariants(w1, w2)``\  computes invariants \ ``g2``\ , \ ``g3``\  of Weierstrass elliptic functions from half periods \ ``w1``\ , \ ``w2``\ .

.. _l466c6f6174456c6c697074696346756e6374696f6e73-776569657273747261737350:

.. index::
   pair: FloatEllipticFunctions; weierstrassP

:spadfun:`weierstrassP`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``weierstrassP(g2, g3, x)``\  is the Weierstrass \ ``P``\  function


.. index::
   pair: FloatEllipticFunctions; weierstrassP

:spadfun:`weierstrassP`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Float <l466c6f6174>`\  
  \ ``weierstrassP(g2, g3, x)``\  is the Weierstrass \ ``P``\  function

.. _l466c6f6174456c6c697074696346756e6374696f6e73-7765696572737472617373505072696d65:

.. index::
   pair: FloatEllipticFunctions; weierstrassPPrime

:spadfun:`weierstrassPPrime`\: (\ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Complex <l436f6d706c6578>`\  \ :ref:`Float <l466c6f6174>`\  
  \ ``weierstrassPPrime(g2, g3, x)``\  is the derivative of the Weierstrass \ ``P``\  function


.. index::
   pair: FloatEllipticFunctions; weierstrassPPrime

:spadfun:`weierstrassPPrime`\: (\ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Float <l466c6f6174>`\  
  \ ``weierstrassPPrime(g2, g3, x)``\  is the derivative of the Weierstrass \ ``P``\  function


