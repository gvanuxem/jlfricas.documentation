.. index:: FramedModule

.. _l4672616d65644d6f64756c65:

FramedModule R
==============

:viewcode:`algcat.spad line 1 <algcat.spad#L1>` :editcode:`[edit on github] <algcat.spad#L1>`

* R: Join(\ :ref:`SemiRng <l53656d69526e67>`\ , \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ )


A \ :ref:`FramedModule <l4672616d65644d6f64756c65>`\  is a finite rank free module with fixed \ ``R``\ -module basis.


.. _l4672616d65644d6f64756c65-30:

\ :ref:`0 <l4162656c69616e4d6f6e6f6964-30>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4672616d65644d6f64756c65-2a:

\ :ref:`\* <l4162656c69616e47726f7570-2a>`\ \: (\ :ref:`Integer <l496e7465676572>`\ , %) -> % if R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`\* <l4162656c69616e4d6f6e6f6964-2a>`\ \: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`\* <l4162656c69616e53656d6947726f7570-2a>`\ \: (\ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 


\ :ref:`\* <l4c6566744d6f64756c65-2a>`\ \: (R, %) -> % 
  from \ :ref:`LeftModule <l4c6566744d6f64756c65>`\  R

.. _l4672616d65644d6f64756c65-2b:

\ :ref:`+ <l4162656c69616e53656d6947726f7570-2b>`\ \: (%, %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l4672616d65644d6f64756c65-2d:

\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: % -> % if R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 


\ :ref:`- <l4162656c69616e47726f7570-2d>`\ \: (%, %) -> % if R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 

.. _l4672616d65644d6f64756c65-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4672616d65644d6f64756c65-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4672616d65644d6f64756c65-6261736973:

.. index::
   pair: FramedModule; basis

:spadfun:`basis`\: () -> \ :ref:`Vector <l566563746f72>`\  % 
  \ ``basis()``\  returns the fixed \ ``R``\ -module basis.

.. _l4672616d65644d6f64756c65-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l4672616d65644d6f64756c65-636f6e76657274:

\ :ref:`convert <l436f6e7665727469626c65546f-636f6e76657274>`\ \: % -> \ :ref:`InputForm <l496e707574466f726d>`\  if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 


.. index::
   pair: FramedModule; convert

:spadfun:`convert`\: % -> \ :ref:`Vector <l566563746f72>`\  R 
  \ ``convert(a)``\  returns the coordinates of \ ``a``\  with respect to the fixed \ ``R``\ -module basis.


.. index::
   pair: FramedModule; convert

:spadfun:`convert`\: \ :ref:`Vector <l566563746f72>`\  R -> % 
  \ ``convert([a1, .., an])``\  returns \ ``a1*v1 + ... + an*vn``\ , where \ ``v1``\ , ..., \ ``vn``\  are the elements of the fixed basis.

.. _l4672616d65644d6f64756c65-636f6f7264696e61746573:

.. index::
   pair: FramedModule; coordinates

:spadfun:`coordinates`\: % -> \ :ref:`Vector <l566563746f72>`\  R 
  \ ``coordinates(a)``\  returns the coordinates of \ ``a``\  with respect to the fixed \ ``R``\ -module basis.


.. index::
   pair: FramedModule; coordinates

:spadfun:`coordinates`\: \ :ref:`Vector <l566563746f72>`\  % -> \ :ref:`Matrix <l4d6174726978>`\  R 
  \ ``coordinates([v1, ..., vm])``\  returns the coordinates of the \ ``vi``\ \ ``'s``\  with to the fixed basis. The coordinates of \ ``vi``\  are contained in the \ ``i``\ th row of the matrix returned by this function.

.. _l4672616d65644d6f64756c65-656e756d6572617465:

\ :ref:`enumerate <l46696e697465-656e756d6572617465>`\ \: () -> \ :ref:`List <l4c697374>`\  % if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Finite <l46696e697465>`\ 

.. _l4672616d65644d6f64756c65-68617368:

\ :ref:`hash <l4861736861626c65-68617368>`\ \: % -> \ :ref:`SingleInteger <l53696e676c65496e7465676572>`\  if R has \ :ref:`Hashable <l4861736861626c65>`\ 
  from \ :ref:`Hashable <l4861736861626c65>`\ 

.. _l4672616d65644d6f64756c65-6861736855706461746521:

\ :ref:`hashUpdate! <l4861736861626c65-6861736855706461746521>`\ \: (\ :ref:`HashState <l486173685374617465>`\ , %) -> \ :ref:`HashState <l486173685374617465>`\  if R has \ :ref:`Hashable <l4861736861626c65>`\ 
  from \ :ref:`Hashable <l4861736861626c65>`\ 

.. _l4672616d65644d6f64756c65-696e646578:

\ :ref:`index <l46696e697465-696e646578>`\ \: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> % if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Finite <l46696e697465>`\ 

.. _l4672616d65644d6f64756c65-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4672616d65644d6f64756c65-6c6f6f6b7570:

\ :ref:`lookup <l46696e697465-6c6f6f6b7570>`\ \: % -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Finite <l46696e697465>`\ 

.. _l4672616d65644d6f64756c65-6f70706f736974653f:

\ :ref:`opposite? <l4162656c69616e4d6f6e6f6964-6f70706f736974653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4672616d65644d6f64756c65-72616e646f6d:

\ :ref:`random <l46696e697465-72616e646f6d>`\ \: () -> % if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Finite <l46696e697465>`\ 

.. _l4672616d65644d6f64756c65-72616e6b:

.. index::
   pair: FramedModule; rank

:spadfun:`rank`\: () -> \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  
  \ ``rank()``\  returns the rank of the module

.. _l4672616d65644d6f64756c65-726570726573656e7473:

.. index::
   pair: FramedModule; represents

:spadfun:`represents`\: \ :ref:`Vector <l566563746f72>`\  R -> % 
  \ ``represents([a1, .., an])``\  returns \ ``a1*v1 + ... + an*vn``\ , where \ ``v1``\ , ..., \ ``vn``\  are the elements of the fixed basis.

.. _l4672616d65644d6f64756c65-73616d706c65:

\ :ref:`sample <l4162656c69616e4d6f6e6f6964-73616d706c65>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l4672616d65644d6f64756c65-73697a65:

\ :ref:`size <l46696e697465-73697a65>`\ \: () -> \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\  if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Finite <l46696e697465>`\ 

.. _l4672616d65644d6f64756c65-736d616c6c65723f:

\ :ref:`smaller? <l436f6d70617261626c65-736d616c6c65723f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if R has \ :ref:`Finite <l46696e697465>`\ 
  from \ :ref:`Comparable <l436f6d70617261626c65>`\ 

.. _l4672616d65644d6f64756c65-7375627472616374496643616e:

\ :ref:`subtractIfCan <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-7375627472616374496643616e>`\ \: (%, %) -> Union(%, failed) if R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\ 

.. _l4672616d65644d6f64756c65-7a65726f3f:

\ :ref:`zero? <l4162656c69616e4d6f6e6f6964-7a65726f3f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\  if R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 

\ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\  

\ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\  

\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CancellationAbelianMonoid <l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964>`\  if R has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`Comparable <l436f6d70617261626c65>`\  if R has \ :ref:`Finite <l46696e697465>`\ 

\ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\  if R has \ :ref:`Finite <l46696e697465>`\ 

\ :ref:`Finite <l46696e697465>`\  if R has \ :ref:`Finite <l46696e697465>`\ 

\ :ref:`Hashable <l4861736861626c65>`\  if R has \ :ref:`Hashable <l4861736861626c65>`\ 

\ :ref:`LeftModule <l4c6566744d6f64756c65>`\  R 

\ :ref:`SetCategory <l53657443617465676f7279>`\  

