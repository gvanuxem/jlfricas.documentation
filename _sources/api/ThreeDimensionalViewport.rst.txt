.. index:: ThreeDimensionalViewport

.. _l546872656544696d656e73696f6e616c56696577706f7274:

ThreeDimensionalViewport
========================

:viewcode:`view3D.spad line 1 <view3D.spad#L1>` :editcode:`[edit on github] <view3D.spad#L1>`


ThreeDimensionalViewport creates viewports to display graphs


.. _l546872656544696d656e73696f6e616c56696577706f7274-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l546872656544696d656e73696f6e616c56696577706f7274-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l546872656544696d656e73696f6e616c56696577706f7274-61786573:

.. index::
   pair: ThreeDimensionalViewport; axes

:spadfun:`axes`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``axes(v, s)``\  displays the axes of the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , if \ ``s``\  is "on", or does not display the axes if \ ``s``\  is "off".

.. _l546872656544696d656e73696f6e616c56696577706f7274-636c697053757266616365:

.. index::
   pair: ThreeDimensionalViewport; clipSurface

:spadfun:`clipSurface`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``clipSurface(v, s)``\  displays the graph with the specified clipping region removed if \ ``s``\  is "on", or displays the graph without clipping implemented if \ ``s``\  is "off", for the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-636c6f7365:

.. index::
   pair: ThreeDimensionalViewport; close

:spadfun:`close`\: % -> \ :ref:`Void <l566f6964>`\  
  \ ``close(v)``\  closes the viewport window of the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , and terminates the corresponding process ID.

.. _l546872656544696d656e73696f6e616c56696577706f7274-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l546872656544696d656e73696f6e616c56696577706f7274-636f6c6f72446566:

.. index::
   pair: ThreeDimensionalViewport; colorDef

:spadfun:`colorDef`\: (%, \ :ref:`Color <l436f6c6f72>`\ , \ :ref:`Color <l436f6c6f72>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``colorDef(v, c1, c2)``\  sets the range of colors along the colormap so that the lower end of the colormap is defined by \ ``c1``\  and the top end of the colormap is defined by \ ``c2``\ , for the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-636f6e74726f6c50616e656c:

.. index::
   pair: ThreeDimensionalViewport; controlPanel

:spadfun:`controlPanel`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``controlPanel(v, s)``\  displays the control panel of the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , if \ ``s``\  is "on", or hides the control panel if \ ``s``\  is "off".

.. _l546872656544696d656e73696f6e616c56696577706f7274-646961676f6e616c73:

.. index::
   pair: ThreeDimensionalViewport; diagonals

:spadfun:`diagonals`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``diagonals(v, s)``\  displays the diagonals of the polygon outline showing a triangularized surface instead of a quadrilateral surface outline, for the given three-dimensional viewport \ ``v``\  which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , if \ ``s``\  is "on", or does not display the diagonals if \ ``s``\  is "off".

.. _l546872656544696d656e73696f6e616c56696577706f7274-64696d656e73696f6e73:

.. index::
   pair: ThreeDimensionalViewport; dimensions

:spadfun:`dimensions`\: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``dimensions(v, x, y, width, height)``\  sets the position of the upper left-hand corner of the three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , to the window coordinate \ ``x``\ , \ ``y``\ , and sets the dimensions of the window to that of \ ``width``\ , \ ``height``\ . The new dimensions are not displayed until the function \ :spadfun:`makeViewport3D`\  is executed again for \ ``v``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-647261775374796c65:

.. index::
   pair: ThreeDimensionalViewport; drawStyle

:spadfun:`drawStyle`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``drawStyle(v, s)``\  displays the surface for the given three-dimensional viewport \ ``v``\  which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\  in the style of drawing indicated by \ ``s``\ . If \ ``s``\  is not a valid drawing style the style is wireframe by default. Possible styles are \ ``"shade"``\ , \ ``"solid"``\  or \ ``"opaque"``\ , \ ``"smooth"``\ , and \ ``"wireMesh"``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-65796544697374616e6365:

.. index::
   pair: ThreeDimensionalViewport; eyeDistance

:spadfun:`eyeDistance`\: (%, \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``eyeDistance(v, d)``\  sets the distance of the observer from the center of the graph to \ ``d``\ , for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-686974686572506c616e65:

.. index::
   pair: ThreeDimensionalViewport; hitherPlane

:spadfun:`hitherPlane`\: (%, \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``hitherPlane(v, h)``\  sets the hither clipping plane of the graph to \ ``h``\ , for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-696e74656e73697479:

.. index::
   pair: ThreeDimensionalViewport; intensity

:spadfun:`intensity`\: (%, \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``intensity(v, i)``\  sets the intensity of the light source to \ ``i``\ , for the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-6b6579:

.. index::
   pair: ThreeDimensionalViewport; key

:spadfun:`key`\: % -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``key(v)``\  returns the process ID number of the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l546872656544696d656e73696f6e616c56696577706f7274-6c69676874696e67:

.. index::
   pair: ThreeDimensionalViewport; lighting

:spadfun:`lighting`\: (%, \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``lighting(v, x, y, z)``\  sets the position of the light source to the coordinates \ ``x``\ , \ ``y``\ , and \ ``z``\  and displays the graph for the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-6d616b6556696577706f72743344:

.. index::
   pair: ThreeDimensionalViewport; makeViewport3D

:spadfun:`makeViewport3D`\: % -> % 
  \ ``makeViewport3D(v)``\  takes the given three-dimensional viewport, \ ``v``\ , of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\  and displays a viewport window on the screen which contains the contents of \ ``v``\ .


.. index::
   pair: ThreeDimensionalViewport; makeViewport3D

:spadfun:`makeViewport3D`\: (\ :ref:`ThreeSpace <l54687265655370616365>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`DrawOption <l447261774f7074696f6e>`\ ) -> % 
  \ ``makeViewport3D(sp, lopt)``\  takes the given space, \ ``sp``\  which is of the domain \ :ref:`ThreeSpace <l54687265655370616365>`\  and displays a viewport window on the screen which contains the contents of \ ``sp``\ , and whose draw options are indicated by the list \ ``lopt``\ , which is a list of options from the domain \ ``DrawOption``\ .


.. index::
   pair: ThreeDimensionalViewport; makeViewport3D

:spadfun:`makeViewport3D`\: (\ :ref:`ThreeSpace <l54687265655370616365>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , \ :ref:`String <l537472696e67>`\ ) -> % 
  \ ``makeViewport3D(sp, s)``\  takes the given space, \ ``sp``\  which is of the domain \ :ref:`ThreeSpace <l54687265655370616365>`\  and displays a viewport window on the screen which contains the contents of \ ``sp``\ , and whose title is given by \ ``s``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-6d6f64696679506f696e7444617461:

.. index::
   pair: ThreeDimensionalViewport; modifyPointData

:spadfun:`modifyPointData`\: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`Point <l506f696e74>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``modifyPointData(v, ind, pt)``\  takes the viewport, \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , and places the data point, \ ``pt``\  into the list of points database of \ ``v``\  at the index location given by \ ``ind``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-6d6f7665:

.. index::
   pair: ThreeDimensionalViewport; move

:spadfun:`move`\: (%, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``move(v, x, y)``\  displays the three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , with the upper left-hand corner of the viewport window at the screen coordinate position \ ``x``\ , \ ``y``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-6f7074696f6e73:

.. index::
   pair: ThreeDimensionalViewport; options

:spadfun:`options`\: % -> \ :ref:`List <l4c697374>`\  \ :ref:`DrawOption <l447261774f7074696f6e>`\  
  \ ``options(v)``\  takes the viewport, \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\  and returns a list of all the draw options from the domain \ ``DrawOption``\  which are being used by \ ``v``\ .


.. index::
   pair: ThreeDimensionalViewport; options

:spadfun:`options`\: (%, \ :ref:`List <l4c697374>`\  \ :ref:`DrawOption <l447261774f7074696f6e>`\ ) -> % 
  \ ``options(v, lopt)``\  takes the viewport, \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\  and sets the draw options being used by \ ``v``\  to those indicated in the list, \ ``lopt``\ , which is a list of options from the domain \ ``DrawOption``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-6f75746c696e6552656e646572:

.. index::
   pair: ThreeDimensionalViewport; outlineRender

:spadfun:`outlineRender`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``outlineRender(v, s)``\  displays the polygon outline showing either triangularized surface or a quadrilateral surface outline depending on the whether the \ :spadfun:`diagonals`\  function has been set, for the given three-dimensional viewport \ ``v``\  which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , if \ ``s``\  is "on", or does not display the polygon outline if \ ``s``\  is "off".

.. _l546872656544696d656e73696f6e616c56696577706f7274-7065727370656374697665:

.. index::
   pair: ThreeDimensionalViewport; perspective

:spadfun:`perspective`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``perspective(v,s)``\  displays the graph in perspective if \ ``s``\  is "on", or does not display perspective if \ ``s``\  is "off" for the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-7265736574:

.. index::
   pair: ThreeDimensionalViewport; reset

:spadfun:`reset`\: % -> \ :ref:`Void <l566f6964>`\  
  \ ``reset(v)``\  sets the current state of the graph characteristics of the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , back to their initial settings.

.. _l546872656544696d656e73696f6e616c56696577706f7274-726573697a65:

.. index::
   pair: ThreeDimensionalViewport; resize

:spadfun:`resize`\: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``resize(v, w, h)``\  displays the three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , with a width of \ ``w``\  and a height of \ ``h``\ , keeping the upper left-hand corner position unchanged.

.. _l546872656544696d656e73696f6e616c56696577706f7274-726f74617465:

.. index::
   pair: ThreeDimensionalViewport; rotate

:spadfun:`rotate`\: (%, \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``rotate(v, th, phi)``\  rotates the graph to the longitudinal view angle \ ``th``\  radians and the latitudinal view angle \ ``phi``\  radians for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .


.. index::
   pair: ThreeDimensionalViewport; rotate

:spadfun:`rotate`\: (%, \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``rotate(v, th, phi)``\  rotates the graph to the longitudinal view angle \ ``th``\  degrees and the latitudinal view angle \ ``phi``\  degrees for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ . The new rotation position is not displayed until the function \ :spadfun:`makeViewport3D`\  is executed again for \ ``v``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-73686f77436c6970526567696f6e:

.. index::
   pair: ThreeDimensionalViewport; showClipRegion

:spadfun:`showClipRegion`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``showClipRegion(v, s)``\  displays the clipping region of the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , if \ ``s``\  is "on", or does not display the region if \ ``s``\  is "off".

.. _l546872656544696d656e73696f6e616c56696577706f7274-73686f77526567696f6e:

.. index::
   pair: ThreeDimensionalViewport; showRegion

:spadfun:`showRegion`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``showRegion(v, s)``\  displays the bounding box of the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , if \ ``s``\  is "on", or does not display the box if \ ``s``\  is "off".

.. _l546872656544696d656e73696f6e616c56696577706f7274-7375627370616365:

.. index::
   pair: ThreeDimensionalViewport; subspace

:spadfun:`subspace`\: % -> \ :ref:`ThreeSpace <l54687265655370616365>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\  
  \ ``subspace(v)``\  returns the contents of the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , as a subspace of the domain \ ``ThreeSpace``\ .


.. index::
   pair: ThreeDimensionalViewport; subspace

:spadfun:`subspace`\: (%, \ :ref:`ThreeSpace <l54687265655370616365>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ ) -> % 
  \ ``subspace(v, sp)``\  places the contents of the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , in the subspace \ ``sp``\ , which is of the domain \ ``ThreeSpace``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-7469746c65:

.. index::
   pair: ThreeDimensionalViewport; title

:spadfun:`title`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``title(v, s)``\  changes the title which is shown in the three-dimensional viewport window, \ ``v``\  of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-7472616e736c617465:

.. index::
   pair: ThreeDimensionalViewport; translate

:spadfun:`translate`\: (%, \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``translate(v, dx, dy)``\  sets the horizontal viewport offset to \ ``dx``\  and the vertical viewport offset to \ ``dy``\ , for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-7669657744656c74615844656661756c74:

.. index::
   pair: ThreeDimensionalViewport; viewDeltaXDefault

:spadfun:`viewDeltaXDefault`\: () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``viewDeltaXDefault()``\  returns the current default horizontal offset from the center of the viewport window.


.. index::
   pair: ThreeDimensionalViewport; viewDeltaXDefault

:spadfun:`viewDeltaXDefault`\: \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Float <l466c6f6174>`\  
  \ ``viewDeltaXDefault(dx)``\  sets the current default horizontal offset from the center of the viewport window to be \ ``dx``\  and returns \ ``dx``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-7669657744656c74615944656661756c74:

.. index::
   pair: ThreeDimensionalViewport; viewDeltaYDefault

:spadfun:`viewDeltaYDefault`\: () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``viewDeltaYDefault()``\  returns the current default vertical offset from the center of the viewport window.


.. index::
   pair: ThreeDimensionalViewport; viewDeltaYDefault

:spadfun:`viewDeltaYDefault`\: \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Float <l466c6f6174>`\  
  \ ``viewDeltaYDefault(dy)``\  sets the current default vertical offset from the center of the viewport window to be \ ``dy``\  and returns \ ``dy``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-7669657750686944656661756c74:

.. index::
   pair: ThreeDimensionalViewport; viewPhiDefault

:spadfun:`viewPhiDefault`\: () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``viewPhiDefault()``\  returns the current default latitudinal view angle in radians.


.. index::
   pair: ThreeDimensionalViewport; viewPhiDefault

:spadfun:`viewPhiDefault`\: \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Float <l466c6f6174>`\  
  \ ``viewPhiDefault(p)``\  sets the current default latitudinal view angle in radians to the value \ ``p``\  and returns \ ``p``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-76696577706f696e74:

.. index::
   pair: ThreeDimensionalViewport; viewpoint

:spadfun:`viewpoint`\: % -> Record(theta: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , phi: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , scale: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , scaleX: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , scaleY: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , scaleZ: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , deltaX: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , deltaY: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ ) 
  \ ``viewpoint(v)``\  returns the current viewpoint setting of the given viewport, \ ``v``\ . This function is useful in the situation where the user has created a viewport, proceeded to interact with it via the control panel and desires to save the values of the viewpoint as the default settings for another viewport to be created using the system.


.. index::
   pair: ThreeDimensionalViewport; viewpoint

:spadfun:`viewpoint`\: (%, \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``viewpoint(v, th, phi)``\  sets the longitudinal view angle to \ ``th``\  radians and the latitudinal view angle to \ ``phi``\  radians for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ . The new viewpoint position is not displayed until the function \ :spadfun:`makeViewport3D`\  is executed again for \ ``v``\ .


.. index::
   pair: ThreeDimensionalViewport; viewpoint

:spadfun:`viewpoint`\: (%, \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``viewpoint(v, rotx, roty, rotz)``\  sets the rotation about the \ ``x``\ -axis to be \ ``rotx``\  radians, sets the rotation about the \ ``y``\ -axis to be \ ``roty``\  radians, and sets the rotation about the \ ``z``\ -axis to be \ ``rotz``\  radians, for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\  and displays \ ``v``\  with the new view position.


.. index::
   pair: ThreeDimensionalViewport; viewpoint

:spadfun:`viewpoint`\: (%, \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``viewpoint(v, th, phi, s, dx, dy)``\  sets the longitudinal view angle to \ ``th``\  radians, the latitudinal view angle to \ ``phi``\  radians, the scale factor to \ ``s``\ , the horizontal viewport offset to \ ``dx``\ , and the vertical viewport offset to \ ``dy``\  for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ . The new viewpoint position is not displayed until the function \ :spadfun:`makeViewport3D`\  is executed again for \ ``v``\ .


.. index::
   pair: ThreeDimensionalViewport; viewpoint

:spadfun:`viewpoint`\: (%, \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``viewpoint(v, th, phi, s, dx, dy)``\  sets the longitudinal view angle to \ ``th``\  degrees, the latitudinal view angle to \ ``phi``\  degrees, the scale factor to \ ``s``\ , the horizontal viewport offset to \ ``dx``\ , and the vertical viewport offset to \ ``dy``\  for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ . The new viewpoint position is not displayed until the function \ :spadfun:`makeViewport3D`\  is executed again for \ ``v``\ .


.. index::
   pair: ThreeDimensionalViewport; viewpoint

:spadfun:`viewpoint`\: (%, Record(theta: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , phi: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , scale: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , scaleX: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , scaleY: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , scaleZ: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , deltaX: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ , deltaY: \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ )) -> \ :ref:`Void <l566f6964>`\  
  \ ``viewpoint(v, viewpt)``\  sets the viewpoint for the viewport. The viewport record consists of the latitudal and longitudal angles, the zoom factor, the \ ``X``\ , \ ``Y``\ , and \ ``Z``\  scales, and the \ ``X``\  and \ ``Y``\  displacements.

.. _l546872656544696d656e73696f6e616c56696577706f7274-76696577706f72743344:

.. index::
   pair: ThreeDimensionalViewport; viewport3D

:spadfun:`viewport3D`\: () -> % 
  \ ``viewport3D()``\  returns an undefined three-dimensional viewport of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\  whose contents are empty.

.. _l546872656544696d656e73696f6e616c56696577706f7274-76696577546865746144656661756c74:

.. index::
   pair: ThreeDimensionalViewport; viewThetaDefault

:spadfun:`viewThetaDefault`\: () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``viewThetaDefault()``\  returns the current default longitudinal view angle in radians.


.. index::
   pair: ThreeDimensionalViewport; viewThetaDefault

:spadfun:`viewThetaDefault`\: \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Float <l466c6f6174>`\  
  \ ``viewThetaDefault(t)``\  sets the current default longitudinal view angle in radians to the value \ ``t``\  and returns \ ``t``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-766965775a6f6f6d44656661756c74:

.. index::
   pair: ThreeDimensionalViewport; viewZoomDefault

:spadfun:`viewZoomDefault`\: () -> \ :ref:`Float <l466c6f6174>`\  
  \ ``viewZoomDefault()``\  returns the current default graph scaling value.


.. index::
   pair: ThreeDimensionalViewport; viewZoomDefault

:spadfun:`viewZoomDefault`\: \ :ref:`Float <l466c6f6174>`\  -> \ :ref:`Float <l466c6f6174>`\  
  \ ``viewZoomDefault(s)``\  sets the current default graph scaling value to \ ``s``\  and returns \ ``s``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-7772697465:

.. index::
   pair: ThreeDimensionalViewport; write

:spadfun:`write`\: (%, \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`String <l537472696e67>`\  
  \ ``write(v, s)``\  takes the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , and creates a directory indicated by \ ``s``\ , which contains the graph data file for \ ``v``\ .


.. index::
   pair: ThreeDimensionalViewport; write

:spadfun:`write`\: (%, \ :ref:`String <l537472696e67>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`String <l537472696e67>`\  
  \ ``write(v, s, lf)``\  takes the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , and creates a directory indicated by \ ``s``\ , which contains the graph data file for \ ``v``\  and the optional file types indicated by the list \ ``lf``\ .


.. index::
   pair: ThreeDimensionalViewport; write

:spadfun:`write`\: (%, \ :ref:`String <l537472696e67>`\ , \ :ref:`String <l537472696e67>`\ ) -> \ :ref:`String <l537472696e67>`\  
  \ ``write(v, s, f)``\  takes the given three-dimensional viewport, \ ``v``\ , which is of domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ , and creates a directory indicated by \ ``s``\ , which contains the graph data file for \ ``v``\  and an optional file type \ ``f``\ .

.. _l546872656544696d656e73696f6e616c56696577706f7274-7a6f6f6d:

.. index::
   pair: ThreeDimensionalViewport; zoom

:spadfun:`zoom`\: (%, \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``zoom(v, s)``\  sets the graph scaling factor to \ ``s``\ , for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .


.. index::
   pair: ThreeDimensionalViewport; zoom

:spadfun:`zoom`\: (%, \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ , \ :ref:`Float <l466c6f6174>`\ ) -> \ :ref:`Void <l566f6964>`\  
  \ ``zoom(v, sx, sy, sz)``\  sets the graph scaling factors for the \ ``x``\ -coordinate axis to \ ``sx``\ , the \ ``y``\ -coordinate axis to \ ``sy``\  and the \ ``z``\ -coordinate axis to \ ``sz``\  for the viewport \ ``v``\ , which is of the domain \ :ref:`ThreeDimensionalViewport <l546872656544696d656e73696f6e616c56696577706f7274>`\ .


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

