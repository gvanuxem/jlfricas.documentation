.. index:: PolynomialSolveByFormulas

.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173:

PolynomialSolveByFormulas(UP, F, RR)
====================================

:viewcode:`solverad.spad line 1 <solverad.spad#L1>` :editcode:`[edit on github] <solverad.spad#L1>`

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  F

* F: \ :ref:`Field <l4669656c64>`\  with

    ^\: (%, \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> %

* RR: Join(\ :ref:`PolynomialFactorizationExplicit <l506f6c796e6f6d69616c466163746f72697a6174696f6e4578706c69636974>`\ , \ :ref:`Comparable <l436f6d70617261626c65>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ )


This package factors the formulas out of the general solve code, allowing their recursive use over different domains. Care is taken to introduce few radicals so that radical extension domains can more easily simplify the results.


.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173-614375626963:

.. index::
   pair: PolynomialSolveByFormulas; aCubic

:spadfun:`aCubic`\: (F, F, F, F) -> F 
  \ ``aCubic(f, g, h, j)``\  \undocumented

.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173-614c696e656172:

.. index::
   pair: PolynomialSolveByFormulas; aLinear

:spadfun:`aLinear`\: (F, F) -> F 
  \ ``aLinear(f, g)``\  \undocumented

.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173-61517561647261746963:

.. index::
   pair: PolynomialSolveByFormulas; aQuadratic

:spadfun:`aQuadratic`\: (F, F, F) -> F 
  \ ``aQuadratic(f, g, h)``\  \undocumented

.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173-6151756172746963:

.. index::
   pair: PolynomialSolveByFormulas; aQuartic

:spadfun:`aQuartic`\: (F, F, F, F, F) -> F 
  \ ``aQuartic(f, g, h, i, k)``\  \undocumented

.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173-6375626963:

.. index::
   pair: PolynomialSolveByFormulas; cubic

:spadfun:`cubic`\: (F, F, F, F) -> \ :ref:`List <l4c697374>`\  F 
  \ ``cubic(f, g, h, i)``\  \undocumented


.. index::
   pair: PolynomialSolveByFormulas; cubic

:spadfun:`cubic`\: UP -> \ :ref:`List <l4c697374>`\  F 
  \ ``cubic(u)``\  \undocumented

.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173-6c696e656172:

.. index::
   pair: PolynomialSolveByFormulas; linear

:spadfun:`linear`\: (F, F) -> \ :ref:`List <l4c697374>`\  F 
  \ ``linear(f, g)``\  \undocumented


.. index::
   pair: PolynomialSolveByFormulas; linear

:spadfun:`linear`\: UP -> \ :ref:`List <l4c697374>`\  F 
  \ ``linear(u)``\  \undocumented

.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173-706172746963756c6172536f6c7574696f6e:

.. index::
   pair: PolynomialSolveByFormulas; particularSolution

:spadfun:`particularSolution`\: UP -> F 
  \ ``particularSolution(u)``\  \undocumented

.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173-717561647261746963:

.. index::
   pair: PolynomialSolveByFormulas; quadratic

:spadfun:`quadratic`\: (F, F, F) -> \ :ref:`List <l4c697374>`\  F 
  \ ``quadratic(f, g, h)``\  \undocumented


.. index::
   pair: PolynomialSolveByFormulas; quadratic

:spadfun:`quadratic`\: UP -> \ :ref:`List <l4c697374>`\  F 
  \ ``quadratic(u)``\  \undocumented

.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173-71756172746963:

.. index::
   pair: PolynomialSolveByFormulas; quartic

:spadfun:`quartic`\: (F, F, F, F, F) -> \ :ref:`List <l4c697374>`\  F 
  \ ``quartic(f, g, h, i, j)``\  \undocumented


.. index::
   pair: PolynomialSolveByFormulas; quartic

:spadfun:`quartic`\: UP -> \ :ref:`List <l4c697374>`\  F 
  \ ``quartic(u)``\  \undocumented

.. _l506f6c796e6f6d69616c536f6c76654279466f726d756c6173-736f6c7665:

.. index::
   pair: PolynomialSolveByFormulas; solve

:spadfun:`solve`\: UP -> \ :ref:`List <l4c697374>`\  F 
  \ ``solve(u)``\  \undocumented


