.. index:: PatternMatchFunctionSpace

.. _l5061747465726e4d6174636846756e6374696f6e5370616365:

PatternMatchFunctionSpace(S, R, F)
==================================

:viewcode:`patmatch1.spad line 807 <patmatch1.spad#L807>` :editcode:`[edit on github] <patmatch1.spad#L807>`

* S: \ :ref:`SetCategory <l53657443617465676f7279>`\ 

* R: Join(\ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ , \ :ref:`Comparable <l436f6d70617261626c65>`\ , \ :ref:`PatternMatchable <l5061747465726e4d6174636861626c65>`\  S)

* F: Join(\ :ref:`FunctionSpace <l46756e6374696f6e5370616365>`\  R, \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`Pattern <l5061747465726e>`\  S, \ :ref:`PatternMatchable <l5061747465726e4d6174636861626c65>`\  S, \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Kernel <l4b65726e656c>`\  %)


This package provides pattern matching functions on function spaces.


.. _l5061747465726e4d6174636846756e6374696f6e5370616365-7061747465726e4d61746368:

.. index::
   pair: PatternMatchFunctionSpace; patternMatch

:spadfun:`patternMatch`\: (F, \ :ref:`Pattern <l5061747465726e>`\  S, \ :ref:`PatternMatchResult <l5061747465726e4d61746368526573756c74>`\ (S, F)) -> \ :ref:`PatternMatchResult <l5061747465726e4d61746368526573756c74>`\ (S, F) 
  \ ``patternMatch(expr, pat, res)``\  matches the pattern \ ``pat``\  to the expression \ ``expr``\ ; res contains the variables of \ ``pat``\  which are already matched and their matches.


