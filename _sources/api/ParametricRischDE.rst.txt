.. index:: ParametricRischDE

.. _l506172616d657472696352697363684445:

ParametricRischDE(R, F)
=======================

:viewcode:`intpar.spad line 815 <intpar.spad#L815>` :editcode:`[edit on github] <intpar.spad#L815>`

* R: Join(\ :ref:`GcdDomain <l476364446f6d61696e>`\ , \ :ref:`Comparable <l436f6d70617261626c65>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`LinearlyExplicitOver <l4c696e6561726c794578706c696369744f766572>`\  \ :ref:`Integer <l496e7465676572>`\ )

* F: Join(\ :ref:`TranscendentalFunctionCategory <l5472616e7363656e64656e74616c46756e6374696f6e43617465676f7279>`\ , \ :ref:`AlgebraicallyClosedField <l416c67656272616963616c6c79436c6f7365644669656c64>`\ , \ :ref:`FunctionSpace <l46756e6374696f6e5370616365>`\  R)


This package implements parametric RDE solver. Only simplest algebraic cases are implemented, the rest of algebraic case is unimplemented. The code throws errors on inimplmented cases.


.. _l506172616d657472696352697363684445-6578705f6c6f7765725f626f756e64:

.. index::
   pair: ParametricRischDE; exp_lower_bound

:spadfun:`exp_lower_bound`\: (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F, \ :ref:`LaurentPolynomial <l4c617572656e74506f6c796e6f6d69616c>`\ (F, \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  F), \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, F, (\ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, \ :ref:`List <l4c697374>`\  F) -> Record(logands: \ :ref:`List <l4c697374>`\  F, basis: \ :ref:`List <l4c697374>`\  \ :ref:`Vector <l566563746f72>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )) -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``exp_lower_bound(a, b, ob, nc0, lk, eta, logi)``\  computes lower degree bound for solution of \ ``a*D(y) + b*y = c``\  in exponential case. \ ``ob``\  is order of \ ``b``\ , \ ``nc0``\  is lower bound on order of \ ``c``\ , \ ``eta``\  is derivative of the argument of exponential.

.. _l506172616d657472696352697363684445-706172616d5f72646532:

.. index::
   pair: ParametricRischDE; param_rde2

:spadfun:`param_rde2`\: (F, \ :ref:`List <l4c697374>`\  F, \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, (\ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, \ :ref:`List <l4c697374>`\  F) -> \ :ref:`List <l4c697374>`\  Record(ratpart: F, coeffs: \ :ref:`Vector <l566563746f72>`\  F), (\ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, \ :ref:`List <l4c697374>`\  F) -> Record(logands: \ :ref:`List <l4c697374>`\  F, basis: \ :ref:`List <l4c697374>`\  \ :ref:`Vector <l566563746f72>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )) -> \ :ref:`List <l4c697374>`\  Record(ratpart: F, coeffs: \ :ref:`Vector <l566563746f72>`\  F) 
  \ ``param_rde2(fp, lg, x, lk, ext, logi)``\  finds basis of solution to the equation dy/dx + \ ``fp``\  \ ``y``\  + \ ``c1``\  \ ``g1``\  + ... \ ``cn``\  \ ``gn``\  = 0 where \ ``y``\  is in field generated by \ ``lk``\  and \ ``ci``\  are constants.

.. _l506172616d657472696352697363684445-706172616d5f726465:

.. index::
   pair: ParametricRischDE; param_rde

:spadfun:`param_rde`\: (\ :ref:`Integer <l496e7465676572>`\ , F, F, \ :ref:`List <l4c697374>`\  F, \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, (\ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, \ :ref:`List <l4c697374>`\  F) -> \ :ref:`List <l4c697374>`\  Record(ratpart: F, coeffs: \ :ref:`Vector <l566563746f72>`\  F), (\ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, \ :ref:`List <l4c697374>`\  F) -> Record(logands: \ :ref:`List <l4c697374>`\  F, basis: \ :ref:`List <l4c697374>`\  \ :ref:`Vector <l566563746f72>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )) -> Record(particular: Union(Record(ratpart: F, coeffs: \ :ref:`Vector <l566563746f72>`\  F), failed), basis: \ :ref:`List <l4c697374>`\  Record(ratpart: F, coeffs: \ :ref:`Vector <l566563746f72>`\  F)) 
  \ ``param_rde(n, f, h, lg, x, lk, ext, logi)``\  finds a particular solution and basis of solutions to homogeneous equation for equation dy/dx + \ ``n``\  df/dx \ ``y``\  + \ ``c1``\  \ ``g1``\  + ... \ ``cn``\  \ ``gn``\  = \ ``h``\  where \ ``y``\  is in field generated by \ ``lk``\  and \ ``ci``\  are constants.


.. index::
   pair: ParametricRischDE; param_rde

:spadfun:`param_rde`\: (\ :ref:`Integer <l496e7465676572>`\ , F, \ :ref:`List <l4c697374>`\  F, \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, (\ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, \ :ref:`List <l4c697374>`\  F) -> \ :ref:`List <l4c697374>`\  Record(ratpart: F, coeffs: \ :ref:`Vector <l566563746f72>`\  F), (\ :ref:`List <l4c697374>`\  \ :ref:`Kernel <l4b65726e656c>`\  F, \ :ref:`List <l4c697374>`\  F) -> Record(logands: \ :ref:`List <l4c697374>`\  F, basis: \ :ref:`List <l4c697374>`\  \ :ref:`Vector <l566563746f72>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )) -> \ :ref:`List <l4c697374>`\  Record(ratpart: F, coeffs: \ :ref:`Vector <l566563746f72>`\  F) 
  \ ``param_rde(n, f, lg, x, lk, ext, logi)``\  finds basis of solution to the equation dy/dx + \ ``n``\  df/dx \ ``y``\  + \ ``c1``\  \ ``g1``\  + ... \ ``cn``\  \ ``gn``\  = 0 where \ ``y``\  is in field generated by \ ``lk``\  and \ ``ci``\  are constants.


