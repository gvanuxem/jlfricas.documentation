.. index:: NPCoef

.. _l4e50436f6566:

NPCoef(BP, E, OV, R, P)
=======================

:viewcode:`npcoef.spad line 1 <npcoef.spad#L1>` :editcode:`[edit on github] <npcoef.spad#L1>`

* BP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  R

* E: \ :ref:`OrderedAbelianMonoidSup <l4f7264657265644162656c69616e4d6f6e6f6964537570>`\ 

* OV: \ :ref:`OrderedSet <l4f726465726564536574>`\ 

* R: \ :ref:`IntegralDomain <l496e74656772616c446f6d61696e>`\ 

* P: \ :ref:`PolynomialCategory <l506f6c796e6f6d69616c43617465676f7279>`\ (R, E, OV)


Package for the determination of the coefficients in the lifting process. Used by \ :ref:`MultivariateLifting <l4d756c7469766172696174654c696674696e67>`\ . This package will work for every integral domain \ ``R``\ . The same method is described in [1] section 2.3.4.


.. _l4e50436f6566-6e70636f6566:

.. index::
   pair: NPCoef; npcoef

:spadfun:`npcoef`\: (\ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  P, \ :ref:`List <l4c697374>`\  BP, \ :ref:`List <l4c697374>`\  P) -> Record(deter: \ :ref:`List <l4c697374>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  P, dterm: \ :ref:`List <l4c697374>`\  \ :ref:`List <l4c697374>`\  Record(expt: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , pcoef: P), nfacts: \ :ref:`List <l4c697374>`\  BP, nlead: \ :ref:`List <l4c697374>`\  P) 
  \ ``npcoef(p, lmf, lcf)``\  tries to determine some coefficients of factors of \ ``p``\  assuming that \ ``lcf``\  gives \ ``true``\  leading coefficients of the factors and that sparsity pattern of modular factors \ ``lmf``\  is the same as sparsity pattern of \ ``true``\  factors. If \ ``res``\  is the result, then \ ``res.deter``\  gives fully determined factors, \ ``res.dterm``\  gives determined terms of partially determinaed factors, \ ``res.nfacts``\  and \ ``res.nlead``\  give modular factors and leading coefficients corresponding to undetermined factors.


