.. index:: PrimitiveRatRicDE

.. _l5072696d69746976655261745269634445:

PrimitiveRatRicDE(F, UP, L, LQ)
===============================

:viewcode:`riccati.spad line 1 <riccati.spad#L1>` :editcode:`[edit on github] <riccati.spad#L1>`

* F: Join(\ :ref:`Field <l4669656c64>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ )

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  F

* L: \ :ref:`LinearOrdinaryDifferentialOperatorCategory <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7243617465676f7279>`\  UP

* LQ: \ :ref:`LinearOrdinaryDifferentialOperatorCategory <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7243617465676f7279>`\  \ :ref:`Fraction <l4672616374696f6e>`\  UP


In-field solution of Riccati equations, primitive case.


.. _l5072696d69746976655261745269634445-6368616e6765566172:

.. index::
   pair: PrimitiveRatRicDE; changeVar

:spadfun:`changeVar`\: (L, \ :ref:`Fraction <l4672616374696f6e>`\  UP) -> L 
  \ ``changeVar(+/[ai D^i], a)``\  returns the operator \ ``+/[ai (D+a)^i]``\ .


.. index::
   pair: PrimitiveRatRicDE; changeVar

:spadfun:`changeVar`\: (L, UP) -> L 
  \ ``changeVar(+/[ai D^i], a)``\  returns the operator \ ``+/[ai (D+a)^i]``\ .

.. _l5072696d69746976655261745269634445-636f6e7374616e74436f656666696369656e745269634445:

.. index::
   pair: PrimitiveRatRicDE; constantCoefficientRicDE

:spadfun:`constantCoefficientRicDE`\: (L, UP -> \ :ref:`List <l4c697374>`\  F) -> \ :ref:`List <l4c697374>`\  Record(constant: F, eq: L) 
  \ ``constantCoefficientRicDE(op, ric)``\  returns \ ``[[a1, L1], [a2, L2], ... , [ak, Lk]]``\  such that any rational solution with no polynomial part of the associated Riccati equation of \ ``op y = 0``\  must be one of the \ ``ai``\ \ ``'s``\  in which case the equation for \ ``z = y e^{-int ai}``\  is \ ``Li z = 0``\ . \ ``ric``\  is a Riccati equation solver over \ ``F``\ , whose input is the associated linear equation.

.. _l5072696d69746976655261745269634445-64656e6f6d5269634445:

.. index::
   pair: PrimitiveRatRicDE; denomRicDE

:spadfun:`denomRicDE`\: L -> UP 
  \ ``denomRicDE(op)``\  returns a polynomial \ ``d``\  such that any rational solution of the associated Riccati equation of \ ``op y = 0``\  is of the form \ ``p/d + q'/q + r``\  for some polynomials \ ``p``\  and \ ``q``\  and a reduced \ ``r``\ . Also, \ ``deg(p) < deg(d)``\  and {\ ``gcd``\ (\ ``d``\ , \ ``q``\ ) = 1}.

.. _l5072696d69746976655261745269634445-6c656164696e67436f656666696369656e745269634445:

.. index::
   pair: PrimitiveRatRicDE; leadingCoefficientRicDE

:spadfun:`leadingCoefficientRicDE`\: L -> \ :ref:`List <l4c697374>`\  Record(deg: \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , eq: UP) 
  \ ``leadingCoefficientRicDE(op)``\  returns \ ``[[m1, p1], [m2, p2], ... , [mk, pk]]``\  such that the polynomial part of any rational solution of the associated Riccati equation of \ ``op y = 0``\  must have degree \ ``mj``\  for some \ ``j``\ , and its leading coefficient is then a zero of \ ``pj``\ . In addition, \ ``m1>m2> ... >mk``\ .

.. _l5072696d69746976655261745269634445-706f6c795269634445:

.. index::
   pair: PrimitiveRatRicDE; polyRicDE

:spadfun:`polyRicDE`\: (L, UP -> \ :ref:`List <l4c697374>`\  F) -> \ :ref:`List <l4c697374>`\  Record(poly: UP, eq: L) 
  \ ``polyRicDE(op, zeros)``\  returns \ ``[[p1, L1], [p2, L2], ... , [pk, Lk]]``\  such that the polynomial part of any rational solution of the associated Riccati equation of \ ``op y=0``\  must be one of the \ ``pi``\ \ ``'s``\  (up to the constant coefficient), in which case the equation for \ ``z=y e^{-int p}``\  is \ ``Li z =0``\ . \ ``zeros``\  is a zero finder in \ ``UP``\ .

.. _l5072696d69746976655261745269634445-73696e675269634445:

.. index::
   pair: PrimitiveRatRicDE; singRicDE

:spadfun:`singRicDE`\: (L, (UP, \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  UP) -> \ :ref:`List <l4c697374>`\  UP, UP -> \ :ref:`Factored <l466163746f726564>`\  UP) -> \ :ref:`List <l4c697374>`\  Record(frac: \ :ref:`Fraction <l4672616374696f6e>`\  UP, eq: L) 
  \ ``singRicDE(op, zeros, ezfactor)``\  returns \ ``[[f1, L1], [f2, L2], ... , [fk, Lk]]``\  such that the singular part of any rational solution of the associated Riccati equation of \ ``op y=0``\  must be one of the \ ``fi``\ \ ``'s``\  (up to the constant coefficient), in which case the equation for \ ``z=y e^{-int p}``\  is \ ``Li z=0``\ . \ ``zeros(C(x), H(x, y))``\  returns all the \ ``P_i(x)``\ \ ``'s``\  such that \ ``H(x, P_i(x)) = 0 modulo C(x)``\ . Argument \ ``ezfactor``\  is a factorisation in \ ``UP``\ , not necessarily into irreducibles.


