.. index:: ChineseRemainderToolsForIntegralBases

.. _l4368696e65736552656d61696e646572546f6f6c73466f72496e74656772616c4261736573:

ChineseRemainderToolsForIntegralBases(K, R, UP)
===============================================

:viewcode:`padiclib.spad line 88 <padiclib.spad#L88>` :editcode:`[edit on github] <padiclib.spad#L88>`

* K: \ :ref:`FiniteFieldCategory <l46696e6974654669656c6443617465676f7279>`\ 

* R: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  K

* UP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  R


Author: Clifton Williamson Date Created: 9 August 1993 Basic Operations: chineseRemainder, factorList Related Domains: PAdicWildFunctionFieldIntegralBasis(\ ``K``\ , \ ``R``\ , UP, \ ``F``\ ) Also See: WildFunctionFieldIntegralBasis, FunctionFieldIntegralBasis AMS Classifications: Keywords: function field, finite field, integral basis Examples: References: Description:


.. _l4368696e65736552656d61696e646572546f6f6c73466f72496e74656772616c4261736573-6368696e65736552656d61696e646572:

.. index::
   pair: ChineseRemainderToolsForIntegralBases; chineseRemainder

:spadfun:`chineseRemainder`\: (\ :ref:`List <l4c697374>`\  UP, \ :ref:`List <l4c697374>`\  Record(basis: \ :ref:`Matrix <l4d6174726978>`\  R, basisDen: R, basisInv: \ :ref:`Matrix <l4d6174726978>`\  R), \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> Record(basis: \ :ref:`Matrix <l4d6174726978>`\  R, basisDen: R, basisInv: \ :ref:`Matrix <l4d6174726978>`\  R) 
  \ ``chineseRemainder(lu, lr, n)``\  \undocumented

.. _l4368696e65736552656d61696e646572546f6f6c73466f72496e74656772616c4261736573-666163746f724c697374:

.. index::
   pair: ChineseRemainderToolsForIntegralBases; factorList

:spadfun:`factorList`\: (K, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  \ :ref:`SparseUnivariatePolynomial <l537061727365556e6976617269617465506f6c796e6f6d69616c>`\  K 
  \ ``factorList(k, n, m, j)``\  \undocumented

.. _l4368696e65736552656d61696e646572546f6f6c73466f72496e74656772616c4261736573-6c697374436f6e6a75676174654261736573:

.. index::
   pair: ChineseRemainderToolsForIntegralBases; listConjugateBases

:spadfun:`listConjugateBases`\: (Record(basis: \ :ref:`Matrix <l4d6174726978>`\  R, basisDen: R, basisInv: \ :ref:`Matrix <l4d6174726978>`\  R), \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  Record(basis: \ :ref:`Matrix <l4d6174726978>`\  R, basisDen: R, basisInv: \ :ref:`Matrix <l4d6174726978>`\  R) 
  \ ``listConjugateBases(bas, q, n)``\  returns the list \ ``[bas, bas^Frob, bas^(Frob^2), ...bas^(Frob^(n-1))]``\ , where \ ``Frob``\  raises the coefficients of all polynomials appearing in the basis \ ``bas``\  to the \ ``q``\ th power.


