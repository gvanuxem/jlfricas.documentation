.. index:: CancellationAbelianMonoid

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964:

CancellationAbelianMonoid
=========================

:viewcode:`catdef.spad line 166 <catdef.spad#L166>` :editcode:`[edit on github] <catdef.spad#L166>`


This is an \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\  with the cancellation property, i.e. \ `` a+b = a+c => b=c ``\ . This is formalised by the partial subtraction operator, which satisfies the axioms listed below:  


.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-30:

\ :ref:`0 <l4162656c69616e4d6f6e6f6964-30>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-2a:

\ :ref:`\* <l4162656c69616e4d6f6e6f6964-2a>`\ \: (\ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`\* <l4162656c69616e53656d6947726f7570-2a>`\ \: (\ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ , %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-2b:

\ :ref:`+ <l4162656c69616e53656d6947726f7570-2b>`\ \: (%, %) -> % 
  from \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-6f70706f736974653f:

\ :ref:`opposite? <l4162656c69616e4d6f6e6f6964-6f70706f736974653f>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-73616d706c65:

\ :ref:`sample <l4162656c69616e4d6f6e6f6964-73616d706c65>`\ \: % 
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-7375627472616374496643616e:

.. index::
   pair: CancellationAbelianMonoid; subtractIfCan

:spadfun:`subtractIfCan`\: (%, %) -> Union(%, failed) 
  \ ``subtractIfCan(x, y)``\  returns an element \ ``z``\  such that \ ``z+y=x``\  or "failed" if no such element exists.

.. _l43616e63656c6c6174696f6e4162656c69616e4d6f6e6f6964-7a65726f3f:

\ :ref:`zero? <l4162656c69616e4d6f6e6f6964-7a65726f3f>`\ \: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\ 


\ :ref:`AbelianMonoid <l4162656c69616e4d6f6e6f6964>`\  

\ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\  

\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

