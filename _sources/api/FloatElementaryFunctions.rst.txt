.. index:: FloatElementaryFunctions

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73:

FloatElementaryFunctions
========================

:viewcode:`flopak.spad line 36 <flopak.spad#L36>` :editcode:`[edit on github] <flopak.spad#L36>`


undocumented


.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-65787031:

.. index::
   pair: FloatElementaryFunctions; exp1

:spadfun:`exp1`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``exp1(b)``\  computes approximation to exp(1) accurate to at least \ ``b``\  bits.

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-657870:

.. index::
   pair: FloatElementaryFunctions; exp

:spadfun:`exp`\: (Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``exp(x, b)``\  computes approximation to exp(\ ``x``\ ) accurate to at least \ ``b``\  bits.

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-6578705f66726163:

.. index::
   pair: FloatElementaryFunctions; exp_frac

:spadfun:`exp_frac`\: (\ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-6578705f736572696573:

.. index::
   pair: FloatElementaryFunctions; exp_series

:spadfun:`exp_series`\: (Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-6c6f673130:

.. index::
   pair: FloatElementaryFunctions; log10

:spadfun:`log10`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``log10(b)``\  computes approximation to log(10) accurate to at least \ ``b``\  bits.

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-6c6f6732:

.. index::
   pair: FloatElementaryFunctions; log2

:spadfun:`log2`\: \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\  -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``log2(b)``\  computes approximation to log(2) accurate to at least \ ``b``\  bits.

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-6c6f67:

.. index::
   pair: FloatElementaryFunctions; log

:spadfun:`log`\: (Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``log(x, b)``\  computes approximation to exp(\ ``x``\ ) accurate to at least \ ``b``\  bits.

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-6c6f675f736572696573:

.. index::
   pair: FloatElementaryFunctions; log_series

:spadfun:`log_series`\: (Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-6d696e7573:

.. index::
   pair: FloatElementaryFunctions; minus

:spadfun:`minus`\: (Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``minus(x, y, b)``\  computes approximation to \ ``x - y``\  accurate to at least \ ``b``\  bits.

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-706c7573:

.. index::
   pair: FloatElementaryFunctions; plus

:spadfun:`plus`\: (Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``plus(x, y, b)``\  computes approximation to \ ``x + y``\  accurate to at least \ ``b``\  bits.

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-71756f7469656e74:

.. index::
   pair: FloatElementaryFunctions; quotient

:spadfun:`quotient`\: (Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``quotient(x, y, b)``\  computes approximation to \ ``x/y``\  accurate to at least \ ``b``\  bits.

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-726f756e64:

.. index::
   pair: FloatElementaryFunctions; round

:spadfun:`round`\: Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) -> \ :ref:`Integer <l496e7465676572>`\  
  \ ``round(x)``\  returns integer closest to \ ``x``\ .

.. _l466c6f6174456c656d656e7461727946756e6374696f6e73-74696d6573:

.. index::
   pair: FloatElementaryFunctions; times

:spadfun:`times`\: (Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ), \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> Record(mantissa: \ :ref:`Integer <l496e7465676572>`\ , exponent: \ :ref:`Integer <l496e7465676572>`\ ) 
  \ ``times(x, y, b)``\  computes approximation to \ ``x*y``\  accurate to at least \ ``b``\  bits.


