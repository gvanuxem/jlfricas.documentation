.. index:: Magma

.. _l4d61676d61:

Magma
=====

:viewcode:`naalgc.spad line 1 <naalgc.spad#L1>` :editcode:`[edit on github] <naalgc.spad#L1>`


Magma is the class of all multiplicative magmas, i.e. sets with a binary operation.


.. _l4d61676d61-2a:

.. index::
   pair: Magma; *

:spadfun:`\*`\: (%, %) -> % 
  \ ``a*b``\  is the product of \ ``a``\  and \ ``b``\  in a set with a binary operation.

.. _l4d61676d61-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4d61676d61-5e:

.. index::
   pair: Magma; ^

:spadfun:`^`\: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  \ ``a^n``\  returns the \ ``n``\ \ ``-``\ th power of \ ``a``\ , defined by repeated squaring.

.. _l4d61676d61-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l4d61676d61-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l4d61676d61-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l4d61676d61-6c656674506f776572:

.. index::
   pair: Magma; leftPower

:spadfun:`leftPower`\: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  \ ``leftPower(a, n)``\  returns the \ ``n``\ \ ``-``\ th left power of \ ``a``\ , i.e. \ ``leftPower(a, n) := a * leftPower(a, n-1)``\  and \ ``leftPower(a, 1) := a``\ .

.. _l4d61676d61-7269676874506f776572:

.. index::
   pair: Magma; rightPower

:spadfun:`rightPower`\: (%, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> % 
  \ ``rightPower(a, n)``\  returns the \ ``n``\ \ ``-``\ th right power of \ ``a``\ , i.e. \ ``rightPower(a, n) := rightPower(a, n-1) * a``\  and \ ``rightPower(a, 1) := a``\ .


\ :ref:`BasicType <l426173696354797065>`\  

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`SetCategory <l53657443617465676f7279>`\  

