.. index:: ElementaryIntegration

.. _l456c656d656e74617279496e746567726174696f6e:

ElementaryIntegration(R, F)
===========================

:viewcode:`intef.spad line 1 <intef.spad#L1>` :editcode:`[edit on github] <intef.spad#L1>`

* R: Join(\ :ref:`GcdDomain <l476364446f6d61696e>`\ , \ :ref:`Comparable <l436f6d70617261626c65>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ , \ :ref:`PolynomialFactorizationExplicit <l506f6c796e6f6d69616c466163746f72697a6174696f6e4578706c69636974>`\ , \ :ref:`RetractableTo <l5265747261637461626c65546f>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`LinearlyExplicitOver <l4c696e6561726c794578706c696369744f766572>`\  \ :ref:`Integer <l496e7465676572>`\ )

* F: Join(\ :ref:`AlgebraicallyClosedField <l416c67656272616963616c6c79436c6f7365644669656c64>`\ , \ :ref:`TranscendentalFunctionCategory <l5472616e7363656e64656e74616c46756e6374696f6e43617465676f7279>`\ , \ :ref:`FunctionSpace <l46756e6374696f6e5370616365>`\  R)


This package provides functions for integration, limited integration, extended integration and the risch differential equation for elemntary functions.


.. _l456c656d656e74617279496e746567726174696f6e-6c66657874656e646564696e74:

.. index::
   pair: ElementaryIntegration; lfextendedint

:spadfun:`lfextendedint`\: (F, \ :ref:`Symbol <l53796d626f6c>`\ , F) -> Union(Record(ratpart: F, coeff: F), failed) 
  \ ``lfextendedint(f, x, g)``\  returns functions \ ``[h, c]``\  such that \ ``dh/dx = f - cg``\ , if (\ ``h``\ , \ ``c``\ ) exist, "failed" otherwise.

.. _l456c656d656e74617279496e746567726174696f6e-6c66696e74656772617465:

.. index::
   pair: ElementaryIntegration; lfintegrate

:spadfun:`lfintegrate`\: (F, \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`IntegrationResult <l496e746567726174696f6e526573756c74>`\  F 
  \ ``lfintegrate(f, x)``\  = \ ``g``\  such that \ ``dg/dx = f``\ .


