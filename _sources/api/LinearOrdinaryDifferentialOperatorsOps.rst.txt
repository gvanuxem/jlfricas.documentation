.. index:: LinearOrdinaryDifferentialOperatorsOps

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72734f7073:

LinearOrdinaryDifferentialOperatorsOps(A, L)
============================================

:viewcode:`lodo.spad line 55 <lodo.spad#L55>` :editcode:`[edit on github] <lodo.spad#L55>`

* A: \ :ref:`Field <l4669656c64>`\ 

* L: \ :ref:`LinearOrdinaryDifferentialOperatorCategory <l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f7243617465676f7279>`\  A


\ ``LinearOrdinaryDifferentialOperatorsOps``\  provides symmetric products and sums for linear ordinary differential operators.


.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72734f7073-64697265637453756d:

.. index::
   pair: LinearOrdinaryDifferentialOperatorsOps; directSum

:spadfun:`directSum`\: (L, L, A -> A) -> L 
  \ ``directSum(a, b, D)``\  computes an operator \ ``c``\  of minimal order such that the nullspace of \ ``c``\  is generated by all the sums of a solution of \ ``a``\  by a solution of \ ``b``\ . \ ``D``\  is the derivation to use.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72734f7073-73796d6d6574726963506f776572:

.. index::
   pair: LinearOrdinaryDifferentialOperatorsOps; symmetricPower

:spadfun:`symmetricPower`\: (L, \ :ref:`NonNegativeInteger <l4e6f6e4e65676174697665496e7465676572>`\ , A -> A) -> L 
  \ ``symmetricPower(a, n, D)``\  computes an operator \ ``c``\  of minimal order such that the nullspace of \ ``c``\  is generated by all the products of \ ``n``\  solutions of \ ``a``\ . \ ``D``\  is the derivation to use.

.. _l4c696e6561724f7264696e617279446966666572656e7469616c4f70657261746f72734f7073-73796d6d657472696350726f64756374:

.. index::
   pair: LinearOrdinaryDifferentialOperatorsOps; symmetricProduct

:spadfun:`symmetricProduct`\: (L, L, A -> A) -> L 
  \ ``symmetricProduct(a, b, D)``\  computes an operator \ ``c``\  of minimal order such that the nullspace of \ ``c``\  is generated by all the products of a solution of \ ``a``\  by a solution of \ ``b``\ . \ ``D``\  is the derivation to use.


