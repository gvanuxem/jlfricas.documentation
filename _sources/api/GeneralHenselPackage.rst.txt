.. index:: GeneralHenselPackage

.. _l47656e6572616c48656e73656c5061636b616765:

GeneralHenselPackage(RP, TP)
============================

:viewcode:`ghensel.spad line 1 <ghensel.spad#L1>` :editcode:`[edit on github] <ghensel.spad#L1>`

* RP: \ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ 

* TP: \ :ref:`UnivariatePolynomialCategory <l556e6976617269617465506f6c796e6f6d69616c43617465676f7279>`\  RP


Author : \ ``P``\ .Gianni General Hensel Lifting Used for Factorization of bivariate polynomials over a finite field.


.. _l47656e6572616c48656e73656c5061636b616765-636f6d706c65746548656e73656c:

.. index::
   pair: GeneralHenselPackage; completeHensel

:spadfun:`completeHensel`\: (TP, \ :ref:`List <l4c697374>`\  TP, RP, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> \ :ref:`List <l4c697374>`\  TP 
  \ ``completeHensel(pol, lfact, prime, bound)``\  lifts \ ``lfact``\ , the factorization mod \ ``prime``\  of \ ``pol``\ , to the factorization mod prime^k>bound. Factors are recombined on the way.

.. _l47656e6572616c48656e73656c5061636b616765-48656e73656c4c696674:

.. index::
   pair: GeneralHenselPackage; HenselLift

:spadfun:`HenselLift`\: (TP, \ :ref:`List <l4c697374>`\  TP, RP, \ :ref:`PositiveInteger <l506f736974697665496e7465676572>`\ ) -> Record(plist: \ :ref:`List <l4c697374>`\  TP, modulo: RP) 
  \ ``HenselLift(pol, lfacts, prime, bound)``\  lifts \ ``lfacts``\ , that are the factors of \ ``pol``\  mod \ ``prime``\ , to factors of \ ``pol``\  mod prime^k > bound. No recombining is done .

.. _l47656e6572616c48656e73656c5061636b616765-726564756374696f6e:

.. index::
   pair: GeneralHenselPackage; reduction

:spadfun:`reduction`\: (TP, RP) -> TP 
  \ ``reduction(u, pol)``\  computes the symmetric reduction of \ ``u``\  mod pol


