.. index:: RetractableTo

.. _l5265747261637461626c65546f:

RetractableTo S
===============

:viewcode:`coerce.spad line 53 <coerce.spad#L53>` :editcode:`[edit on github] <coerce.spad#L53>`

* S: \ :ref:`Type <l54797065>`\ 


A is retractable to \ ``B``\  means that some elements of A can be converted into elements of \ ``B``\  and any element of \ ``B``\  can be converted into an element of A.


.. _l5265747261637461626c65546f-636f65726365:

\ :ref:`coerce <l436f65726369626c6546726f6d-636f65726365>`\ \: S -> % 
  from \ :ref:`CoercibleFrom <l436f65726369626c6546726f6d>`\  S

.. _l5265747261637461626c65546f-72657472616374:

.. index::
   pair: RetractableTo; retract

:spadfun:`retract`\: % -> S 
  \ ``retract(a)``\  transforms a into an element of \ ``S``\  if possible. Error: if a cannot be made into an element of \ ``S``\ .

.. _l5265747261637461626c65546f-72657472616374496643616e:

.. index::
   pair: RetractableTo; retractIfCan

:spadfun:`retractIfCan`\: % -> Union(S, failed) 
  \ ``retractIfCan(a)``\  transforms a into an element of \ ``S``\  if possible. Returns "failed" if a cannot be made into an element of \ ``S``\ .


\ :ref:`CoercibleFrom <l436f65726369626c6546726f6d>`\  S 

