.. index:: PartialFractionPackage

.. _l5061727469616c4672616374696f6e5061636b616765:

PartialFractionPackage R
========================

:viewcode:`pfr.spad line 327 <pfr.spad#L327>` :editcode:`[edit on github] <pfr.spad#L327>`

* R: Join(\ :ref:`EuclideanDomain <l4575636c696465616e446f6d61696e>`\ , \ :ref:`PolynomialFactorizationExplicit <l506f6c796e6f6d69616c466163746f72697a6174696f6e4578706c69636974>`\ , \ :ref:`CharacteristicZero <l43686172616374657269737469635a65726f>`\ )


The package \ :ref:`PartialFractionPackage <l5061727469616c4672616374696f6e5061636b616765>`\  gives an easier to use interface to \ :ref:`PartialFraction <l5061727469616c4672616374696f6e>`\ . The user gives a fraction of polynomials, and a variable and the package converts it to the proper datatype for the \ :ref:`PartialFraction <l5061727469616c4672616374696f6e>`\  domain.


.. _l5061727469616c4672616374696f6e5061636b616765-7061727469616c4672616374696f6e:

.. index::
   pair: PartialFractionPackage; partialFraction

:spadfun:`partialFraction`\: (\ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`Any <l416e79>`\  
  \ ``partialFraction(rf, var)``\  returns the partial fraction decomposition of the rational function \ ``rf``\  with respect to the variable var.


.. index::
   pair: PartialFractionPackage; partialFraction

:spadfun:`partialFraction`\: (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Factored <l466163746f726564>`\  \ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  R, \ :ref:`Symbol <l53796d626f6c>`\ ) -> \ :ref:`Any <l416e79>`\  
  \ ``partialFraction(num, facdenom, var)``\  returns the partial fraction decomposition of the rational function whose numerator is \ ``num``\  and whose factored denominator is \ ``facdenom``\  with respect to the variable var.


