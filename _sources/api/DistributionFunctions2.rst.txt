.. index:: DistributionFunctions2

.. _l446973747269627574696f6e46756e6374696f6e7332:

DistributionFunctions2(R1, R2)
==============================

:viewcode:`distro.spad line 1122 <distro.spad#L1122>` :editcode:`[edit on github] <distro.spad#L1122>`

* R1: \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 

* R2: \ :ref:`CommutativeRing <l436f6d6d7574617469766552696e67>`\ 


A package to map distributions between different rings.


.. _l446973747269627574696f6e46756e6374696f6e7332-636f65726365:

.. index::
   pair: DistributionFunctions2; coerce

:spadfun:`coerce`\: \ :ref:`Distribution <l446973747269627574696f6e>`\  R1 -> \ :ref:`Distribution <l446973747269627574696f6e>`\  R2 
  \ ``coerce(x)``\  coerces a distribution from the ring \ ``R1``\  to \ ``R2``\ .

.. _l446973747269627574696f6e46756e6374696f6e7332-6d6170616c6c:

.. index::
   pair: DistributionFunctions2; mapall

:spadfun:`mapall`\: (R1 -> R2, \ :ref:`Distribution <l446973747269627574696f6e>`\  R1) -> \ :ref:`Distribution <l446973747269627574696f6e>`\  R2 
  \ ``map(f, x)``\  maps the moments and cumulants from the ring \ ``R1``\  to \ ``R2``\ .

.. _l446973747269627574696f6e46756e6374696f6e7332-52315f746f5f52325f636f657263696f6e:

.. index::
   pair: DistributionFunctions2; R1_to_R2_coercion

:spadfun:`R1_to_R2_coercion`\: R1 -> R2 
  \ ``R1_to_R2_coercion should``\  be local but conditional


