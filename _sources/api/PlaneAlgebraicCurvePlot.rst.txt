.. index:: PlaneAlgebraicCurvePlot

.. _l506c616e65416c676562726169634375727665506c6f74:

PlaneAlgebraicCurvePlot
=======================

:viewcode:`acplot.spad line 48 <acplot.spad#L48>` :editcode:`[edit on github] <acplot.spad#L48>`


Plot a NON-SINGULAR plane algebraic curve \ ``p``\ (\ ``x``\ , \ ``y``\ ) = 0. Author: Clifton \ ``J``\ . Williamson Date Created: Fall 1988 Keywords: algebraic curve, non-singular, plot Examples: References:


.. _l506c616e65416c676562726169634375727665506c6f74-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 

.. _l506c616e65416c676562726169634375727665506c6f74-6c6973744272616e63686573:

\ :ref:`listBranches <l506c6f747461626c65506c616e65437572766543617465676f7279-6c6973744272616e63686573>`\ \: % -> \ :ref:`List <l4c697374>`\  \ :ref:`List <l4c697374>`\  \ :ref:`Point <l506f696e74>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\  
  from \ :ref:`PlottablePlaneCurveCategory <l506c6f747461626c65506c616e65437572766543617465676f7279>`\ 

.. _l506c616e65416c676562726169634375727665506c6f74-6d616b65536b65746368:

.. index::
   pair: PlaneAlgebraicCurvePlot; makeSketch

:spadfun:`makeSketch`\: (\ :ref:`Polynomial <l506f6c796e6f6d69616c>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Symbol <l53796d626f6c>`\ , \ :ref:`Segment <l5365676d656e74>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ , \ :ref:`Segment <l5365676d656e74>`\  \ :ref:`Fraction <l4672616374696f6e>`\  \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  \ ``makeSketch(p, x, y, a..b, c..d)``\  creates an ACPLOT of the curve \ ``p = 0``\  in the region \ *a <= x <= b, c <= y <= d*\ . More specifically, 'makeSketch' plots a non-singular algebraic curve \ ``p = 0``\  in an rectangular region \ *xMin <= x <= xMax*\ , \ *yMin <= y <= yMax*\ . The user inputs \ ``makeSketch(p, x, y, xMin..xMax, yMin..yMax)``\ . Here \ ``p``\  is a polynomial in the variables \ ``x``\  and \ ``y``\  with integer coefficients (\ ``p``\  belongs to the domain \ ``Polynomial Integer``\ ). The case where \ ``p``\  is a polynomial in only one of the variables is allowed. The variables \ ``x``\  and \ ``y``\  are input to specify the the coordinate axes. The horizontal axis is the \ ``x``\ -axis and the vertical axis is the \ ``y``\ -axis. The rational numbers xMin, ..., yMax specify the boundaries of the region in which the curve is to be plotted.

.. _l506c616e65416c676562726169634375727665506c6f74-726566696e65:

.. index::
   pair: PlaneAlgebraicCurvePlot; refine

:spadfun:`refine`\: (%, \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\ ) -> % 
  \ ``refine(p, x)``\  is undocumented.

.. _l506c616e65416c676562726169634375727665506c6f74-7852616e6765:

\ :ref:`xRange <l506c6f747461626c65506c616e65437572766543617465676f7279-7852616e6765>`\ \: % -> \ :ref:`Segment <l5365676d656e74>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\  
  from \ :ref:`PlottablePlaneCurveCategory <l506c6f747461626c65506c616e65437572766543617465676f7279>`\ 

.. _l506c616e65416c676562726169634375727665506c6f74-7952616e6765:

\ :ref:`yRange <l506c6f747461626c65506c616e65437572766543617465676f7279-7952616e6765>`\ \: % -> \ :ref:`Segment <l5365676d656e74>`\  \ :ref:`DoubleFloat <l446f75626c65466c6f6174>`\  
  from \ :ref:`PlottablePlaneCurveCategory <l506c6f747461626c65506c616e65437572766543617465676f7279>`\ 


\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  

\ :ref:`PlottablePlaneCurveCategory <l506c6f747461626c65506c616e65437572766543617465676f7279>`\  

