.. index:: UniversalSegment

.. _l556e6976657273616c5365676d656e74:

UniversalSegment S
==================

:viewcode:`seg.spad line 288 <seg.spad#L288>` :editcode:`[edit on github] <seg.spad#L288>`

* S: \ :ref:`Type <l54797065>`\ 


This domain provides segments which may be half open. That is, ranges of the form \ ``a..``\  or \ ``a..b``\ .


.. _l556e6976657273616c5365676d656e74-2b:

\ :ref:`+ <l5365676d656e7443617465676f7279-2b>`\ \: (%, S) -> % if S has \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S


\ :ref:`+ <l5365676d656e7443617465676f7279-2b>`\ \: (S, %) -> % if S has \ :ref:`AbelianSemiGroup <l4162656c69616e53656d6947726f7570>`\ 
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S

.. _l556e6976657273616c5365676d656e74-2d:

\ :ref:`- <l5365676d656e7443617465676f7279-2d>`\ \: (%, S) -> % if S has \ :ref:`AbelianGroup <l4162656c69616e47726f7570>`\ 
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S

.. _l556e6976657273616c5365676d656e74-3d:

\ :ref:`= <l426173696354797065-3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l556e6976657273616c5365676d656e74-7e3d:

\ :ref:`~= <l426173696354797065-7e3d>`\ \: (%, %) -> \ :ref:`Boolean <l426f6f6c65616e>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`BasicType <l426173696354797065>`\ 

.. _l556e6976657273616c5365676d656e74-4259:

\ :ref:`BY <l5365676d656e7443617465676f7279-4259>`\ \: (%, \ :ref:`Integer <l496e7465676572>`\ ) -> % 
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S

.. _l556e6976657273616c5365676d656e74-636f65726365:

\ :ref:`coerce <l436f65726369626c65546f-636f65726365>`\ \: % -> \ :ref:`OutputForm <l4f7574707574466f726d>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\ 


.. index::
   pair: UniversalSegment; coerce

:spadfun:`coerce`\: \ :ref:`Segment <l5365676d656e74>`\  S -> % 
  \ ``coerce(x)``\  allows \ :ref:`Segment <l5365676d656e74>`\  values to be used as \%.

.. _l556e6976657273616c5365676d656e74-636f6e76657274:

\ :ref:`convert <l436f6e7665727469626c65546f-636f6e76657274>`\ \: % -> \ :ref:`InputForm <l496e707574466f726d>`\  if S has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 
  from \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 


\ :ref:`convert <l5365676d656e7443617465676f7279-636f6e76657274>`\ \: S -> % 
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S

.. _l556e6976657273616c5365676d656e74-657870616e64:

\ :ref:`expand <l5365676d656e74457870616e73696f6e43617465676f7279-657870616e64>`\ \: % -> \ :ref:`Stream <l53747265616d>`\  S if S has \ :ref:`OrderedRing <l4f72646572656452696e67>`\ 
  from \ :ref:`SegmentExpansionCategory <l5365676d656e74457870616e73696f6e43617465676f7279>`\ (S, \ :ref:`Stream <l53747265616d>`\  S)


\ :ref:`expand <l5365676d656e74457870616e73696f6e43617465676f7279-657870616e64>`\ \: \ :ref:`List <l4c697374>`\  % -> \ :ref:`Stream <l53747265616d>`\  S if S has \ :ref:`OrderedRing <l4f72646572656452696e67>`\ 
  from \ :ref:`SegmentExpansionCategory <l5365676d656e74457870616e73696f6e43617465676f7279>`\ (S, \ :ref:`Stream <l53747265616d>`\  S)

.. _l556e6976657273616c5365676d656e74-6861734869:

.. index::
   pair: UniversalSegment; hasHi

:spadfun:`hasHi`\: % -> \ :ref:`Boolean <l426f6f6c65616e>`\  
  \ ``hasHi(s)``\  tests whether the segment \ ``s``\  has an upper bound.

.. _l556e6976657273616c5365676d656e74-68696768:

\ :ref:`high <l5365676d656e7443617465676f7279-68696768>`\ \: % -> S 
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S

.. _l556e6976657273616c5365676d656e74-696e6372:

\ :ref:`incr <l5365676d656e7443617465676f7279-696e6372>`\ \: % -> \ :ref:`Integer <l496e7465676572>`\  
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S

.. _l556e6976657273616c5365676d656e74-6c61746578:

\ :ref:`latex <l53657443617465676f7279-6c61746578>`\ \: % -> \ :ref:`String <l537472696e67>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 
  from \ :ref:`SetCategory <l53657443617465676f7279>`\ 

.. _l556e6976657273616c5365676d656e74-6c6f77:

\ :ref:`low <l5365676d656e7443617465676f7279-6c6f77>`\ \: % -> S 
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S

.. _l556e6976657273616c5365676d656e74-6d6170:

\ :ref:`map <l5365676d656e74457870616e73696f6e43617465676f7279-6d6170>`\ \: (S -> S, %) -> \ :ref:`Stream <l53747265616d>`\  S if S has \ :ref:`OrderedRing <l4f72646572656452696e67>`\ 
  from \ :ref:`SegmentExpansionCategory <l5365676d656e74457870616e73696f6e43617465676f7279>`\ (S, \ :ref:`Stream <l53747265616d>`\  S)

.. _l556e6976657273616c5365676d656e74-72657665727365:

\ :ref:`reverse <l5365676d656e7443617465676f7279-72657665727365>`\ \: % -> % if S has \ :ref:`OrderedRing <l4f72646572656452696e67>`\ 
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S

.. _l556e6976657273616c5365676d656e74-7365676d656e74:

\ :ref:`segment <l5365676d656e7443617465676f7279-7365676d656e74>`\ \: (S, S) -> % 
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S

.. _l556e6976657273616c5365676d656e74-5345474d454e54:

\ :ref:`SEGMENT <l5365676d656e7443617465676f7279-5345474d454e54>`\ \: (S, S) -> % 
  from \ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S


.. index::
   pair: UniversalSegment; segment

:spadfun:`segment`\: S -> % 
  \ ``segment(l)``\  is an alternate way to construct the segment \ ``l..``\ .


.. index::
   pair: UniversalSegment; SEGMENT

:spadfun:`SEGMENT`\: S -> % 
  \ ``l..``\  produces a half open segment, that is, one with no upper bound.


\ :ref:`BasicType <l426173696354797065>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`CoercibleTo <l436f65726369626c65546f>`\  \ :ref:`OutputForm <l4f7574707574466f726d>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

\ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\  if S has \ :ref:`ConvertibleTo <l436f6e7665727469626c65546f>`\  \ :ref:`InputForm <l496e707574466f726d>`\ 

\ :ref:`SegmentCategory <l5365676d656e7443617465676f7279>`\  S 

\ :ref:`SegmentExpansionCategory <l5365676d656e74457870616e73696f6e43617465676f7279>`\ (S, \ :ref:`Stream <l53747265616d>`\  S) if S has \ :ref:`OrderedRing <l4f72646572656452696e67>`\ 

\ :ref:`SetCategory <l53657443617465676f7279>`\  if S has \ :ref:`SetCategory <l53657443617465676f7279>`\ 

